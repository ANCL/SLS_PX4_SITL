function xdot=FullQuasi0(t,x,Kv2,Kv6,M)
m=1.6;mp=0.16;L=1;G=10;J__1=0.03;J__2=0.03;J__3=0.03;
m0=M(1);mp0=M(2);L0=M(3);
Ts1 = [x(3) x(11)];

n3 = - Kv2(1,2)*(Ts1(2)) - Kv2(1,1)*(Ts1(1));
n3p = - Kv2(1,2)*(n3) - Kv2(1,1)*(Ts1(2));
n3pp = - Kv2(1,2)*(n3p) - Kv2(1,1)*(n3);
n3ppp = - Kv2(1,2)*(n3pp) - Kv2(1,1)*(n3p);
n3pppp = - Kv2(1,2)*(n3ppp) - Kv2(1,1)*(n3pp);
Ts = [x(1) x(9) -(G - n3) * sin(x(5)) / cos(x(5)) / cos(x(4)) ((n3p * cos(x(5)) * sin(x(5)) - x(13) * (G - n3)) * cos(x(4)) - sin(x(4)) * x(12) * cos(x(5)) * sin(x(5)) * (G - n3)) / cos(x(5)) ^ 2 / cos(x(4)) ^ 2 (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-((G - n3) * x(12) ^ 2 + n3pp) * cos(x(8)) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 - ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * m0 * L0 * (-0.4e1 / 0.3e1 * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + 0.4e1 / 0.3e1 * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) - (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) - (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 x(12) * ((0.2e1 * m0 * (-0.3e1 * x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 2 * sin(x(4)) + x(13) * x(12) * cos(x(7)) * cos(x(4)) ^ 3 * (G - n3) * cos(x(6)) - 0.2e1 * (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) * sin(x(4)) + (-cos(x(4)) * n3p * cos(x(8)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * cos(x(4)) * n3p) * x(12) * cos(x(4)) - (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * sin(x(4))) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (-0.3e1 * ((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 2 * sin(x(4)) - cos(x(4)) ^ 3 * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) + 0.2e1 * sin(x(4)) ^ 2 * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) + (x(13) * cos(x(4)) * (G - n3) * cos(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * x(13) * sin(x(8)) * cos(x(4)) * (G - n3)) * x(12) * cos(x(4)) - (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * sin(x(4)) + x(12) ^ 2 * cos(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * (-0.3e1 * (-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 2 * sin(x(4)) + ((-0.2e1 / 0.3e1 * x(13) * sin(x(8)) * cos(x(4)) * n3p * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * cos(x(4)) * (G - n3)) * cos(x(6)) + 0.2e1 / 0.3e1 * sin(x(6)) * x(13) * cos(x(8)) * cos(x(4)) * n3p) * cos(x(4)) ^ 2 - 0.2e1 * (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) * sin(x(4)) + (0.2e1 / 0.3e1 * cos(x(4)) * n3p * cos(x(8)) * sin(x(7)) * cos(x(6)) + 0.2e1 / 0.3e1 * sin(x(6)) * sin(x(8)) * cos(x(4)) * n3p) * x(12) * cos(x(4)) - (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * sin(x(4))) * cos(x(5)) ^ 2 + sin(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) - cos(x(4)) * (-0.4e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) * sin(x(4)) - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * (x(13) * sin(x(8)) * cos(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - x(13) * cos(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * cos(x(4)) + 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * sin(x(4)) + (G - n3) * (0.4e1 * cos(x(8)) * x(13) * x(12) * L0 * sin(x(5)) * cos(x(4)) * m0 * sin(x(7)) * cos(x(6)) + 0.4e1 * sin(x(6)) * x(13) * x(12) * L0 * sin(x(5)) * cos(x(4)) * m0 * sin(x(8)))) * cos(x(5)) + 0.4e1 * (G - n3) * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) * sin(x(4))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-sin(x(4)) * cos(x(6)) * cos(x(7)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * cos(x(4))) + 0.3e1 * (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 4 * sin(x(4))) + x(13) * ((-0.8e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 3 * sin(x(5)) + 0.2e1 * m0 * cos(x(5)) ^ 4 * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) - 0.6e1 * m0 * sin(x(5)) ^ 2 * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - 0.6e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) * sin(x(5)) - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * cos(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * cos(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((0.4e1 * cos(x(8)) * x(13) * x(12) * L0 * cos(x(5)) * sin(x(4)) * m0 * sin(x(7)) + x(13) ^ 2 * L0 * cos(x(5)) * cos(x(7)) * m0) * cos(x(6)) + 0.4e1 * sin(x(6)) * x(13) * x(12) * L0 * cos(x(5)) * sin(x(4)) * m0 * sin(x(8)))) * cos(x(5)) + cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * sin(x(5)) + (G - n3) ^ 2 * cos(x(6)) * cos(x(5)) * cos(x(7)) * (m0 + mp0)) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 * (-(cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * sin(x(5)) + cos(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + 0.3e1 * (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 4 / cos(x(4)) ^ 3 * sin(x(5))) + (sin(x(6)) * sin(x(7)) * x(15) + cos(x(6)) * sin(x(7)) * x(16) + x(14) * cos(x(7))) / cos(x(7)) * ((0.2e1 * m0 * (x(13) * x(12) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (-((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * sin(x(6)) - cos(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * sin(x(6)) + cos(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * ((-(sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * sin(x(6)) - cos(x(8)) * cos(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * (-(((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * sin(x(6)) - cos(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (-((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * sin(x(6)) + cos(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * sin(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * cos(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (-((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * sin(x(6)) + cos(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (-0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * sin(x(6)) - 0.4e1 / 0.3e1 * cos(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * x(13) ^ 2 * sin(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * (-(n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * sin(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * cos(x(6))) * cos(x(4)) + (G - n3) * (-(cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * sin(x(6)) + cos(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 - sin(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 * ((-cos(x(7)) * cos(x(4)) * sin(x(6)) + (sin(x(6)) * sin(x(7)) * sin(x(8)) + cos(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))))) + (cos(x(6)) * x(15) - sin(x(6)) * x(16)) * ((0.2e1 * m0 * (x(13) * x(12) * cos(x(6)) * cos(x(7)) * sin(x(8)) * (G - n3) * cos(x(4)) ^ 3 + ((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * cos(x(7)) - x(13) * x(12) * sin(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) * cos(x(4)) ^ 2 - (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * cos(x(7)) * cos(x(6)) * x(12) * cos(x(4)) + x(12) ^ 2 * cos(x(6)) * cos(x(7)) * cos(x(8)) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * ((sin(x(8)) * x(12) * cos(x(7)) * n3p - ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7))) * cos(x(6)) * cos(x(4)) ^ 3 - sin(x(4)) * (((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * cos(x(7)) + x(12) * sin(x(7)) * n3p) * cos(x(6)) * cos(x(4)) ^ 2 + ((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * cos(x(7)) + 0.3e1 / 0.2e1 * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * cos(x(6)) * cos(x(7)) * sin(x(8)) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * (-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * cos(x(7)) + sin(x(7)) * n3p / 0.2e1) * cos(x(6)) * x(13) * cos(x(4)) ^ 3 + ((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * cos(x(7)) + 0.4e1 / 0.3e1 * x(13) * x(12) * sin(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) * cos(x(4)) ^ 2 + 0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * cos(x(7)) * cos(x(6)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * cos(x(6)) * cos(x(7)) * cos(x(8)) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * sin(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * cos(x(7)) * cos(x(6)) * cos(x(4)) + (G - n3) * (cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * cos(x(7)) - x(13) ^ 2 * L0 * sin(x(5)) * sin(x(7)) * m0) * cos(x(6))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * cos(x(6)) * cos(x(7)) * cos(x(8)) * cos(x(4)) ^ 2 - cos(x(6)) * sin(x(5)) * sin(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 * ((-sin(x(7)) * cos(x(4)) * cos(x(6)) - cos(x(6)) * cos(x(7)) * sin(x(8)) * sin(x(4))) * cos(x(5)) + sin(x(5)) * cos(x(6)) * cos(x(7)) * cos(x(8)))) + (sin(x(6)) * x(15) + cos(x(6)) * x(16)) / cos(x(7)) * ((0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (-(-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * cos(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (-sin(x(4)) * n3p * cos(x(8)) - x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * ((cos(x(8)) * x(12) * sin(x(7)) * n3p * cos(x(6)) + sin(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * (((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8))) * cos(x(4)) ^ 2 + ((-x(13) * sin(x(8)) * sin(x(4)) * (G - n3) - n3p * cos(x(8))) * sin(x(7)) * cos(x(6)) + (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * cos(x(8)) * x(12) * (G - n3) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * x(12) * (G - n3) * sin(x(8))) * x(13) * cos(x(4)) ^ 3 + ((-sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) - 0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p)) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (-x(13) * sin(x(8)) * (G - n3) - sin(x(4)) * n3p * cos(x(8)) / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * cos(x(4)) + (G - n3) * (-sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * cos(x(8)))) * cos(x(5)) - 0.2e1 * (G - n3) * x(13) ^ 2 * L0 * m0 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 2) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 * ((-cos(x(6)) * sin(x(7)) * cos(x(8)) - sin(x(6)) * sin(x(8))) * sin(x(4)) * cos(x(5)) + sin(x(5)) * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))))) + 0.2e1 * x(13) * x(12) * sin(x(5)) / cos(x(5)) ^ 4 * (0.2e1 * m0 * (x(13) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * x(12) * (G - n3) * sin(x(7)) + x(13) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * x(12) * (G - n3) * sin(x(8))) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * cos(x(4)) + 0.2e1 * x(12) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * sin(x(7)) * n3p + 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((0.2e1 * sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p) * cos(x(6)) - 0.2e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 2 - 0.3e1 / 0.2e1 * cos(x(7)) * (G - n3) * cos(x(6)) * x(12) * cos(x(4)) + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * cos(x(4)) + 0.2e1 * x(12) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * sin(x(8)) * (G - n3) * sin(x(7)) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + ((0.2e1 * (0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) * cos(x(8)) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * (0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12)) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.4e1 / 0.3e1 * x(12) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (G - n3) * (0.4e1 * cos(x(8)) * x(13) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(7)) * cos(x(6)) + 0.4e1 * sin(x(6)) * x(13) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(8))) * cos(x(5))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(4)) ^ 3 - x(12) ^ 2 / cos(x(5)) ^ 2 * sin(x(5)) * (0.2e1 * m0 * (x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + x(12) * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(6)) * cos(x(4)) ^ 2 + (-sin(x(8)) * (G - n3) * sin(x(7)) * cos(x(6)) + cos(x(8)) * sin(x(6)) * (G - n3)) * x(12) * cos(x(4))) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (sin(x(4)) * (G - n3) * cos(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * sin(x(8)) * sin(x(4)) * (G - n3)) * x(12) * cos(x(4)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + (((0.2e1 * x(13) * (G - n3) * cos(x(8)) - 0.2e1 / 0.3e1 * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * sin(x(4)) * n3p * cos(x(8)) + 0.2e1 * x(13) * sin(x(8)) * (G - n3))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * sin(x(8)) * (G - n3) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * (G - n3)) * x(12) * cos(x(4))) * cos(x(5)) ^ 2 - cos(x(4)) * (0.4e1 * x(13) * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * (sin(x(8)) * sin(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - sin(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * cos(x(4)) + (G - n3) * ((0.4e1 * cos(x(8)) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(7)) + 0.2e1 * x(13) * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + 0.4e1 * sin(x(6)) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(8)))) * cos(x(5)) - 0.4e1 * (G - n3) * x(13) * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(4)) ^ 3 + n3p * (0.2e1 * m0 * (-x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 3 + ((x(12) ^ 2 * cos(x(8)) * sin(x(7)) / 0.2e1 - x(13) * x(12) * cos(x(7)) * sin(x(4))) * cos(x(6)) + sin(x(6)) * x(12) ^ 2 * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (x(13) * sin(x(8)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * x(13) * cos(x(8))) * x(12) * cos(x(4)) - x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (-x(12) ^ 2 * cos(x(7)) * cos(x(6)) * cos(x(4)) ^ 3 - sin(x(4)) * (-x(12) ^ 2 * sin(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * x(12) ^ 2 * cos(x(8))) * cos(x(4)) ^ 2 + ((-x(13) * cos(x(8)) * sin(x(4)) * sin(x(7)) + 0.3e1 / 0.2e1 * x(12) * cos(x(7))) * cos(x(6)) - sin(x(6)) * x(13) * sin(x(8)) * sin(x(4))) * x(12) * cos(x(4)) - x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((0.4e1 / 0.3e1 * sin(x(8)) * x(12) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * cos(x(8)) * x(12)) * x(13) * cos(x(4)) ^ 3 + (((-0.2e1 / 0.3e1 * x(12) ^ 2 - x(13) ^ 2) * cos(x(8)) * sin(x(7)) + 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4))) * cos(x(6)) + sin(x(6)) * sin(x(8)) * (-0.2e1 / 0.3e1 * x(12) ^ 2 - x(13) ^ 2)) * cos(x(4)) ^ 2 + (-0.4e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(7)) * cos(x(6)) + 0.4e1 / 0.3e1 * sin(x(6)) * x(13) * cos(x(8))) * x(12) * cos(x(4)) + 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * (-x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + x(13) * cos(x(8)) * sin(x(4)) * sin(x(6))) * cos(x(4)) - (cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) - sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)) + (G - n3) * (cos(x(8)) * (-m0 - mp0) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (-m0 - mp0) * sin(x(8)))) * cos(x(5)) + 0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3)) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 + n3pp * (0.2e1 * m0 * (-sin(x(4)) * cos(x(8)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4))) * x(12) * cos(x(4)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * ((sin(x(8)) * x(12) * sin(x(7)) * cos(x(6)) - sin(x(6)) * cos(x(8)) * x(12)) * cos(x(4)) ^ 3 + sin(x(4)) * x(12) * cos(x(7)) * cos(x(6)) * cos(x(4)) ^ 2 + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * x(12) * cos(x(4))) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * (0.2e1 / 0.3e1 * cos(x(7)) * cos(x(6)) * x(13) * cos(x(4)) ^ 3 + (-0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + 0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * sin(x(6))) * cos(x(4)) ^ 2 + (0.2e1 / 0.3e1 * sin(x(4)) * cos(x(8)) * sin(x(7)) * cos(x(6)) + 0.2e1 / 0.3e1 * sin(x(6)) * sin(x(8)) * sin(x(4))) * x(12) * cos(x(4))) * cos(x(5)) ^ 2 + 0.2e1 * cos(x(4)) ^ 2 * m0 * sin(x(5)) * L0 * x(13) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 + n3ppp * (0.2e1 * m0 * (-cos(x(6)) * sin(x(7)) * cos(x(8)) / 0.2e1 - sin(x(6)) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (cos(x(7)) * cos(x(6)) * cos(x(4)) ^ 3 / 0.2e1 - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) / 0.2e1 - sin(x(6)) * cos(x(8)) / 0.2e1) * cos(x(4)) ^ 2) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) / 0.3e1 + sin(x(6)) * sin(x(8)) / 0.3e1) * cos(x(4)) ^ 2 * cos(x(5)) ^ 2) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 + (-0.4e1 * x(12) * (G - n3) * cos(x(4)) * ((cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 + 0.2e1 * sin(x(6)) * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) + cos(x(8)) * sin(x(8))) * cos(x(4)) ^ 2 - cos(x(6)) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) - cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 - 0.2e1 * sin(x(6)) * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(8))) * cos(x(5)) ^ 5 + 0.2e1 * x(12) * (G - n3) * cos(x(4)) * (-0.2e1 * cos(x(6)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 3 + (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2) * sin(x(4)) * cos(x(4)) ^ 2 + 0.2e1 * cos(x(6)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) - 0.2e1 * sin(x(4)) * ((cos(x(7)) ^ 2 - 0.2e1) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2 - 0.1e1 / 0.2e1)) * sin(x(5)) * cos(x(5)) ^ 4 + (0.2e1 * (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2) * (G - n3) * x(13) * cos(x(4)) ^ 4 + (((0.8e1 * sin(x(8)) * x(12) * (G - n3) * cos(x(7)) ^ 2 + 0.2e1 * cos(x(7)) * sin(x(7)) * n3p - 0.16e2 * sin(x(8)) * x(12) * (G - n3)) * cos(x(8)) + 0.4e1 * x(13) * sin(x(8)) * cos(x(7)) * sin(x(4)) * sin(x(7)) * (G - n3)) * cos(x(6)) ^ 2 - 0.4e1 * sin(x(6)) * (-0.4e1 * x(12) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + x(13) * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * cos(x(7)) * n3p / 0.2e1 + 0.2e1 * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) + 0.8e1 * cos(x(8)) * sin(x(8)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + ((-0.8e1 * x(13) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 - 0.8e1 * sin(x(4)) * (-sin(x(8)) * cos(x(7)) ^ 2 * n3p / 0.4e1 + x(12) * sin(x(7)) * (G - n3) * cos(x(7)) + sin(x(8)) * n3p / 0.2e1) * cos(x(8)) - 0.2e1 * x(13) * (cos(x(7)) ^ 2 + 0.4e1) * (G - n3)) * cos(x(6)) ^ 2 + 0.16e2 * sin(x(6)) * (cos(x(8)) ^ 2 * sin(x(4)) * sin(x(7)) * n3p / 0.4e1 + x(13) * sin(x(8)) * sin(x(7)) * (G - n3) * cos(x(8)) - (sin(x(8)) * x(12) * (G - n3) * cos(x(7)) + sin(x(7)) * n3p / 0.4e1) * sin(x(4)) / 0.2e1) * cos(x(6)) - 0.8e1 * x(13) * (G - n3) * cos(x(8)) ^ 2 + 0.2e1 * cos(x(8)) * sin(x(8)) * sin(x(4)) * n3p + 0.6e1 * x(13) * (G - n3)) * cos(x(4)) ^ 2 + (((-0.6e1 * sin(x(8)) * x(12) * (G - n3) * cos(x(7)) ^ 2 + 0.2e1 * cos(x(7)) * sin(x(7)) * n3p + 0.12e2 * sin(x(8)) * x(12) * (G - n3)) * cos(x(8)) + 0.4e1 * x(13) * sin(x(8)) * cos(x(7)) * sin(x(4)) * sin(x(7)) * (G - n3)) * cos(x(6)) ^ 2 - 0.4e1 * sin(x(6)) * (0.3e1 * x(12) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + x(13) * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * cos(x(7)) * n3p / 0.2e1 - 0.3e1 / 0.2e1 * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) - 0.6e1 * cos(x(8)) * sin(x(8)) * x(12) * (G - n3)) * cos(x(4)) - 0.4e1 * cos(x(6)) * x(12) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 3 - 0.8e1 * (x(13) * cos(x(6)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((n3p * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 / 0.4e1 + x(13) * sin(x(8)) * sin(x(4)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) + cos(x(7)) ^ 2 * n3p / 0.4e1 - 0.3e1 / 0.4e1 * sin(x(7)) * x(12) * sin(x(8)) * (G - n3) * cos(x(7)) + n3p / 0.4e1) * cos(x(6)) ^ 2 + 0.2e1 * sin(x(6)) * (x(13) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + (0.3e1 / 0.8e1 * x(12) * cos(x(7)) * (G - n3) - sin(x(8)) * sin(x(7)) * n3p / 0.4e1) * cos(x(8)) - x(13) * sin(x(4)) * sin(x(7)) * (G - n3) / 0.2e1) * cos(x(6)) + cos(x(8)) ^ 2 * n3p / 0.4e1 + x(13) * sin(x(8)) * sin(x(4)) * (G - n3) * cos(x(8)) - n3p / 0.4e1) * cos(x(4)) ^ 2 + ((-x(12) * sin(x(4)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 / 0.2e1 + x(13) * cos(x(7)) * sin(x(7)) * (G - n3) * cos(x(8)) / 0.2e1 - 0.3e1 / 0.4e1 * sin(x(4)) * (x(12) * (G - n3) * cos(x(7)) ^ 2 + sin(x(8)) * cos(x(7)) * sin(x(7)) * n3p / 0.3e1 + 0.2e1 / 0.3e1 * x(12) * (G - n3))) * cos(x(6)) ^ 2 + sin(x(6)) * (0.2e1 * (cos(x(7)) * n3p / 0.4e1 + sin(x(8)) * x(12) * (G - n3) * sin(x(7))) * sin(x(4)) * cos(x(8)) + x(13) * sin(x(8)) * cos(x(7)) * (G - n3)) * cos(x(6)) / 0.2e1 - x(12) * sin(x(4)) * (cos(x(8)) - 0.1e1) * (cos(x(8)) + 0.1e1) * (G - n3) / 0.2e1) * cos(x(4)) + cos(x(6)) * x(12) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) / 0.2e1) * sin(x(5)) * cos(x(5)) ^ 2 + (0.4e1 * (G - n3) * (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 + 0.3e1 / 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2 - 0.1e1) * x(13) * cos(x(4)) ^ 2 - 0.6e1 * cos(x(7)) * ((n3p * cos(x(8)) / 0.3e1 + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p / 0.3e1)) * cos(x(6)) * cos(x(4)) + 0.4e1 * cos(x(6)) * x(12) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) + 0.4e1 * x(13) * cos(x(6)) * sin(x(5)) * cos(x(4)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) / m0 / L0 / cos(x(4)) ^ 4 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) - (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / cos(x(5)) ^ 4 * (-L0 * cos(x(5)) ^ 3 * cos(x(4)) * m0 * x(12) ^ 2 - L0 * cos(x(4)) * cos(x(5)) * m0 * x(13) ^ 2 + (m0 + mp0) * (G - n3)) x(2) x(10) (G - n3) * sin(x(4)) / cos(x(4)) (-n3p * sin(x(4)) * cos(x(4)) + x(12) * (G - n3)) / cos(x(4)) ^ 2 (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + m0 * L0 * cos(x(5)) * (((0.3e1 * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) - (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) - (G - n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 x(12) * ((0.4e1 * cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 3 * sin(x(4)) - L0 * cos(x(4)) ^ 4 * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + 0.3e1 * L0 * sin(x(4)) ^ 2 * cos(x(5)) ^ 3 * cos(x(4)) ^ 2 * cos(x(6)) * cos(x(7)) * m0 * n3pp + 0.2e1 * L0 * m0 * cos(x(5)) ^ 2 * sin(x(5)) * (-cos(x(8)) * cos(x(4)) * sin(x(7)) * n3pp * cos(x(6)) / 0.2e1 - sin(x(6)) * sin(x(8)) * cos(x(4)) * n3pp / 0.2e1) * cos(x(4)) ^ 2 - 0.2e1 * L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) * sin(x(4)) + (-0.2e1 * m0 * L0 * ((-sin(x(8)) * cos(x(4)) * n3p * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * cos(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * cos(x(4)) * n3p * cos(x(8))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (x(13) * sin(x(8)) * cos(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - x(13) * cos(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * x(13) ^ 2 * cos(x(7)) * cos(x(4)) * cos(x(6)) * (G - n3) * L0 * cos(x(5))) * cos(x(4)) - (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * sin(x(4)) + (-G + n3) * (-0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * cos(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * cos(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-cos(x(5)) * sin(x(4)) * cos(x(6)) * cos(x(7)) - cos(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5))) + 0.3e1 * (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 4 * sin(x(4))) + x(13) * ((0.3e1 * cos(x(5)) ^ 2 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 * sin(x(5)) + 0.3e1 * L0 * sin(x(4)) * cos(x(5)) ^ 2 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp * sin(x(5)) - L0 * m0 * sin(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + L0 * m0 * cos(x(5)) * (-0.2e1 * (((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) * sin(x(5)) + 0.2e1 * cos(x(5)) ^ 2 * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) - 0.2e1 * sin(x(5)) ^ 2 * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1)) * cos(x(4)) ^ 2 + (0.6e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 2 * sin(x(5)) - 0.2e1 * m0 * cos(x(5)) ^ 3 * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) + 0.4e1 * m0 * sin(x(5)) ^ 2 * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) - m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * sin(x(5))) * cos(x(4)) + (-G + n3) * (-0.6e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 2 * sin(x(5)) - 0.2e1 * x(12) ^ 2 * L0 * cos(x(5)) ^ 3 * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) + 0.4e1 * x(12) ^ 2 * L0 * sin(x(5)) ^ 2 * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-sin(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) + sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(5)) + cos(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + 0.2e1 * (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 * sin(x(5))) + (sin(x(6)) * sin(x(7)) * x(15) + cos(x(6)) * sin(x(7)) * x(16) + x(14) * cos(x(7))) / cos(x(7)) * ((-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 + L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * sin(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((-((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * sin(x(6)) - 0.3e1 * cos(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * (-(-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * sin(x(6)) - cos(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (-((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * sin(x(6)) + cos(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (-(n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * sin(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * cos(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * (-(x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * sin(x(6)) + 0.2e1 * cos(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 - sin(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-cos(x(5)) * cos(x(4)) * sin(x(6)) * cos(x(7)) - sin(x(4)) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))))) + (cos(x(6)) * x(15) - sin(x(6)) * x(16)) * ((-cos(x(5)) ^ 3 * L0 * m0 * n3pp * cos(x(6)) * cos(x(7)) * sin(x(8)) * cos(x(4)) ^ 4 + L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * sin(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * (((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * cos(x(7)) + 0.2e1 * x(12) * sin(x(7)) * n3p) * cos(x(6)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * (-cos(x(8)) * sin(x(4)) * cos(x(7)) * n3pp / 0.2e1 - x(13) * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) * cos(x(5)) + x(13) ^ 2 * cos(x(6)) * cos(x(7)) * sin(x(8)) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * ((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * cos(x(7)) + 0.3e1 / 0.2e1 * x(12) * sin(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * cos(x(7)) * cos(x(6)) * x(12) * cos(x(5)) ^ 2 + m0 * (-x(13) * sin(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * cos(x(7))) * cos(x(6)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * cos(x(6)) * cos(x(7)) * sin(x(8))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * cos(x(6)) * cos(x(7)) * sin(x(8)) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * cos(x(6)) * cos(x(7)) * cos(x(8)) * cos(x(5)) ^ 2 - cos(x(6)) * sin(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-cos(x(5)) * cos(x(4)) * cos(x(6)) * sin(x(7)) - sin(x(4)) * cos(x(6)) * cos(x(7)) * sin(x(8)) * cos(x(5)) + sin(x(5)) * cos(x(6)) * cos(x(7)) * cos(x(8)))) + (sin(x(6)) * x(15) + cos(x(6)) * x(16)) / cos(x(7)) * ((-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 4 + L0 * m0 * cos(x(5)) * (((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * cos(x(8)) * sin(x(7)) * cos(x(6)) + 0.3e1 * sin(x(6)) * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * (sin(x(8)) * sin(x(4)) * sin(x(7)) * n3pp * cos(x(6)) / 0.2e1 - sin(x(6)) * cos(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * ((-sin(x(4)) * n3p * cos(x(8)) - x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(5)) ^ 2 + m0 * (-0.2e1 * sin(x(8)) * x(12) * sin(x(7)) * cos(x(6)) + 0.2e1 * sin(x(6)) * cos(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 2)) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) + sin(x(5)) * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))))) + 0.2e1 * x(13) * x(12) * sin(x(5)) / cos(x(5)) ^ 3 * (L0 * m0 * cos(x(5)) * (((0.6e1 * sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - 0.2e1 * cos(x(7)) * n3p) * cos(x(6)) - 0.6e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * x(13) * cos(x(7)) * (G - n3) * cos(x(6)) * cos(x(5))) * cos(x(4)) ^ 2 + (0.3e1 * m0 * L0 * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(6)) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (0.2e1 * cos(x(6)) * sin(x(7)) * cos(x(8)) + 0.2e1 * sin(x(6)) * sin(x(8))) * (G - n3) * L0 * x(13) * cos(x(5))) * cos(x(4)) + (-G + n3) * (0.4e1 * x(12) * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.4e1 * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2)) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(4)) ^ 3 - x(12) ^ 2 / cos(x(5)) * sin(x(5)) * (L0 * m0 * cos(x(5)) * (0.2e1 * sin(x(5)) * x(12) * cos(x(7)) * (G - n3) * cos(x(6)) * cos(x(5)) + 0.2e1 * x(13) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * ((G - n3) * cos(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * sin(x(8)) * (G - n3)) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (sin(x(8)) * sin(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - sin(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * sin(x(4)) * cos(x(6)) * cos(x(7)) * (G - n3) * L0 * x(13) * cos(x(5)) + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * cos(x(5))) * cos(x(4))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(4)) ^ 3 + n3p * (L0 * m0 * cos(x(5)) * ((-0.3e1 * x(12) ^ 2 * sin(x(8)) * sin(x(7)) * cos(x(6)) + 0.3e1 * sin(x(6)) * x(12) ^ 2 * cos(x(8))) * cos(x(5)) ^ 2 - 0.2e1 * sin(x(5)) * x(13) * x(12) * cos(x(7)) * cos(x(6)) * cos(x(5)) - x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * ((-x(13) * cos(x(8)) * sin(x(7)) + 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4))) * cos(x(6)) - sin(x(6)) * x(13) * sin(x(8))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (-x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + x(13) * cos(x(8)) * sin(x(4)) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 - m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * L0 * x(13) * cos(x(5)) + 0.2e1 * (G - n3) * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + 0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3) - (-G + n3) * sin(x(4)) * cos(x(6)) * cos(x(7)) * (m0 + mp0)) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 + n3pp * (-0.2e1 * L0 * m0 * cos(x(5)) ^ 3 * x(12) * cos(x(7)) * cos(x(6)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (-sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * sin(x(4)) * cos(x(8))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * x(12) * cos(x(5)) ^ 2) * cos(x(4))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 + n3ppp * (-cos(x(5)) ^ 3 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 + L0 * m0 * cos(x(5)) * ((cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * (-sin(x(4)) * cos(x(8)) * sin(x(7)) * cos(x(6)) / 0.2e1 - sin(x(6)) * sin(x(8)) * sin(x(4)) / 0.2e1) * cos(x(5))) * cos(x(4)) ^ 2) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 + (-0.8e1 * (x(12) * (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2) * (G - n3) * cos(x(5)) ^ 3 / 0.4e1 + ((x(12) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 / 0.2e1 - x(12) * (G - n3) * cos(x(7)) ^ 2 - sin(x(8)) * cos(x(7)) * sin(x(7)) * n3p / 0.2e1 + x(12) * (G - n3) / 0.2e1) * cos(x(6)) ^ 2 - sin(x(6)) * cos(x(8)) * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + cos(x(8)) ^ 2 * x(12) * (G - n3) / 0.2e1) * cos(x(5)) + x(13) * cos(x(6)) * sin(x(5)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) * cos(x(4)) ^ 3 + (-0.4e1 * cos(x(6)) * x(12) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(5)) ^ 4 + 0.4e1 * cos(x(6)) * x(12) * sin(x(5)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3) * cos(x(5)) ^ 3 + ((-0.2e1 * sin(x(4)) * n3p * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.4e1 * x(13) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) - 0.8e1 * sin(x(4)) * (-cos(x(7)) ^ 2 * n3p / 0.2e1 + sin(x(7)) * x(12) * sin(x(8)) * (G - n3) * cos(x(7)) + n3p / 0.4e1)) * cos(x(6)) ^ 2 - 0.8e1 * sin(x(6)) * (x(13) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 - (x(12) * cos(x(7)) * (G - n3) + sin(x(8)) * sin(x(7)) * n3p / 0.2e1) * sin(x(4)) * cos(x(8)) - x(13) * sin(x(7)) * (G - n3) / 0.2e1) * cos(x(6)) - 0.4e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * cos(x(8))) * cos(x(5)) ^ 2 + 0.4e1 * ((x(13) * sin(x(4)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 + (-sin(x(8)) * cos(x(7)) ^ 2 * n3p / 0.2e1 + x(12) * sin(x(7)) * (G - n3) * cos(x(7)) / 0.2e1 + sin(x(8)) * n3p) * cos(x(8)) - 0.2e1 * (G - n3) * (cos(x(7)) ^ 2 - 0.1e1 / 0.2e1) * sin(x(4)) * x(13)) * cos(x(6)) ^ 2 - 0.2e1 * sin(x(6)) * (cos(x(8)) ^ 2 * sin(x(7)) * n3p / 0.2e1 + x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) - sin(x(8)) * x(12) * (G - n3) * cos(x(7)) / 0.4e1 - sin(x(7)) * n3p / 0.4e1) * cos(x(6)) + cos(x(8)) * (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p / 0.2e1)) * sin(x(5)) * cos(x(5)) + 0.2e1 * (G - n3) * (cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 + 0.2e1 * sin(x(6)) * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) + cos(x(8)) * sin(x(8))) * x(13)) * cos(x(4)) ^ 2 + (0.4e1 * x(12) * (G - n3) * ((cos(x(7)) ^ 2 - 0.2e1) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(5)) ^ 4 + 0.4e1 * x(12) * (G - n3) * (cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 + 0.2e1 * sin(x(6)) * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) + cos(x(8)) * sin(x(8))) * sin(x(4)) * sin(x(5)) * cos(x(5)) ^ 3 + (0.4e1 * cos(x(7)) * (x(13) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) - 0.2e1 * x(12) * cos(x(7)) * (G - n3) - sin(x(8)) * sin(x(7)) * n3p / 0.2e1) * cos(x(6)) ^ 2 + 0.4e1 * sin(x(6)) * cos(x(7)) * (n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * cos(x(6)) + 0.2e1 * x(12) * (G - n3)) * cos(x(5)) ^ 2 + 0.4e1 * (((sin(x(8)) * x(12) * (G - n3) * cos(x(7)) ^ 2 + cos(x(7)) * sin(x(7)) * n3p - 0.2e1 * sin(x(8)) * x(12) * (G - n3)) * sin(x(4)) * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * cos(x(7)) * sin(x(7)) * (G - n3)) * cos(x(6)) ^ 2 - sin(x(6)) * (-x(12) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + x(13) * cos(x(7)) * (G - n3) * cos(x(8)) + (-sin(x(8)) * cos(x(7)) * n3p + x(12) * sin(x(7)) * (G - n3)) * sin(x(4)) / 0.2e1) * cos(x(6)) + cos(x(8)) * sin(x(8)) * x(12) * sin(x(4)) * (G - n3) / 0.2e1) * sin(x(5)) * cos(x(5)) - 0.2e1 * x(13) * cos(x(6)) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(4)) - 0.4e1 * (-sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * x(12) * cos(x(7)) * (G - n3) * cos(x(6)) * cos(x(5))) / m0 / L0 / cos(x(4)) ^ 4 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / cos(x(5)) ^ 3 * (-L0 * cos(x(5)) ^ 3 * cos(x(4)) * m0 * x(12) ^ 2 - L0 * cos(x(4)) * cos(x(5)) * m0 * x(13) ^ 2 + (m0 + mp0) * (G - n3)) / ((cos(x(7)) * cos(x(4)) * cos(x(6)) - (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) x(3) x(11) x(8) (sin(x(6)) * x(15) + cos(x(6)) * x(16)) / cos(x(7))];

z = -Ts';
n1 = Kv6*z(1:6);
n2 = Kv6*z(7:12);
n4 = Kv2*z(15:16);
t1 = x(12);
t2 = x(4);
t3 = cos(t2);
t4 = G - n3;
t5 = x(8);
t6 = sin(t5);
t7 = x(7);
t8 = sin(t7);
t7 = cos(t7);
t9 = 4;
t10 = t7 ^ 2;
t11 = t7 * t10;
t5 = cos(t5);
t12 = t5 ^ 2;
t13 = t5 * t12;
t14 = (-t9 + t10) * t12;
t15 = 0.1e1 + t14;
t16 = t9 * t10;
t17 = x(6);
t18 = cos(t17);
t19 = 0.4e1 / 0.3e1;
t20 = -t19 + t10;
t21 = t20 * t12;
t22 = 0.1e1 + t21;
t23 = 0.2e1 * t10;
t17 = sin(t17);
t24 = t18 ^ 2;
t25 = t18 * t24;
t26 = t8 * t6;
t27 = t13 * t17;
t28 = t26 * t5;
t29 = t18 * t5;
t30 = 3;
t31 = -t30 * t29 * (t18 * (t22 - t23) * t17 - t28) + t26 * (t15 - t16) * t25 - t27;
t32 = x(13);
t33 = -0.2e1 + t7;
t34 = 0.2e1 + t7;
t2 = sin(t2);
t35 = -0.2e1 + t10;
t36 = 5;
t37 = t30 * t10;
t38 = t7 * t6;
t39 = t38 * n3p;
t40 = t39 * (0.6e1 - t37);
t41 = t1 * t8;
t42 = -0.3e1 / 0.4e1 + t10;
t43 = 0.5e1 / 0.2e1 * t12;
t44 = t35 * t12;
t45 = t7 * t2;
t46 = t45 * t4;
t47 = t7 * n3p;
t48 = t47 * t8;
t49 = t1 * t4;
t50 = t46 * t26 * t32;
t51 = 0.5e1 / 0.6e1 * t10;
t52 = t48 / 0.2e1;
t53 = t6 * n3p;
t54 = t32 * t2;
t55 = t54 * t4;
t56 = t55 * t5;
t57 = t41 * t4;
t58 = t17 * t6;
t59 = t58 * t49;
t60 = -0.2e1 + t10;
t61 = 0.3e1 / 0.5e1 * t10;
t62 = t49 * t38;
t63 = t62 * t60;
t64 = t8 * n3p;
t65 = (0.1e1 - t7) * (0.1e1 + t7);
t66 = t12 * t33 * t34;
t67 = 0.3e1 / 0.2e1 * t64;
t68 = t57 * t7;
t69 = t32 * t4;
t70 = t69 * t5;
t71 = 0.1e1 / 0.3e1;
t72 = t2 * t5;
t73 = t69 * t26;
t74 = t41 * t33 * t34;
t75 = t74 * t5;
t76 = t45 * t32;
t77 = t76 * t35;
t78 = t4 * t12;
t79 = 0.3e1 / 0.2e1 * t10;
t80 = -0.2e1 + t79;
t81 = t49 * t80 * t6;
t82 = 0.18e2 * t12;
t83 = 0.6e1 * t12;
t84 = t49 * t6;
t85 = 0.3e1 / 0.14e2 * t10;
t86 = t63 + t64 * (-0.6e1 / 0.7e1 + t85);
t87 = t12 * t9;
t88 = n3p * t13;
t89 = t88 * t2;
t90 = 0.7e1 / 0.6e1;
t91 = 0.7e1 / 0.12e2;
t92 = -0.3e1 / 0.4e1 + t12;
t93 = t90 * (t68 + t53 * (-0.3e1 / 0.7e1 * t10 + 0.4e1 / 0.7e1));
t94 = t70 * t92;
t95 = t62 + 0.9e1 / 0.14e2 * t64;
t96 = t12 / 0.2e1;
t97 = t53 * (-t96 + 0.1e1 / 0.8e1);
t98 = -0.3e1 / 0.4e1 + t12;
t99 = -0.1e1 / 0.2e1 + t5;
t100 = 0.1e1 / 0.2e1 + t5;
t101 = t58 * t5;
t102 = t30 * t18 * (t58 * t99 * t100 * t20 * t18 + t98 * t8 * t5) + t5 * (t33 * t98 * t8 * t34 * t25 + t101) - t58 / 0.4e1;
t43 = t3 * (t18 * (t18 * (t18 * (t5 * (t40 + t41 * (t10 * t36 - 0.15e2 / 0.2e1) * t4 - t43 * t41 * t33 * t34 * t4) + t46 * (t44 * t30 - t42 * t9) * t32) - 0.6e1 * t17 * (t49 * (0.5e1 / 0.12e2 - t51) * t6 + t5 * (t5 * (t49 * (0.5e1 / 0.4e1 * t10 - 0.5e1 / 0.3e1) * t6 + t48) + t50) - t52)) + t5 * (t57 * (0.5e1 / 0.3e1 - t43) + t7 * (t56 - t53)) * t30) - t59 * t43 + t69 * t31 * t3) + t17 * (0.15e2 * t24 * (t2 * (-(t53 * (0.3e1 / 0.10e2 - t61) + t68) * t71 + 0.2e1 / 0.3e1 * t12 * (t53 * (-0.9e1 / 0.20e2 * t10 + 0.3e1 / 0.5e1) + t68)) + t70 * (t65 + t21)) + t5 * (-0.3e1 / 0.10e2 * t72 * t53 + t69 * (-0.3e1 / 0.5e1 + t12)) * t36) + t18 * (t24 * (-t36 * (-(t64 * (-0.9e1 / 0.10e2 + t61) + t63) * t2 * t5 + t26 * (t66 + t65) * t32 * t4) - t67 * t2 * t33 * t34 * t13) + t72 * (t36 * (0.3e1 / 0.5e1 * t64 + t62) - 0.9e1 / 0.2e1 * t64 * t12) + t73 * (-0.15e2 * t12 + t30));
t61 = t49 * t9;
t63 = x(5);
t65 = cos(t63);
t63 = sin(t63);
t103 = t10 / 0.6e1;
t104 = t26 * (-0.2e1 / 0.3e1 + t103) * n3p;
t105 = t49 * t7;
t106 = t105 * t60;
t107 = 0.2e1 / 0.3e1 * t10;
t108 = t49 * t19;
t109 = t108 * t11;
t110 = t10 / 0.4e1;
t111 = n3p * (-t71 + t110);
t112 = t105 * t26;
t113 = t10 / 0.2e1;
t114 = n3p / 0.2e1;
t115 = t114 * t26;
t116 = n3p / 0.6e1;
t117 = t17 * t5;
t118 = -t9 + t10;
t119 = t49 * t26;
t120 = t119 * t118;
t121 = t47 * (-t79 + t30);
t122 = t70 * t38;
t123 = 0.2e1 * t122;
t124 = t47 * t26;
t125 = t49 * t10;
t126 = t69 * t7;
t127 = t126 * t8;
t128 = t32 * t7 * t8;
t129 = t47 / 0.2e1;
t130 = t69 * t38;
t131 = t72 / 0.2e1;
t132 = t27 * t49;
t133 = -0.3e1 / 0.2e1 + t10;
t134 = t56 * t8;
t135 = t134 * t33 * t34;
t136 = 0.1e1 - t10;
t137 = n3p * t136;
t138 = 0.8e1 / 0.3e1 * t10;
t139 = 0.2e1 * t54;
t140 = t1 * t7;
t141 = -0.1e1 / 0.2e1 + t10;
t142 = t55 * t6;
t143 = t142 * t20;
t144 = 0.2e1 / 0.3e1 * t142 * t141;
t145 = t30 * t12;
t146 = t145 - 0.2e1;
t147 = t134 * t146;
t148 = 0.2e1 / 0.3e1 * t105;
t149 = n3p * t5;
t150 = 0.3e1 / 0.4e1 * t10;
t151 = (t47 * (0.3e1 / 0.2e1 - t150) + t120) * t12;
t152 = t72 * t1;
t153 = t152 * t20;
t154 = t47 / 0.4e1;
t155 = t119 - t154;
t156 = -0.1e1 / 0.2e1 + t12;
t157 = t106 + t26 * (0.2e1 / 0.7e1 * t10 - 0.8e1 / 0.7e1) * n3p;
t158 = 0.7e1 / 0.3e1;
t159 = t55 * t8;
t160 = t54 * t19;
t161 = t7 * (t119 - 0.9e1 / 0.28e2 * t47) + 0.3e1 / 0.7e1 * n3p;
t162 = 0.6e1 / 0.7e1 * t26 * n3p + t105;
t96 = t96 - 0.3e1 / 0.8e1;
t163 = -0.1e1 / 0.4e1 + t12;
t164 = t26 * (t145 - 0.3e1 / 0.4e1);
t165 = t26 * t33 * t34;
t98 = t117 * t98;
t98 = t18 * (t165 * t99 * t100 * t24 + t164) - t98 - t98 * t30 * t20 * t24;
t99 = t3 * (t18 * (t12 * (t105 + t115) + t24 * (t12 * (t106 + t104) + t105 - t109 + t26 * (0.1e1 / 0.6e1 - t107) * n3p)) - t117 * (t116 * t12 + (0.2e1 * (0.1e1 / 0.4e1 - t113) * n3p + 0.2e1 * t111 * t12 + 0.2e1 * t112) * t24)) + t18 * (t18 * (t18 * (t2 * (t19 * (t119 * (-0.1e1 / 0.4e1 + t10) + t47 * (0.3e1 / 0.8e1 - t113)) - t12 * (t120 + t121) * t71) + t123 * t35) + t17 * (-t72 * (-t49 / 0.2e1 + t124 / 0.2e1 + t125) / 0.2e1 - t127 / 0.2e1 + t78 * (t128 + t72 * t1 * t20 / 0.4e1)) * t9) + 0.2e1 * t5 * (-t131 * (t119 - t129) + t130)) + t132 * t71 * t2;
t51 = t3 * (t3 * t99 + t18 * (t24 * (t4 * (-t139 * t133 * t8 * t5 + t140 * (-0.17e2 / 0.6e1 + t138)) + t12 * (t105 * (-0.17e2 / 0.6e1 * t10 + 0.17e2 / 0.3e1) + t26 * (0.10e2 / 0.3e1 - t51) * n3p + t135) - 0.5e1 / 0.6e1 * t137 * t26) + t12 * (-0.17e2 / 0.6e1 * t105 - 0.5e1 / 0.2e1 * t26 * n3p) + t115 + t147 + t148) + t117 * (t5 * (t142 + 0.5e1 / 0.6e1 * t149) - t114) + t30 * ((t5 * (0.10e2 / 0.3e1 * t111 * t5 + t143) + 0.5e1 / 0.6e1 * t137 + 0.17e2 / 0.9e1 * t112) * t5 - t144) * t17 * t24) - t17 * (t108 * t72 * t156 + t24 * (t78 * (t153 + t128) - t72 * t90 * (0.3e1 / 0.7e1 * t124 + t49 * (-0.6e1 / 0.7e1 + t10)) - t127 / 0.2e1) * t9) + t18 * (t24 * (-0.2e1 * t2 * (t119 * (-0.2e1 / 0.3e1 + t10) + t47 * (0.1e1 / 0.2e1 - t110)) - 0.2e1 * t122 * t35 + t151 * t19 * t2) + t2 * (-0.2e1 / 0.3e1 * t119 + t47 / 0.2e1 + t87 * t155) - t123);
t99 = t11 * n3p;
t100 = t61 * t26;
t122 = t49 * t22;
t123 = 0.2e1 * t105;
t127 = t32 ^ 2;
t128 = t4 * t127;
t137 = t1 ^ 2;
t166 = n3pp / 0.20e2 + t128 + 0.9e1 / 0.10e2 * t4 * t137;
t167 = t10 / 0.12e2;
t168 = t7 * t8;
t169 = t168 * t166;
t170 = t53 * t1;
t171 = -45;
t172 = 30;
t173 = t171 * t8;
t174 = t173 * t166;
t175 = 0.15e2 * t170;
t176 = t105 * (-0.3e1 / 0.4e1 + t10);
t177 = 24;
t178 = t6 * t166;
t179 = t47 * t41;
t180 = x(15);
t181 = 36;
t182 = 0.9e1 * t47;
t183 = 0.9e1 / 0.2e1 * n3p;
t184 = t119 * t180;
t185 = t149 * t54;
t186 = t185 * t20;
t187 = x(14);
t188 = t187 * t8;
t189 = t54 * t181;
t190 = t180 * t7;
t191 = t190 * t17;
t192 = t49 * t180;
t193 = t192 * t17;
t194 = t172 * t8 * t166;
t195 = t17 / 0.2e1;
t196 = t195 * t180;
t197 = -t7 * (t191 - t188) + t196;
t198 = t7 * t187;
t199 = t180 * t8;
t200 = t198 * t17 + t199;
t201 = t84 * t200;
t202 = t66 * t41 * n3p;
t203 = 0.45e2 / 0.2e1;
t204 = t10 * t203;
t205 = t199 * t69;
t206 = 0.2e1 * t205;
t207 = t192 * t2;
t208 = t26 * t177;
t209 = t208 * t32;
t210 = 108;
t211 = 0.315e3 / 0.2e1;
t212 = 0.15e2 * t10;
t213 = -0.15e2 / 0.2e1 + t212;
t214 = t170 * t2;
t215 = t188 * t69;
t216 = t126 * t17 * t180;
t217 = 0.2e1 * t69 * t58 * t180;
t218 = 0.15e2 * t41;
t219 = t184 * t17;
t220 = t219 * t2;
t221 = 0.81e2 * t32;
t222 = t187 * t2;
t223 = t222 * t62;
t224 = t72 * t41 * n3p;
t225 = t84 / 0.2e1;
t226 = t69 * t200;
t227 = t188 * t2;
t228 = t45 * t180;
t211 = t12 * (-t226 - 0.15e2 / 0.2e1 * t58 * t1 * t2 * n3p) + t18 * (t18 * (t18 * (t32 * (t30 * (t47 * (t113 + t9) + t119 * (-0.35e2 / 0.2e1 + t10)) - 0.105e3 / 0.2e1 * t12 * (t120 + t47 * (-0.8e1 / 0.35e2 * t10 + 0.16e2 / 0.35e2))) + t72 * (t172 * (t38 * t166 * t60 + t41 * (-0.3e1 / 0.4e1 + t113) * n3p) - 0.15e2 / 0.2e1 * t202)) + t17 * (t49 * t211 * t32 * t20 * t13 - t194 * t45 + t214 * t213) + t5 * (t5 * (t206 + (0.60e2 * t169 + t170 * (t172 - t204)) * t2 * t17) + t7 * (-t209 * t17 * n3p - t207) + t49 * (-t10 * t210 + t211) * t32 * t17) - t205) + t12 * (-t224 * t203 - t32 * (t119 - 0.8e1 / 0.105e3 * t47) * t211) + t5 * (-t38 * (-t172 * t2 * t166 - t215 + t216) + t217 + t218 * t2 * n3p) - t7 * (t220 + 0.21e2 / 0.2e1 * t32 * n3p + t223) + t225 * (t221 * t8 + t222));
t229 = n3pp / 0.16e2;
t230 = t128 + t229 + 0.19e2 / 0.16e2 * t4 * t137;
t231 = 0.4e1 / 0.15e2 * t10;
t232 = 0.6e1 * t10;
t233 = -0.12e2 + t232;
t234 = t37 * (-n3pp / 0.4e1 + t128 + 0.19e2 / 0.2e1 * t4 * t137);
t235 = 0.72e2 * t230;
t236 = t230 * t177;
t237 = n3p * t181;
t238 = t142 * t180;
t239 = t159 * t180 * t17;
t240 = t46 * t187 * t32;
t241 = t187 / 0.2e1;
t242 = t53 * t54;
t243 = t193 / 0.2e1;
t244 = t188 * t54;
t245 = 0.3e1 / 0.2e1 * n3pp;
t246 = (0.27e2 / 0.2e1 * t137 + t244) * t4;
t247 = t46 * t180 * t32;
t248 = t6 / 0.2e1;
t88 = t248 * (-t17 * (0.18e2 * t128 + t245 + t246) + t247) + t18 * (t18 * (t18 * (t5 * (t8 * (-t234 + t235) + t39 * t233 * t1 + t236 * t66 * t8) + t54 * (-0.9e1 * t26 * (t19 + t113) * n3p - 0.9e1 * t105 * (t36 + t10) + t12 * (t106 + t26 * (-0.16e2 / 0.15e2 + t231) * n3p) * t171)) + t17 * (t12 * (0.72e2 * t20 * t230 * t6 + t186 * t181 + 0.12e2 * t179) + t6 * (-t234 + t236)) + t5 * (t184 + t54 * (t7 * (0.90e2 * t119 - 0.39e2 / 0.2e1 * t47) + t237) * t17) + t7 * (-0.6e1 * t41 * t17 * n3p - t238)) + t8 * (t235 * t13 + 0.21e2 / 0.2e1 * t242) - t5 * (-t5 * (t105 * (-t188 - 0.90e2 * t54 + t191) / 0.2e1 - t193 - t189 * t26 * n3p) - t7 * (t239 + 0.6e1 * t170 + t240) - t8 * (-0.15e2 / 0.4e1 * n3pp - 0.57e2 * t128 - 0.255e3 / 0.4e1 * t4 * t137) + t241 * t55) - t105 * (-t188 - 0.81e2 / 0.2e1 * t54 + t191) + t243) + t5 * (-t201 / 0.2e1 - 0.21e2 / 0.2e1 * t54 * t17 * n3p) + t236 * t58 * t12 + 0.12e2 * t88 * t54 * t17;
t230 = t10 / 0.7e1;
t234 = t47 * (-0.2e1 / 0.7e1 + t230);
t235 = n3pp / 0.8e1;
t236 = -0.5e1 / 0.4e1 * t4 * t137 + t128 + t235;
t249 = t10 / 0.8e1;
t250 = 42;
t251 = 0.33e2 / 0.2e1;
t252 = t250 * t12;
t253 = 0.63e2 / 0.2e1;
t254 = t47 / 0.21e2;
t255 = t30 * t32 * n3p;
t222 = t113 * t222;
t256 = t32 * t8;
t257 = t17 * t1;
t258 = t10 * t71;
t259 = t4 * t5;
t260 = -0.1e1 / 0.2e1 - t167;
t261 = t46 * t32;
t262 = t41 * t13;
t263 = t76 / 0.2e1;
t264 = 0.2e1 * t17;
t265 = t35 * t24;
t266 = t264 * t8;
t267 = t5 * t6 * (0.1e1 + t265) + t266 * t156 * t18;
t268 = t3 ^ 2;
t269 = t268 ^ 2;
t270 = t3 * t269;
t271 = t3 * t268;
t88 = t3 * (t3 * ((t18 * (t18 * (t5 * (t172 * t7 * (t169 + t170) + t174 - t175 * t11 - 0.15e2 * t66 * t8 * t166) + t54 * (-(t176 + t26 * (-0.1e1 / 0.16e2 + t110) * n3p) * t177 + t82 * (t26 * (-t71 + t167) * n3p + t106))) + t17 * (t12 * (t171 * (t178 * t20 + 0.2e1 / 0.3e1 * t179) - 0.9e1 / 0.2e1 * t186) + t172 * (t179 / 0.2e1 - t178 / 0.2e1 + t178 * t10)) + t5 * (-t184 + t54 * (t7 * (-t119 * t181 + t182) - t183) * t17)) - t5 * (-t5 * (-t105 * (-t189 - t188 + t191) / 0.2e1 + t193 + t183 * t54 * t26) + 0.15e2 * t39 * t1 - t194) - t49 * t197 + t174 * t13) * t18 + (-t145 * t54 * t17 * n3p / 0.2e1 - t101 * t172 * t166 / 0.2e1 + t201 / 0.2e1) * t5) + t4 * (t200 * t32 + t1 * (-t17 * (t227 + t221) + t228) * t5) / 0.2e1 + t211 + 0.105e3 / 0.2e1 * t132 * t32) + t88;
t88 = (t3 * t88 - t226 / 0.2e1 + t12 * (t226 + 0.21e2 / 0.2e1 * t58 * t1 * t2 * n3p) + t18 * (t18 * (t18 * (t32 * ((t119 * (0.28e2 / 0.11e2 + t10) + t47 * (-0.2e1 / 0.11e2 * t10 + 0.4e1 / 0.11e2)) * t251 + t252 * (t234 + t120)) + t72 * (0.12e2 * t41 * (0.21e2 / 0.8e1 + t249) * n3p + 0.12e2 * t38 * t236 * t60 + 0.21e2 / 0.2e1 * t202)) + t17 * (-0.126e3 * t49 * t32 * t20 * t13 - 0.12e2 * t45 * t236 * t8 + t214 * (0.21e2 / 0.2e1 + t79)) + t5 * (t5 * (-t206 + (t170 * (t10 * t253 - t250) + t168 * t236 * t177) * t2 * t17) + t7 * (-0.12e2 * t26 * t32 * t17 * n3p + t207 / 0.2e1) + t49 * (0.135e3 / 0.2e1 * t10 - 0.126e3) * t32 * t17) + t205) + t12 * (t224 * t253 + (0.126e3 * t254 + 0.126e3 * t119) * t32) + t5 * (t38 * (0.12e2 * t236 * t2 - t215 + t216) - 0.51e2 / 0.2e1 * t41 * t2 * n3p - t217) + t7 * (t195 * t184 * t2 - t255) + t84 * (-t256 * t181 + t222)) + t257 * (-0.9e1 / 0.2e1 * t53 * t2 + t70 * (t181 - t252))) * t268;
t110 = t270 * t32;
t120 = 0.9e1 * t137;
t166 = 0.1e1 + t44;
t167 = t19 * t10;
t169 = t264 * t28 * t18;
t171 = (t24 * (t166 - t167) + t12 - t169);
t174 = 0.15e2 / 0.2e1 * t10;
t178 = t64 * (t174 - t172);
t194 = 0.54e2 * t10;
t195 = -0.1e1 / 0.2e1 + t7;
t206 = 0.1e1 / 0.2e1 + t7;
t211 = t55 * t26;
t221 = 0.18e2 * t10;
t224 = t221 - 0.9e1;
t236 = 0.5e1 / 0.18e2 * t10;
t252 = t56 * t20;
t198 = t7 * (t199 * t17 + t198);
t199 = t198 - t241;
t272 = t12 * t8;
t273 = t188 * t17 - t190;
t274 = t273 * t4;
t275 = m0 + mp0;
t276 = t275 * t4;
t277 = 0.12e2 * t54;
t278 = t277 * t1 * L0 * t63 * m0 + t276;
t279 = n3pp / 0.32e2 + t128 + 0.3e1 / 0.16e2 * t4 * t137;
t280 = 0.3e1 / 0.8e1 * t10;
t281 = t26 * t1;
t282 = t281 * n3p;
t283 = t4 * t8;
t284 = t283 * t278;
t285 = t54 * t39;
t286 = 0.6e1 * t4;
t287 = 0.1e1 + t10;
t288 = t282 * t287;
t289 = 96;
t290 = t76 * t64;
t291 = 48;
t292 = t55 * t180;
t293 = t7 * t17;
t294 = 0.9e1 * t10;
t295 = t257 * n3p;
t296 = t84 * t180;
t297 = t64 * t54;
t298 = t21 * t295;
t299 = t4 * t6;
t300 = t247 * t17;
t301 = t292 * t264;
t302 = t57 * t180;
t303 = t302 * t17;
t304 = t105 * t187;
t305 = L0 * m0;
t306 = t305 * t63;
t307 = t306 * t7;
t308 = 0.9e1 * t282;
t309 = 0.27e2 * t78 * t8;
t310 = 0.2e1 * t12;
t311 = t142 * t200;
t312 = (0.9e1 * t306 * (-0.2e1 / 0.9e1 * t311 - 0.4e1 * t295 + t295 * t87) + 0.9e1 * t101 * t4 * t278) * t5;
t229 = t128 + 0.9e1 / 0.16e2 * t4 * t137 + t229;
t313 = 0.3e1 / 0.16e2 * t10;
t314 = t47 * t1;
t118 = t26 * t118;
t315 = t276 * t2;
t316 = 0.6e1 * t306;
t317 = t316 * t32 * t1 + t315;
t318 = t38 * t4;
t319 = 0.2e1 * t137;
t320 = t129 * t1;
t321 = t302 * t2;
t322 = t58 * n3p;
t323 = t69 * t180;
t324 = t295 * t26;
t325 = t322 * t177;
t326 = t325 * t32;
t327 = t20 * t13;
t328 = t327 * t2;
t329 = 0.1e1 / 0.9e1;
t330 = t59 * t180;
t331 = t306 * t9;
t332 = 0.9e1 * n3p;
t333 = t73 * t180;
t334 = n3pp / 0.14e2;
t335 = t128 + t334 + 0.9e1 / 0.14e2 * t4 * t137;
t336 = t2 * t8;
t337 = t64 * t32;
t338 = t53 * t32;
t317 = t18 * (t5 * (t306 * t64 * (-0.144e3 + t232) * t32 + t318 * t317 * (t221 - t181)) + t306 * (t2 * (-t181 * (-t10 * (t314 - t26 * (n3pp / 0.6e1 + t128 + t319 * t4)) + 0.8e1 / 0.3e1 * t26 * t229 - t320) - t12 * (t314 * (-t313 + 0.3e1 / 0.8e1) + t118 * t229) * t289) - t64 * t13 * t32 * t33 * t34 * t291)) + t12 * (t168 * t181 * t4 * t317 * t17 + t306 * (t9 * (t58 * t291 * t32 * n3p + t321) - 0.144e3 * t322 * t10 * t32)) + t306 * (t17 * (t232 * t53 * t32 + 0.288e3 * t328 * t229) - 0.2e1 * t321 - 0.2e1 * t326 - t5 * (t7 * (0.9e1 * t324 * t2 + t323) + (-0.72e2 * t229 + 0.39e2 * t10 * (n3pp / 0.26e2 + t128 + 0.3e1 / 0.13e2 * t4 * t137)) * t2 * t17) * t9) - 0.18e2 * t168 * t4 * t317 * t17;
t321 = 0.2e1 * t306;
t130 = (t18 * t317 + t5 * (t299 * (-t23 * t306 * t257 * t2 * t180 + (0.18e2 * t315 + 0.18e2 * t306 * t329 * t1 * (t227 + 0.54e2 * t32)) * t7) + t331 * (t330 * t2 + 0.57e2 / 0.2e1 * t64 * t32)) + t306 * (t12 * (-0.144e3 * t337 * t5 - 0.288e3 * t2 * (-t314 / 0.16e2 + t26 * t229)) - t9 * (t7 * (t332 * t1 * t2 + t130 * t187 + t333 * t17) - t248 * (t336 * t250 * t335 + t69 * t187)))) * t18 - t321 * (-t17 * (t13 * t2 * t229 * t291 + 0.9e1 * t338) + t5 * (t5 * (t49 * t2 * t200 + t326) + t17 * (t250 * t335 * t2 + t215) - t126 * t180));
t229 = t306 * t54;
t317 = 0.8e1 * t229;
t326 = t317 * t1 + t276;
t335 = t128 + t235;
t339 = -0.2e1 * t335;
t340 = t10 * t177;
t341 = -t340 + t291;
t342 = t294 * t276;
t343 = 0.54e2 * t326;
t344 = t306 * t285;
t345 = 0.18e2 * t326;
t346 = 0.8e1 / 0.9e1;
t347 = t306 * t290;
t348 = t299 * t20;
t349 = t277 * t64;
t350 = 0.12e2 * t128;
t351 = t316 * t54 * t1 + t276;
t352 = t58 * t4;
t353 = t306 * t5;
t311 = t353 * (-t9 * (t311 + 0.15e2 / 0.2e1 * t295) + t295 * t12 * t172);
t354 = t114 * t11;
t355 = t331 * t32 * t1 + t315;
t356 = t259 * t38;
t357 = 0.18e2 * t356;
t358 = t357 * t355;
t359 = -0.1e1 / 0.2e1 + t12;
t360 = t168 * t4;
t361 = t47 / 0.6e1;
t362 = 0.1e1 - t5;
t363 = 0.1e1 + t5;
t364 = t306 * t72;
t265 = t265 * t156 + t12 - t169 - 0.1e1 / 0.2e1;
t130 = t3 * ((t18 * (t18 * (t5 * (-0.9e1 * t284 * t66 + t285 * (-0.60e2 * t10 + 0.120e3) * t63 * m0 * L0 + t284 * (t221 - 0.27e2)) + (0.12e2 * t288 * t30 + 0.12e2 * t7 * (t10 * (n3pp / 0.2e1 + t128 + t286 * t137) + 0.8e1 * t279) + t12 * (t7 * (t10 * t279 - 0.2e1 * t279) + t282 * (t280 - 0.3e1 / 0.2e1)) * t289) * t63 * m0 * L0) + t17 * (-(0.120e3 * t290 * L0 * t63 * m0 + 0.27e2 * t20 * t278 * t6 * t4) * t12 + t299 * t278 * t224) + (t5 * (-t9 * (t26 * (t293 * t279 * t291 + t292) + t295 * (-t294 + 0.27e2)) - t298 * t210) + 0.2e1 * t7 * (t297 * t172 * t17 + t296)) * t63 * m0 * L0) + t5 * (-0.2e1 * t307 * (t242 * t172 + t303 + t304) + 0.18e2 * t284 - t309 * t278) + t306 * (-t9 * (-t7 * (-0.21e2 * t128 - t245 - t246 + t300) + t196 * t55 + t308) + t310 * (-t7 * (-t128 * t291 - t4 * (t120 + t244) - t245 + t300) + 0.54e2 * t282 + t301))) * t18 - t312) + t130;
t130 = t3 * t130 + (t18 * (t18 * (t5 * (t344 * t341 + t283 * (t342 + t343) + t345 * t283 * t66) + t306 * (-t177 * (0.5e1 / 0.4e1 * t288 + t7 * (t10 * (t128 + t235 + 0.15e2 / 0.4e1 * t4 * t137) + t339)) + t12 * (t7 * (t10 * t335 + t339) + t282 * (-0.5e1 / 0.8e1 * t10 + 0.5e1 / 0.2e1)) * t291)) + t17 * (t299 * (t342 + t345) + (0.54e2 * t348 * t326 - 0.54e2 * t347 * t346) * t12) + t306 * (t5 * (0.8e1 * t26 * (-0.12e2 * t293 * t335 + t292) + 0.8e1 * t295 * (-0.15e2 / 0.4e1 * t10 + 0.45e2 / 0.4e1) + 0.90e2 * t298) - 0.2e1 * t7 * (-t349 * t17 + t296))) + t5 * (0.2e1 * t307 * (t303 - 0.12e2 * t242 + t304) + t173 * (t276 + 0.38e2 / 0.5e1 * t229 * t1) * t4 + t343 * t78 * t8) + t306 * (-0.2e1 * t7 * (-t4 * (t137 * t203 + t244) + t245 + t350 + t300) + 0.2e1 * t301 + 0.30e2 * t282 - t87 * (-t7 * (-t159 * t187 + t245 + t300 + t350) + t301 + t282 * t203))) * t18 + t311 + t352 * (t82 * t326 - 0.9e1 * t351);
t173 = t331 * t110 * ((t18 * (t18 * (t5 * (t12 * t178 + t62 * (-t194 + t210) + t64 * (t203 - t212)) + t211 * (-0.12e2 * t195 * t206 + t66 * t30)) + t17 * (t12 * (-t210 * (t68 + t53 * (-0.5e1 / 0.24e2 * t10 + 0.5e1 / 0.18e2)) - 0.9e1 * t252) + 0.54e2 * t68 + 0.54e2 * t53 * (-t236 + 0.5e1 / 0.36e2)) + t259 * (t54 * t224 * t17 + t190)) + t5 * (-0.15e2 * t64 - 0.54e2 * t62) + t4 * t199 * t6 + t272 * (t149 * t203 + 0.9e1 * t142)) * t18 + (-t83 * t55 * t17 / 0.2e1 + 0.15e2 / 0.2e1 * t101 * n3p + t274 / 0.2e1) * t5);
t224 = t8 * t5;
t246 = -0.18e2 + t294;
t278 = t299 * (t77 * t5 - t41);
t279 = 0.18e2 * t47;
t284 = t124 / 0.2e1;
t288 = 0.54e2 * t54 + t188;
t290 = t264 * t180;
t296 = -0.1e1 + t12;
t298 = t200 * t5;
t303 = n3pp / 0.34e2 + t128 + 0.3e1 / 0.17e2 * t4 * t137;
t304 = t276 * t63;
t311 = t305 * t54;
t312 = t311 * t9 * t1 + t304;
t326 = t10 * t181;
t335 = t311 * t26;
t339 = t4 * t312;
t342 = (t346 * t4 * t137 + n3pp * t329 + t128) * t10;
t343 = 0.8e1 * t311 * t1 + t304;
t345 = t305 * t5;
t365 = t4 * t7;
t366 = 0.27e2 * t54;
t367 = -0.51e2 * t303;
t368 = t12 * t17;
t369 = 0.18e2 * t54;
t370 = t369 * t26 * n3p;
t371 = t224 * t305;
t372 = 0.18e2 * t365;
t175 = (t18 * (t18 * (t12 * (-t339 * t7 * t246 + t335 * (-t326 + 0.144e3) * n3p) - t181 * t335 * n3p * t287 + t345 * (0.54e2 * t8 * (0.17e2 / 0.3e1 * t303 + t342) + 0.54e2 * t39 * (-0.5e1 / 0.9e1 * t10 + 0.10e2 / 0.9e1) * t1 + 0.102e3 * t66 * t8 * t303) - t365 * (t221 * t343 + 0.9e1 * t312)) + t5 * (0.18e2 * t339 * t293 * t26 + t305 * (t9 * (t366 * t17 * n3p + t184) - t189 * n3p * t10 * t17)) + t305 * (-0.2e1 * t7 * (-t218 * t17 * n3p + t238) - 0.2e1 * t58 * (t367 - 0.27e2 * t342) + t368 * (0.306e3 * t20 * t303 * t6 + t186 * t210 - 0.60e2 * t179))) + t12 * (t4 * (t23 * t305 * t257 * t180 - (0.9e1 * t304 + 0.2e1 * t305 * t1 * (t369 + t188)) * t7) - t305 * t9 * (t366 * t26 * n3p + t193) + 0.306e3 * t371 * t303) - 0.2e1 * t305 * (-t5 * (t7 * (-t175 + t239 + t240) + (-0.9e1 / 0.2e1 * n3pp - 0.249e3 / 0.2e1 * t128 - 0.27e2 * t4 * t137) * t8) - t193 - t370 + t125 * t180 * t17) + t372 * (t305 * t329 * t1 * t288 + t304)) * t18;
t186 = 0.2e1 * t305;
t189 = t315 * t63;
t218 = t189 + 0.17e2 / 0.3e1 * t305 * t32 * t1;
t238 = t221 - 0.72e2;
t239 = t10 * t250;
t240 = t305 * t47;
t287 = t26 * t4;
t303 = t287 * t218;
t312 = n3pp / 0.18e2 + t128 + 0.4e1 / 0.9e1 * t4 * t137;
t335 = 0.27e2 * t168 * t312;
t339 = 0.54e2 * t218;
t342 = t332 * t41 * t2;
t373 = 0.12e2 * t32;
t374 = t305 * t7;
t375 = t30 * t1;
t376 = t375 * t322;
t377 = t117 * t4;
t378 = t305 * (-0.12e2 * t322 * t1 * t2 - 0.2e1 * t226 + t87 * (t376 * t2 + t226));
t74 = (t18 * (t18 * (t12 * (t303 * t238 + t240 * (-0.84e2 + t239) * t32) - 0.18e2 * t99 * t305 * t32 - 0.18e2 * t287 * (-t10 * (t189 + 0.20e2 / 0.3e1 * t305 * t32 * t1) - t218) + t305 * (0.12e2 * t89 * t74 + t72 * (t38 * t312 * t60 + t41 * (t236 + t71) * n3p) * t210 + t47 * t32 * t250)) + t5 * ((-t339 + t221 * (t189 + 0.14e2 / 0.3e1 * t305 * t32 * t1)) * t17 * t4 + t186 * (-t26 * t250 * t32 * t17 * n3p + t207) * t7 - t339 * t78 * t17 * t20) + t305 * (t9 * ((-t335 + t170 * (t174 + t30)) * t2 * t17 + t205) - 0.8e1 * t12 * (t205 + (-t335 + t170 * (-0.9e1 / 0.2e1 * t10 + 0.6e1)) * t2 * t17))) + t12 * (t240 * t250 * t32 + 0.54e2 * t303) + 0.2e1 * t374 * (-t373 * n3p + t220 + t223) + t345 * (-t9 * (-t38 * (0.27e2 * t312 * t2 - t215 + t216) + t342 + t217) + t237 * t41 * t12 * t2) - 0.18e2 * t303) * t18 - 0.18e2 * t377 * t218 * t296 + t378;
t207 = t304 + 0.20e2 / 0.3e1 * t311 * t1;
t210 = (t10 * (t32 - t375) * (t32 + t375));
t217 = t39 * t1;
t218 = t84 * t20;
t220 = t137 * t30;
t223 = t1 * t12;
t236 = t57 * t12;
t237 = t345 * t1;
t146 = t305 * (-(0.2e1 * t18 * (t18 * (-t18 * (t12 * (t47 * t246 + t119 * (-t194 + 0.216e3)) + t7 * (t7 * (-0.72e2 * t119 + t279) + t332) + 0.54e2 * t278) - t117 * (-t181 * (t49 * (-0.9e1 / 0.2e1 + t10) + t284) + 0.162e3 * t21 * t49) - t283 * (-0.1e1 + t310) * (0.54e2 * t76 * t17 + t180)) - t5 * (t5 * (t182 - 0.162e3 * t119) + t299 * (-t7 * (-t288 + t191) + t290)) - 0.54e2 * t119 + t279) + 0.2e1 * t259 * (-0.54e2 * t257 * t296 + t298)) * t32 * t269 - t46 * t181 * t18 * t137 * t267 - 0.54e2 * t128 * (t18 * (t224 * t146 + t224 * t24 * (t14 - t23 + t30)) + t58 * t12 + t58 * t30 * (t21 + t71 - t107) * t24) * t270);
t74 = (t3 * (t3 * (t175 - t186 * (t17 * (t12 * (t367 * t6 - 0.18e2 * t185) + t6 * (n3pp / 0.15e2 + t128 + 0.2e1 / 0.5e1 * t4 * t137) * t203) + t5 * (t369 * t17 * n3p + t201))) + t74) + t17 * (0.18e2 * t305 * t299 * t137 * t362 * t363 + t24 * (t365 * t28 * t207 + t305 * (-t179 * t9 / 0.6e1 + t299 * (-t220 + t210) / 0.6e1 - 0.3e1 / 0.2e1 * t223 * (-t48 * t346 + t218))) * t181) + t18 * (t24 * (-0.18e2 * t78 * (t371 * t137 * t33 * t34 + t207 * t35 * t7) + 0.6e1 * t345 * (t217 * (-0.8e1 + t16) + t283 * (-t120 + t210)) + 0.9e1 * t365 * (t10 * (t304 + 0.16e2 / 0.3e1 * t311 * t1) - 0.40e2 / 0.3e1 * t311 * t1 - 0.2e1 * t304)) - 0.54e2 * t237 * (-t57 - 0.4e1 / 0.9e1 * t39 + t236) + t365 * (-t82 * t207 + 0.9e1 * t343))) * t3 + t146;
t146 = t331 * t54 * t1 + t276;
t175 = n3pp / 0.28e2 + t128 + 0.3e1 / 0.14e2 * t4 * t137;
t179 = -0.25e2;
t182 = t10 * (0.96e2 / 0.25e2 * t229 * t1 + t276);
t185 = 0.27e2 * t146;
t186 = t127 * t10;
t194 = t283 * t66;
t207 = (-t120 + t244) * t4;
t210 = (t315 + 0.84e2 / 0.25e2 * t306 * t32 * t1);
t240 = t365 * t26;
t246 = t259 * t210 * t6;
t270 = t282 * t9;
t279 = t365 * t127;
t288 = n3p * t296;
t303 = t306 * t137;
t312 = t259 * t168;
t332 = t276 * t7;
t210 = ((t3 * (0.12e2 / 0.25e2 * t288 * t306 * t1 * t2 + t24 * (t246 * t35 + t306 * (0.12e2 / 0.25e2 * t1 * n3p - 0.6e1 / 0.25e2 * t240 * t127 + 0.12e2 / 0.25e2 * t44 * n3p * t1) * t2) + t246 + t264 * (t283 * t359 * t210 + 0.3e1 / 0.25e2 * t364 * (-t270 + t279)) * t18) * t179 - 0.7e1 * t4 * (t18 * (t18 * (-0.18e2 / 0.7e1 * t303 * t166 + t312 * t275) + t58 * (0.36e2 / 0.7e1 * t353 * t137 * t8 + t332)) + 0.18e2 / 0.7e1 * t303 * t362 * t363)) * t18 * t7);
t16 = t305 * (0.2e1 * t271 * t63 * ((t18 * (t18 * (t5 * (0.4e1 / 0.5e1 * t12 * t178 + t64 * (0.18e2 + t212) + t62 * (t10 * t291 - t289)) + t211 * (t181 * (0.3e1 / 0.4e1 + t10) + 0.27e2 * t66)) + t17 * (t12 * (t289 * (t53 * (t313 - 0.1e1 / 0.4e1) + t68) - 0.81e2 * t252) - t291 * (t53 * (-0.5e1 / 0.16e2 * t10 - 0.1e1 / 0.8e1) + t68)) + t259 * (t54 * (t221 - 0.81e2) * t17 + t190)) + t5 * (t62 * t291 - 0.18e2 * t64) + t299 * (-t366 * t8 + t198) + t272 * (0.18e2 * t149 + 0.81e2 * t142)) * t18 + 0.27e2 * t362 * t363 * t17 * (-0.2e1 / 0.9e1 * t53 + t56)) * t32 - t372 * t269 * t18 * t63 * (t24 * (t166 + t16) + t12 - t169 - t30) * t127);
t190 = t56 * t6;
t198 = 0.9e1 / 0.4e1 * t311 * t1;
t212 = t304 + t198;
t246 = 0.2e1 * t58;
t313 = -t26 * t18 + t117;
t335 = t4 ^ 2;
t339 = t305 * t3;
t343 = t7 * t3;
t367 = t166 * t24;
t371 = -0.1e1 + t367 + t12 - t169;
t372 = t29 * t8 + t58;
t332 = t332 * t18;
t74 = t65 * (-t181 * t307 * t18 * t4 * (t171 * t127 * t268 * t269 + t137 * t265) + (t3 * t130 + t17 * (t24 * (t360 * t355 * t359 + t305 * (t152 * t63 * (-0.8e1 / 0.7e1 * t124 + t49 * (-0.24e2 / 0.7e1 + t10)) * t90 - t328 * t4 * t63 * t9 * t137)) * t181 + t364 * t137 * t4 * t362 * t363 * t291) + t18 * (t24 * (t358 * t35 + t306 * (0.54e2 * t119 * (t346 + t10) + 0.54e2 * t47 * (-0.2e1 / 0.9e1 * t10 + 0.4e1 / 0.9e1) + t12 * (t7 * (-n3p + t112) - t100 + t354) * t291) * t2 * t1) + t358 + t306 * (-t291 * (t119 + t154) + 0.144e3 * t12 * (t119 + t361)) * t2 * t1)) * t3 + t173) + t74;
t16 = t65 * t74 + t268 * ((t18 * (t18 * (t5 * (t344 * (t10 * t172 - 0.60e2) + t283 * (t182 * t179 - t185) - 0.9e1 * t194 * t146) + t307 * (t172 * (-n3pp / 0.10e2 + t4 * (-0.3e1 / 0.5e1 * t137 + t186) - 0.14e2 / 0.5e1 * t128) - 0.84e2 * t44 * t175)) + t17 * (t179 * (t299 * (0.9e1 / 0.25e2 * t146 + t182) + 0.6e1 / 0.5e1 * t347) - 0.27e2 * t12 * (-0.20e2 / 0.9e1 * t347 + t348 * t146)) - t331 * t28 * (-t293 * t250 * t175 + t292)) + t5 * (t344 * t172 + t283 * t177 * (t276 + 0.9e1 / 0.2e1 * t229 * t1) - t309 * t146) + 0.2e1 * t306 * (t12 * (-t7 * (t128 * t250 - t207 + t245 + t300) + t301) - t7 * (-t128 * t203 + t207 - t245) - t292 * t136 * t17)) * t18 - 0.9e1 * t299 * (t17 * (t12 * t146 - 0.2e1 / 0.3e1 * t351) - 0.2e1 / 0.9e1 * t298 * t229)) + t210 + t16;
t74 = t65 ^ 2;
t130 = t74 ^ 2;
t172 = (t65 * t130);
t173 = t65 * t74;
t40 = (0.12e2 * (t3 * (t3 * t43 + t17 * (0.6e1 * t84 * (-0.1e1 / 0.12e2 + t12) + 0.12e2 * t24 * (t5 * (t5 * (t81 + t52) + t50) - t48 / 0.4e1 + t49 * (-0.19e2 / 0.24e2 * t10 + 0.1e1 / 0.2e1) * t6)) + t18 * (t24 * (t5 * (-t40 + t57 * (-0.19e2 / 0.2e1 * t10 + 0.18e2)) + 0.6e1 * t78 * (t75 - t77) + t46 * t30 * t32 * t35) + t5 * (t39 * t30 - 0.25e2 / 0.2e1 * t57 + t82 * t57) + t46 * (-t83 + t30) * t32)) - t17 * (t9 * (t97 * t2 + t94) + 0.12e2 * t24 * (t2 * (-t91 * (t68 + t53 * (0.2e1 / 0.7e1 - t85)) + t93 * t12) + t94 * t20)) + t18 * (t24 * (-0.7e1 * t72 * t86 + (0.2e1 * t89 + t69 * (-0.1e1 + t87) * t6) * t34 * t33 * t8) + t73 * (0.12e2 * t12 - t30) + t72 * (t83 * t64 - 0.7e1 * t95))) * t3 - 0.12e2 * t61 * t102) * t65;
t40 = t1 * t3 * t65 * (t40 + t181 * t63 * (-t108 * t98 * t2 + (t3 * t51 - t17 * (t19 * (t142 * t163 + t149 * t96) + t24 * ((t90 * t161 + t5 * (0.2e1 * t111 * t5 + t143)) * t5 - t143 / 0.4e1) * t9) + t18 * (t24 * (t4 * (-t160 * t8 * t33 * t34 * t13 + t140 * (-t10 * t90 + t158)) - t104 + t5 * (t157 * t158 * t5 + t159 * t33 * t34)) + t12 * t158 * t162 - t115 + t134 * (-t87 + t30) - t105 * t90)) * t3));
t43 = t305 * t172;
t40 = t43 * (-t9 * (t3 * (0.6e1 * t110 * (t30 * t29 * (t155 * t5 - t17 * (t7 * (-t123 - t115) + t122) * t18) + t25 * (t7 * (-0.3e1 / 0.4e1 * n3p - t100 * t7) + t119 + t151 + t99) - t132) - 0.18e2 * t1 * (t18 * (t24 * (-t46 * t32 * t35 / 0.2e1 + t5 * (t259 * (t77 + t75) + t39 * (-t258 + 0.2e1 / 0.3e1) + t57 * (t103 + t30))) + t4 * (t262 * t30 - t263) + t5 * (t261 * t5 - 0.29e2 / 0.12e2 * t57 - t39 * t71)) + t59 * (-0.5e1 / 0.12e2 + t12) - t264 * (-t48 / 0.6e1 + t84 * t260 + t5 * (t5 * (t48 * t71 - t81) + t50)) * t24)) + t88 - t120 * t46 * t18 * t267) + t40);
t50 = 0.7e1 * t365 * t18;
t51 = (t24 * (t166 - t23) + t12 - t169) * t268;
t61 = t45 * t3;
t75 = t343 * t18;
t77 = t28 * t18 * t17;
t81 = t74 * (0.1e1 + t51 - 0.2e1 * t18 * (t35 * t156 * t18 + t61 * t313) - 0.2e1 * t12 + t28 * t9 * t18 * t17) + t12 + t367 - 0.1e1 - 0.2e1 * t77 - 0.2e1 * (t2 * t267 + t75 * t372) * t63 * t65;
t85 = t339 * t65;
t88 = 0.1e1 - t268;
t103 = -0.2e1 + t268;
t110 = t6 * t2;
t103 = t74 * (t103 * t12 + t24 * (t44 * t103 - 0.2e1 * t141 * t268 + 0.2e1 * t61 * t26 + t10 - 0.2e1) + 0.1e1 - t264 * t29 * (t3 * (t26 * t3 + t45) - 0.2e1 * t26)) + t12 + t367 - 0.1e1 - 0.2e1 * t77 - 0.2e1 * t63 * (t5 * (t24 * (t110 * t35 + t168 * t3) + t110) + t264 * (t38 * t3 / 0.2e1 - t336 / 0.2e1 + t272 * t2) * t18) * t65;
t115 = t117 * t8 - t18 * t6;
t120 = t63 * t2;
t134 = 0.1e1 / J__2;
t140 = 0.1e1 / t3;
t81 = 0.1e1 / t81;
t142 = 0.1e1 / m0;
t151 = 0.1e1 / t65;
t155 = 0.1e1 / L0;
t103 = 0.1e1 / t103;
t156 = 0.1e1 / J__1;
t158 = t140 ^ 2;
t159 = t158 ^ 2;
t140 = t140 * t158;
t158 = t155 ^ 2;
t169 = t151 ^ 2;
t151 = t151 * t169;
t175 = t142 ^ 2;
t179 = (-t276 + t85 * (t137 * t74 + t127)) * t4;
t14 = ((t65 * t16 + 0.7e1 * t24 * t63 * t10 * t2 * t335 * t275 * t313 + t343 * (0.16e2 * t4 * (-0.13e2 / 0.16e2 * t304 + t12 * t212 + t24 * (0.7e1 / 0.16e2 * t304 * t10 + t44 * t212 + t304 + t305 * (-0.3e1 / 0.8e1 * t168 * t5 * t127 + 0.9e1 / 0.4e1 * t54 * t1)) - t198 - t246 * (0.3e1 / 0.16e2 * t374 * t127 + t224 * t212) * t18) - t339 * t32 * (t288 / 0.4e1 + t24 * (n3p * t166 / 0.4e1 + t190 * t35) + t190 + t266 * (t55 * t359 - t53 * t5 / 0.4e1) * t18) * t291) * t18 - 0.18e2 * t128 * t305 * (t30 * t18 * (t224 * t296 + t58 * (t10 * t346 + t21 + t71) * t18) - t58 * t362 * t363 + t224 * (t14 + t30 + t138) * t25) * t271) * t65 + t50 * (0.18e2 / 0.7e1 * t306 * t371 * t127 * t268 + t332 * t372) + t40) * t175 * t158 * t169 ^ 2 * t159 * t81;
t16 = t119 - t47;
t40 = 0.2e1 * t47;
t81 = t47 * t71;
t138 = t119 - t81;
t166 = 0.3e1 / 0.4e1 * t4 * t137;
t182 = t128 + t166 + t235;
t198 = t26 * t182;
t207 = -0.2e1 * t182;
t210 = (t106 + t26 * (t10 * t329 - 0.4e1 / 0.9e1) * n3p);
t212 = t71 * n3p;
t266 = t212 * t26;
t268 = t105 + t266;
t271 = t70 * t8;
t272 = t69 * t6;
t37 = 0.9e1 / 0.2e1 - t37;
t165 = t165 * t55;
t298 = t41 * t7;
t67 = t67 * t12;
t301 = t182 * t10;
t104 = t104 * t1;
t309 = -0.3e1 / 0.2e1 + t10;
t328 = t57 * t309;
t339 = t66 * t57;
t344 = 0.2e1 * t333;
t347 = t84 * (-0.1e1 / 0.2e1 + t10);
t358 = t323 * t264;
t197 = 0.2e1 * t197;
t374 = t117 * t1;
t378 = t287 * t146;
t240 = t240 * t146;
t379 = 0.3e1 / 0.8e1 * t4 * t137;
t380 = t128 + t379 + t235;
t381 = t38 * t380;
t382 = t229 * n3p;
t383 = 0.32e2 / 0.3e1;
t384 = t168 * t380;
t385 = 0.2e1 / 0.3e1 * t48;
t386 = 0.18e2 * t39;
t42 = t18 * (t18 * (t18 * (t5 * (-t181 * t7 * (t68 + t53) + 0.18e2 * t53 * t11 + 0.54e2 * t57 + 0.18e2 * t339) + t261 * (t181 * t42 - 0.27e2 * t44)) + t17 * (-t181 * (-t84 / 0.2e1 + t48 / 0.2e1 + t84 * t10) + 0.54e2 * t12 * (t218 + t385)) - 0.2e1 * t28 * (-0.27e2 * t76 * t17 + t180) * t4) + t4 * (-t197 + 0.54e2 * t262) + t5 * (-t57 * t181 + t386 + t259 * (t7 * (-t366 + t188 - t191) + t290))) + t259 * t6 * (t200 + 0.18e2 * t374);
t261 = t63 * t267;
t42 = t305 * t65 * (t32 * t42 - t74 * (t18 * (t18 * (t18 * (t2 * (t291 * (t7 * (-0.3e1 / 0.4e1 * t182 + t301) + t282 * (-0.1e1 / 0.8e1 + t113)) - t12 * (t7 * (t207 + t301) + t104) * t181) + t5 * (-0.18e2 * t328 - 0.18e2 * t39 * (0.8e1 / 0.3e1 - t167) + 0.9e1 * t339) * t32) + t5 * (-t344 + (0.72e2 * t198 * t7 + (0.18e2 - t326) * t1 * n3p) * t2 * t17 + 0.27e2 * t117 * t32 * (t218 + 0.16e2 / 0.9e1 * t48)) + 0.18e2 * t17 * (-t32 * (t48 * t19 + t347) + t89 * t1 * t20)) + t12 * (-t7 * (t181 * t182 * t2 - t215 + t216) + t358 - 0.18e2 * t282 * t2) + t32 * (t5 * (0.18e2 * t39 * t19 + 0.27e2 * t236 - 0.18e2 * t57) - t197 * t4)) + t5 * (t295 * t83 * t2 + t272 * (t200 + 0.9e1 * t374))));
t113 = t306 * t1;
t80 = t113 * (-t30 * t18 * (-t5 * (t8 * (-n3p + t190) + t67 - 0.8e1 / 0.3e1 * t62) + (-t4 * (t139 * t5 * t141 + 0.8e1 / 0.3e1 * t298) + t12 * (0.16e2 / 0.3e1 * t68 - t53 * t80 + t252) + t53 * t10 - t53 / 0.2e1) * t17 * t18) + t25 * ((t5 * (t178 * t5 / 0.5e1 + t165) + t64 * t37 + t62 * (-0.8e1 * t10 + 0.16e2)) * t5 - t211 * t9 * t195 * t206) - t368 * (t56 - 0.3e1 / 0.2e1 * t53)) * t19 * t74;
t80 = t18 * (t18 * (t18 * (-t9 * t7 * (t240 + t382) + t12 * (t7 * (t317 * n3p + t240) - t9 * (t99 * t229 + t378)) + t378 + t306 * (t5 * (-(t381 * t60 + t41 * (-0.9e1 / 0.16e2 + t280) * n3p) * t383 + 0.2e1 * t202) + 0.16e2 / 0.3e1 * t99 * t54)) + t5 * (-0.4e1 / 0.9e1 * t307 * (-t370 * t17 + t192) + (t232 - t30) * t146 * t17 * t4 - t78 * t30 * t146 * t20 * t17) + t306 * t17 * (t383 * (t384 + t170 * (0.3e1 / 0.16e2 - t280)) - 0.64e2 / 0.3e1 * t12 * (t384 + t170 * (-0.9e1 / 0.32e2 * t10 + 0.3e1 / 0.8e1)))) + t12 * (-t331 * t76 * n3p + t378 * t30) + t306 * (t5 * (-t383 * (0.3e1 / 0.8e1 * t41 * n3p + t381) + t83 * t41 * n3p) - 0.4e1 / 0.9e1 * t84 * t199)) - t5 * (t78 * t146 * t17 + t306 * (-0.2e1 * t101 * n3p + 0.2e1 / 0.9e1 * t274) * t1) + t80;
t83 = t256 * t46 * t5;
t101 = t327 * t1;
t146 = t55 * t38;
t167 = -t280 + 0.3e1 / 0.4e1;
t170 = t126 * t359;
t195 = t128 - t379 + t235;
t197 = 0.12e2 * t10;
t199 = t64 * t19;
t206 = t54 * t5;
t236 = t195 * t181;
t240 = t54 * t17;
t211 = t211 * t180 * t17;
t274 = t128 + t235 - 0.11e2 / 0.8e1 * t4 * t137;
t280 = t55 * t187;
t301 = t146 * t187;
t317 = 0.18e2 * t297;
t326 = t365 * t355;
t331 = t306 * t26;
t366 = t380 * t8;
t370 = 0.18e2 * t32;
t36 = (t18 * (t12 * (t331 * (-t340 + t289) * t32 * n3p + t326 * (-0.27e2 * t10 + 0.54e2)) + t181 * t10 * (t331 * t32 * n3p + t365 * (t113 * t36 * t32 + t315)) + t306 * (t336 * t13 * t33 * t34 * t380 * t291 - t72 * (t217 * t167 + t366 * t309) * t289 - t209 * n3p) - 0.27e2 * t326) + t5 * (0.54e2 * t287 * t293 * t355 + t306 * (-t9 * (-t370 * t17 * n3p + t184 * t2) - 0.84e2 * n3p * t10 * t17 * t32)) + t306 * (t9 * (t7 * (-t342 * t17 + t323 * t6) + t58 * (-t340 + 0.12e2) * t380 * t2) + t368 * (0.72e2 * t149 * t20 * t32 + 0.144e3 * t2 * (t20 * t380 * t6 + t129 * t41))));
t184 = t128 + t334 + t4 * t137 / 0.7e1;
t209 = t305 * t139 * t1 + t304;
t217 = t318 * t209;
t289 = (t305 * t297);
t309 = t217 + t289;
t331 = t128 * t10;
t334 = t305 * t242;
t340 = t21 * t17;
t342 = 0.3e1 / 0.2e1 * t1;
t374 = n3pp / 0.7e1 + t128 + 0.2e1 / 0.7e1 * t4 * t137;
t150 = (t18 * (t18 * (-t250 * t305 * (-t12 * (-t234 * t1 + t118 * t184) - t26 * (t184 - t331) + t314 / 0.7e1) + t5 * (-t10 * t181 * t309 + t317 * t305 * t66 + 0.72e2 * t217 + (54 * t289))) + t17 * (t181 * (-t7 * (-t283 * t209 + t305 * t285) + t334 / 0.2e1) - (-0.72e2 * t150 * t334 + 0.72e2 * t360 * t209 + 0.72e2 * t334) * t12) - t345 * (t9 * (-t253 * t17 * (t10 * (n3pp / 0.21e2 + t128 + 0.2e1 / 0.21e2 * t4 * t137) - t184) + t7 * (-t324 * t30 + t292)) + 0.126e3 * t340 * t184)) - t181 * t309 * t5 + t305 * (t12 * (-0.126e3 * t254 * t1 + 0.126e3 * t26 * t184 + 0.54e2 * t297 * t5) - t9 * (t7 * (-t342 * n3p + t211 + t301) - t248 * (-0.21e2 / 0.2e1 * t374 * t8 + t280)))) * t18 - 0.2e1 * t345 * (t17 * (t4 * (-t220 + t244) - 0.21e2 / 0.2e1 * t128 - t245) - t247 + t117 * (0.21e2 * t5 * t184 - 0.9e1 * t242));
t184 = t26 * n3p;
t209 = t43 * t1;
t36 = (t74 * (t65 * ((t18 * t36 + t12 * (-0.27e2 * t365 * (t315 + t113 * (t32 * t9 - 0.2e1 / 0.27e2 * t227)) + t306 * (t9 * (-t370 * t26 * n3p + t193 * t2) - t290 * t125 * t2) + 0.144e3 * t366 * t364) - t9 * t306 * (t5 * (t7 * (t126 * t187 + t205 * t17 - 0.9e1 * t214) - t241 * t69 + t336 * t177 * t380) - t105 * (-0.9e1 / 0.2e1 * t32 - t227 + t228 * t17) - t255 * t26 + t243 * t2)) * t18 + t321 * (t5 * (-0.6e1 * t32 * t17 * n3p + t201 * t2) + t272 * t273 + t368 * (t110 * t177 * t380 + t373 * t149))) + t150));
t66 = t173 * ((t18 * (t18 * (t12 * (t314 * (t174 - 0.15e2) + t26 * (-t197 + t291) * t195) + t206 * (0.9e1 * t10 * (t62 + t199) - 0.18e2 * t62 - 0.18e2 * t64 - 0.6e1 * t66 * t64) - t314 * t213 + t26 * (-0.12e2 * t195 + t221 * (t128 + t235 + 0.23e2 / 0.12e2 * t4 * t137))) + t5 * (t5 * (0.18e2 * t76 * t17 * (-t39 + t57) - t302 + t325 * t54) + t17 * (t236 - t239 * (t128 + t235 + 0.17e2 / 0.28e2 * t4 * t137)) + t7 * (t292 - 0.15e2 * t324)) + t236 * t27 * t20 + t302 / 0.2e1 + t240 * (t53 * (-0.6e1 + t197) - 0.9e1 * t68)) + t5 * (t5 * (-t236 * t26 + 0.15e2 / 0.2e1 * t314) + t62 * (t369 - t188 + t191) / 0.2e1 - t330 + t349) + t7 * (t375 * n3p + t211 + t301) - t248 * (-0.12e2 * t274 * t8 + t280) - t317 * t13) * t18 + (t17 * (t4 * (t137 * t251 + t244) - t245 - t350) / 0.2e1 + t5 * (t49 * t200 - t322 * t277) / 0.2e1 - t247 / 0.2e1 + t368 * t177 * t195 / 0.2e1) * t5) * t9;
t15 = t305 * (t65 * (t66 - t370 * t63 * (t18 * (t24 * (t8 * (-0.2e1 * t56 * t133 - t53 * t71) - t148 + t12 * (t10 * (-t148 - t266) + t19 * (t184 + t105) + t135)) + t12 * (-t184 - t148) + t147 + t148 + t266) + t117 * (t288 * t71 + t190) + t30 * ((t5 * (t111 * t19 * t5 + t143) + t7 * (-0.2e1 / 0.9e1 * t47 + 0.4e1 / 0.9e1 * t119) + t212) * t5 - t144) * t17 * t24)) - t286 * (t26 * t15 * t25 - t117 * t296 - t30 * t18 * (t29 * (t22 - t107) * t17 - t26 * (-t71 + t12))) * t127);
t22 = 0.7e1 / 0.8e1;
t66 = t128 + t235 + t4 * t137 / 0.2e1;
t107 = -0.2e1 * t66;
t110 = t323 * t17;
t125 = t282 * t30 * t2;
t126 = t226 * t6;
t135 = t295 * t30 * t2;
t143 = t306 * t76;
t144 = t26 * t335 * t275;
t147 = t128 + t235 + 0.7e1 / 0.4e1 * t4 * t137;
t148 = t76 * n3p;
t149 = t8 * (-0.12e2 * t293 * t147 + t292);
t139 = t113 * t139;
t150 = -0.9e1 * t139 + 0.9e1 * t276;
t174 = t55 * t200;
t188 = 0.18e2 * t78;
t41 = (t18 * (t18 * (t12 * (t143 * t341 * n3p + t144 * t238) + t306 * (t5 * (-t291 * (t38 * t147 * t60 + t41 * (t10 * t22 - 0.3e1 / 0.8e1) * n3p) + 0.6e1 * t202) - t148 * t177 + t99 * t277) + t287 * (-t185 * t10 + 0.18e2 * t276)) + t5 * (-0.54e2 * t17 * t335 * t275 - 0.2e1 * t307 * (-t240 * t208 * n3p + t192) + (0.108e3 * t229 * t1 + 0.63e2 * t276) * t4 * t17 * t10 - 0.54e2 * t340 * t275 * t335) + t306 * (-t9 * (t149 + t322 * (0.21e2 / 0.2e1 * t10 - 0.3e1 / 0.2e1) * t1) + 0.8e1 * t12 * (t149 + t322 * (0.9e1 / 0.4e1 * t10 - t30) * t1))) + t12 * (-t143 * t177 * n3p + 0.54e2 * t144) - 0.2e1 * t307 * (-0.6e1 * t54 * n3p + t62 * t187 + t219) - t150 * t287 + t353 * (t9 * (-t38 * (-t4 * (-0.21e2 * t137 + t244) + t245 + t350 + t300) - 0.3e1 / 0.2e1 * t41 * n3p + t246 * t292) + t82 * t41 * n3p)) * t18 + t377 * (-t188 * t275 + t150) + t306 * (0.2e1 * t376 + 0.2e1 * t174 - t87 * (-t342 * t322 + t174));
t54 = t305 * t32;
t60 = t54 * t1;
t87 = t189 + t60;
t99 = n3pp / 0.12e2 + t128 + t4 * t137 / 0.6e1;
t144 = t189 + 0.8e1 / 0.3e1 * t60;
t147 = t338 * t305;
t149 = t113 * t160;
t150 = t149 + t276;
t160 = t150 * t287;
t11 = t41 * t65 + (t18 * (t18 * (t5 * (t181 * t7 * (t360 * t144 + t147) - 0.54e2 * t283 * t87 - 0.18e2 * t147 * t11 - 0.18e2 * t194 * t87) + t305 * (-0.6e1 * t7 * (-0.6e1 * t99 + t331) + 0.6e1 * t282 + t12 * (t7 * (t10 * t99 - 0.2e1 * t99) + t104) * t181) * t2) + t17 * (t181 * (-t299 * t87 / 0.2e1 + t54 * t48 / 0.2e1 + t299 * t144 * t10) - (0.54e2 * t348 * t87 + 0.54e2 * t54 * t385) * t12) + t345 * (t9 * (t333 + (-t37 * t1 * n3p - 0.18e2 * t26 * t7 * t99) * t2 * t17) - t295 * t82 * t20 * t2)) + t5 * (-t54 * t386 + t283 * t181 * (t189 + 0.2e1 / 0.3e1 * t60) - 0.54e2 * t78 * t87 * t8) + 0.2e1 * t305 * (-t12 * (-t7 * (0.18e2 * t99 * t2 - t215 + t216) + t358 - t308 * t2) + t7 * (t215 - 0.21e2 / 0.2e1 * t374 * t2) + t110 * t136 - t125)) * t18 + t305 * (t257 * (-0.12e2 * t272 - 0.6e1 * t89) - 0.2e1 * t5 * (t126 - t135)) - t188 * t58 * t87;
t11 = (t65 * t11 + t17 * (0.9e1 * t259 * (t12 * t150 - t149 - 0.2e1 / 0.3e1 * t276) + 0.27e2 * t24 * (t5 * (t150 * t4 + t7 * (-0.4e1 / 0.27e2 * t365 * t351 - 0.4e1 / 0.9e1 * t382 * t26) + t78 * t20 * t150) + t360 * t306 * t127 * (t12 * t346 - 0.4e1 / 0.9e1))) + t18 * (t24 * (t12 * (t143 * t233 * n3p + t160 * (-t294 + t181)) + t287 * (-0.14e2 * t276 * t10 - 0.9e1 * t150) + t305 * (0.12e2 * t356 * t35 * t63 * t127 + 0.6e1 * t148 * t63)) + t5 * (t5 * (t148 * t316 - 0.27e2 * t160) + 0.12e2 * t318 * t306 * t127) + 0.6e1 * t287 * (t139 + t276) - 0.6e1 * t143 * n3p)) * t65;
t13 = t9 * (-0.6e1 * t59 * t32 * t296 + t18 * (t18 * (t18 * (t5 * (-0.12e2 * t72 * (t7 * (t10 * t66 + t107) + t282 * (0.1e1 / 0.2e1 - t249)) - t32 * (t39 * (0.8e1 / 0.15e2 - t231) + t57 * (0.4e1 / 0.5e1 + t10)) * t203) + 0.6e1 * t2 * (t7 * (t10 * (t128 + t235 + 0.17e2 / 0.4e1 * t4 * t137) + t107) + t282 * (0.1e1 / 0.4e1 + t79)) - 0.6e1 * t57 * t32 * t33 * t34 * t13) + t17 * (-t12 * (t183 * t153 + t370 * (t218 - t385)) - t84 * t32 * (0.6e1 + t204)) + t5 * (-t344 + (t208 * t7 * t66 + (-0.9e1 / 0.2e1 - t232) * t1 * n3p) * t2 * t17) + t7 * (t225 * t180 * t2 - 0.6e1 * t337 * t17)) + t5 * (t5 * (-t7 * (0.12e2 * t66 * t2 - t215 + t216) + t358 + t281 * t183 * t2) + t7 * (-t196 * t57 * t2 + 0.6e1 * t338) + t49 * (-t222 + 0.18e2 * t256)) + t7 * (0.6e1 * t274 * t2 - t215 / 0.2e1) - t110 - t125 + t69 * (t196 * t10 - 0.18e2 * t262)) + t5 * (t126 + t135) - 0.3e1 / 0.2e1 * t257 * t89);
t11 = t291 * t209 * (t63 * (-t17 * (t56 * t92 + t97) + t18 * (t24 * ((t5 * (t178 * t5 / 0.15e2 + t165) - 0.7e1 / 0.4e1 * t86) * t5 - t165 / 0.4e1) + t5 * (-0.7e1 / 0.4e1 * t95 + t67) + t164 * t55) - t30 * (-t4 * (0.3e1 / 0.4e1 * t206 * t20 + t298 * t91) + t12 * (t93 + t252) + t53 * (-0.1e1 / 0.6e1 + t249)) * t17 * t24) + t65 * (t17 * (t72 * n3p * t96 + t272 * t163) + t18 * (t24 * (t2 * (t22 * (t106 + t184 * (t230 - 0.4e1 / 0.7e1)) - 0.7e1 / 0.4e1 * t157 * t12) + t94 * t34 * t33 * t8) + t2 * (t22 * (0.3e1 / 0.7e1 * t184 + t105) - 0.7e1 / 0.4e1 * t162 * t12) + t271 * (-0.9e1 / 0.4e1 + t145)) + t30 * (t272 * t20 * t163 + t72 * (t21 * t114 + t90 * t161)) * t17 * t24)) + t11 + t305 * (-0.6e1 * t46 * t18 * t371 * t127 + t13 * t130);
t13 = t119 + t47;
t22 = 0.2e1 / 0.3e1 * t47;
t37 = t306 * t152;
t41 = t18 * t7;
t46 = t119 - t40;
t54 = t304 + 0.10e2 / 0.3e1 * t311 * t1;
t55 = 0.6e1 * t305;
t56 = t113 * t373;
t58 = t315 + t56;
t44 = 0.2e1 * t365 * t18 * (-t56 + t58 * t12 + t24 * (0.7e1 * t315 * t10 + t44 * t58 + t315 + t305 * (-t224 * t45 * t63 * t30 * t127 + t373 * t1 * t63)) - t246 * (0.3e1 / 0.2e1 * t306 * t45 * t127 + t224 * t58) * t18 - t315 * t30) * t65;
t13 = 0.72e2 * t305 * t1 * (t17 * (-t49 * t5 * (-0.5e1 / 0.4e1 + t12) * t71 + 0.2e1 * t24 * (t5 * (-t124 * t71 + t49 * t260 + t83) - t4 * (t76 * t8 + t101) / 0.2e1)) + t18 * (t24 * (t10 * (-t361 + 0.5e1 / 0.6e1 * t119) + t71 * t13 + t5 * (t5 * (t10 * t13 * t71 - t108 * t26 - t22) + t146 * t35)) - t361 + t5 * (t5 * (t119 + t81) + t146) - 0.5e1 / 0.12e2 * t119)) * t130;
t56 = t305 * t137;
t58 = t313 * t65;
t11 = t3 * (-0.72e2 * t209 * (t63 * (-t17 * (0.2e1 / 0.3e1 * t84 * t12 * t2 + 0.2e1 * t24 * (t5 * (t73 * t7 + t72 * (t218 + t52)) - (0.2e1 / 0.3e1 * t347 + t48 / 0.4e1) * t2)) + t18 * (t24 * (t170 * t35 + t72 * (t19 * (t39 * t167 + t328) - 0.2e1 / 0.3e1 * t339)) + t72 * (t19 * (t57 - 0.3e1 / 0.8e1 * t39) - t310 * t57) + t170)) - t65 * (t18 * (t24 * (t7 * (t7 * (-t154 + 0.13e2 / 0.12e2 * t119) + t114) + t12 * (-t7 * (n3p + t112) + t100 + t354) + t278) + t5 * (t5 * (-t119 * t30 + t129) + t146) - t154 + t119 * t91) + t117 * t49 * (-t91 + t12) + t264 * (t4 * (-t263 * t8 + 0.3e1 / 0.2e1 * t101) + t5 * (-t284 + t49 * (-0.37e2 / 0.24e2 * t10 + 0.3e1 / 0.2e1) + t83)) * t24)) + t36 + t15) + t11;
t4 = (t3 * t11 + t291 * t43 * t137 * t4 * (-t120 * t102 + t65 * t98) + t74 * (t65 * (t18 * (t18 * (-t293 * (t28 * t4 * t355 + t113 * (-0.11e2 / 0.6e1 * t62 - 0.2e1 / 0.3e1 * t64 + t199 * t12) * t2) * t181 + 0.18e2 * t41 * (t359 * t355 * t35 * t4 + 0.11e2 / 0.3e1 * t37 * (t68 + t53 * (-0.4e1 / 0.11e2 * t10 + 0.8e1 / 0.11e2)))) - 0.12e2 * t37 * (t57 + 0.2e1 * t39) + t326 * (-0.9e1 + t82)) - 0.12e2 * t303 * t352 * t2) + t17 * (-t55 * t259 * t137 * t362 * t363 + t24 * (t5 * (t312 * t54 + t305 * (t7 * (-t270 + t365 * (-t319 + t127)) + t220 * t4) / 0.6e1) + t4 * (t327 * t305 * t137 - t168 * t54) / 0.2e1) * t181) + t18 * (t24 * (-0.6e1 * t305 * (t287 * (t186 + t137) - 0.2e1 * t314 + t223 * (t10 * t46 - t16 * t9)) + t357 * t35 * t54) + 0.18e2 * t5 * (t318 * t54 - t237 * (t119 - t22)) + t55 * t1 * t46)) - t44 - t13 + 0.7e1 * t41 * t261 * t275 * t335) * t3;
t10 = t85 * t177 * (t65 * (t65 * (t30 * t29 * (t5 * (t198 - t320) - (t7 * (t207 * t7 - t282) + t128 + t21 * t182 + t166 + t235) * t17 * t18) + t25 * (t7 * (-t198 * t9 * t7 + (t23 - 0.3e1 / 0.2e1) * t1 * n3p) + t12 * (t121 * t1 + t118 * t182) + t198) - t27 * t182) + (0.9e1 / 0.2e1 * t18 * (t12 * t268 + t24 * (t12 * t210 + t105 - t109 + t26 * (-0.4e1 / 0.9e1 * t10 + t329) * n3p)) - 0.9e1 / 0.2e1 * t117 * (t329 * t12 * n3p + (0.2e1 * (-t258 + 0.1e1 / 0.6e1) * n3p + 0.4e1 / 0.3e1 * t111 * t12 + 0.2e1 * t112) * t24) + 0.3e1 / 0.2e1 * t105 * t18 * t74 * t171) * t63 * t32) - 0.3e1 / 0.4e1 * t128 * t31 + 0.3e1 / 0.4e1 * (t30 * t29 * (t138 * t5 - (t7 * (-t123 - 0.2e1 / 0.3e1 * t26 * n3p) + t122) * t17 * t18) + t25 * (t10 * (t47 * t19 - t100) + t12 * (t10 * t16 - t100 + t40) + t119 - t47) - t132) * t1 * t130);
t11 = t58 * t2 + t372 * t63;
t13 = t74 * (t51 - 0.2e1 * t265) + t12 + t367 - 0.1e1 - 0.2e1 * t65 * (t75 * t11 + t120 * t267) - 0.2e1 * t77;
t13 = 0.1e1 / t13;
t1 = (t4 + t65 * t269 * (-0.9e1 * t9 * t305 * (t1 * (t30 * t18 * (t5 * (-t131 * t268 + t69 * (-0.2e1 / 0.3e1 + t12) * t8) + (t5 * (t2 * (t138 * t7 + t116) + t70 * t20 * t6) + t89 * t20 / 0.6e1 - 0.2e1 / 0.3e1 * t69 * t6 * t141) * t17 * t18) + t25 * (t12 * (t271 * t33 * t34 - 0.3e1 / 0.2e1 * t2 * t210) + 0.2e1 * t2 * (t26 * (t258 - 0.1e1 / 0.12e2) * n3p + t176) - 0.2e1 * t271 * t133) + t368 * (t116 * t72 + t272)) * t172 + t261 * t279 * t18) - 0.9e1 * t80 * t74 + 0.2e1 * t42 + t10) - t50 * (-0.36e2 / 0.7e1 * t56 * t173 * (t2 * t265 * t65 + t261) + t332 * (t120 * t372 + t58) + 0.18e2 / 0.7e1 * t56 * t371 * t2 * t74)) * t175 * t158 * t151 * t159 * t13;
t4 = 0.1e1 / t275;
t6 = 0.1e1 / t7;
NonA = [-t14 t179 * (t65 * (-t65 * (t336 * t3 + t38 * t88) + t45 * t5 * t63) + t38) * t142 * t140 * t155 * t156 * t103 * t151 t179 * (t65 * (-t65 * (-t17 * (-t26 * t88 + t61) + t29 * t88) + t120 * t115) + t29 + t26 * t17) * t142 * t140 * t155 * t134 * t103 * t151 0; -t1 -t179 * (t63 * (t38 * t2 + t3 * t8) + t7 * t5 * t65) * t142 * t140 * t155 * t156 * t103 * t169 -t179 * (t115 * t65 + t63 * (t17 * (t26 * t2 - t343) + t29 * t2)) * t142 * t140 * t155 * t134 * t103 * t169 0; t3 * t65 * (t75 * t65 + t11) * t4 0 0 0; 0 0 -t134 * t17 * t6 -0.1e1 / J__3 * t18 * t6;];

t1 = x(12);
t2 = x(13);
t3 = x(6);
t4 = cos(t3);
t5 = x(7);
t6 = sin(t5);
t7 = x(8);
t8 = sin(t7);
t3 = sin(t3);
t7 = cos(t7);
t9 = t4 * t8;
t10 = t9 * t6;
t11 = t3 * t7;
t12 = t10 - t11;
t13 = G - n3;
t14 = x(4);
t15 = cos(t14);
t14 = sin(t14);
t5 = cos(t5);
t16 = t1 ^ 2;
t17 = t13 * t16;
t18 = n3pp + t17;
t19 = 0.1e1 / 0.2e1;
t20 = t19 * t18;
t21 = t20 * t7;
t22 = t2 * t5;
t23 = t22 * t1;
t24 = t23 * t14;
t25 = t24 * t13;
t26 = -t21 * t6 + t25;
t27 = 2;
t28 = t3 * t8;
t29 = t28 * t18;
t30 = t27 * t26;
t31 = -t30 * t4 + t29;
t32 = t4 * t7;
t33 = t32 * t6;
t34 = t33 + t28;
t35 = t14 * t34;
t36 = t35 * n3p;
t37 = t15 * t34;
t38 = t37 * n3p;
t39 = t2 * t8;
t40 = t39 * t13;
t41 = n3p * t7;
t42 = t41 * t14;
t43 = t40 + t42;
t44 = t2 * t13;
t45 = t44 * t7;
t46 = t8 * n3p;
t47 = t46 * t14;
t48 = t45 - t47;
t49 = t3 * t48;
t50 = t4 * t43;
t51 = t50 * t6 - t49;
t52 = t15 ^ 2;
t53 = t52 ^ 2;
t54 = t15 * t52;
t55 = t14 ^ 2;
t56 = t52 - t55;
t57 = 6;
t58 = 3;
t59 = t12 * t14;
t60 = t59 * t57;
t61 = t5 * t15;
t62 = t61 * t4;
t63 = t52 * t58;
t64 = t63 * t12;
t65 = t44 * t15;
t66 = t65 * t1;
t67 = x(5);
t68 = cos(t67);
t67 = sin(t67);
t69 = t19 * n3pp;
t70 = t17 + t69;
t71 = t46 * t1;
t72 = t71 * t6;
t73 = t70 * t5;
t74 = t73 + t72;
t75 = t41 * t3;
t76 = t75 * t1;
t77 = t5 * n3p;
t78 = t77 * t1;
t79 = t70 * t6;
t80 = t79 * t8 - t78;
t81 = t11 * t70;
t82 = -t4 * t80 + t81;
t83 = t44 * t37;
t84 = t45 * t14;
t85 = t84 - t46;
t86 = 0.3e1 / 0.2e1 * t1;
t87 = t86 * t5;
t88 = t87 * t13;
t89 = t85 * t6;
t90 = -t88 + t89;
t91 = t40 * t14;
t92 = t91 + t41;
t93 = t3 * t92;
t94 = t4 * t90 + t93;
t95 = t1 * t12;
t96 = t95 * t13;
t97 = t55 * t57;
t98 = t14 * t82;
t99 = t15 * (-t4 * t74 + t76);
t100 = t8 * t1;
t101 = t100 * t13;
t102 = t101 * t6;
t103 = t77 * t19;
t104 = t102 - t103;
t105 = 0.4e1 / 0.3e1;
t106 = t105 * t104;
t107 = t11 * t105 * t1 * t13;
t108 = -t106 * t4 + t107;
t109 = -t58 * t108;
t110 = 0.2e1 / 0.3e1;
t111 = t105 * t1;
t112 = t111 * t5;
t113 = t112 * t13;
t114 = t46 * t110;
t115 = t114 * t6 + t113;
t116 = t2 * t14;
t117 = t42 * t110;
t118 = t15 * t115;
t119 = -t118 * t2;
t120 = t75 * t110;
t121 = t120 * t2 * t15 + t119 * t4;
t122 = 0.1e1 / 0.3e1;
t123 = t2 ^ 2;
t124 = t110 * t16;
t125 = n3pp * t122 + t13 * (t123 + t124);
t126 = -t39 * t110 * t14 * n3p + t125 * t7;
t25 = -t25 * t105 + t126 * t6;
t125 = t117 * t2 + t125 * t8;
t127 = t3 * t125;
t128 = t25 * t4 + t127;
t129 = t42 * t19;
t130 = -t40 - t129;
t131 = t105 * t130;
t132 = -t131;
t133 = -t47 * t19 + t45;
t134 = t105 * t133;
t135 = t134 * t3;
t136 = t132 * t6;
t137 = -t136 * t4 + t135;
t138 = t2 * t109;
t139 = t138 * t15;
t140 = t1 * t137;
t141 = t85 * t3;
t142 = t92 * t6;
t143 = t142 * t4 - t141;
t144 = m0 + mp0;
t145 = 4;
t146 = t144 * t13;
t147 = t116 * t145;
t148 = t147 * t1 * L0;
t149 = t148 * t67 * m0;
t150 = t149 + t146;
t151 = t123 * L0;
t152 = t151 * t67;
t153 = t7 * t150;
t154 = t152 * t5 * m0 + t153 * t6;
t155 = t28 * t150;
t156 = t154 * t4;
t157 = t22 * t4;
t158 = t157 * t13;
t159 = t158 * t15;
t160 = -t159 + t143;
t161 = t67 * m0 * L0;
t162 = t161 * t2;
t163 = t162 * t15;
t164 = t27 * t163 * t160;
t165 = t13 * (t155 + t156) - t164;
t166 = t65 * t12;
t167 = t162 * t37;
t168 = t166 * t15;
t169 = -t14 * t143 + t168;
t170 = -t145 * t13 * (t152 * t62 * m0 * t14 - t167 * t1) - t27 * t162 * t169;
t171 = t59 * t44;
t172 = t162 * t35;
t173 = t67 * t166;
t174 = t5 * t13;
t175 = t174 * t4;
t176 = t68 ^ 2;
t177 = t176 ^ 2;
t178 = t68 * t177;
t179 = t68 * t176;
t180 = L0 * m0;
t181 = t180 * t176;
t182 = t13 * t34;
t183 = t15 * t68;
t184 = t181 * t58;
t185 = t12 * t14;
t186 = t62 - t185;
t187 = t186 * t68;
t188 = t67 * t34;
t189 = t187 + t188;
t190 = t23 * t4;
t191 = t1 * t38;
t192 = t51 * t14;
t193 = -t64 * t44 * t1 * t14 + t15 * (t190 * t13 * t52 + t14 * t31 - t191) + t192 * t1;
t82 = (t1 * (t96 + t83) + t52 * t82) * t15;
t194 = t94 * t14;
t195 = t14 * t15;
t196 = t195 * (-t98 * t27 + t99 * t58);
t197 = -t194 * t1 + t196 + t82;
t198 = t121 * t52;
t191 = t191 * t110;
t138 = t15 * (-t14 * t128 * t27 + t191) + t14 * (t138 * t52 + t140) + t198;
t199 = t67 * t197;
t200 = t180 * t179;
t201 = t14 * t165 - t15 * t170;
t202 = t68 * t201;
t203 = t195 * t182 * t145 * t123;
t204 = t27 * t200 * (t193 * t68 + t199) + t202 + t180 * (t58 * t138 * t176 + t203);
t205 = t14 * t5;
t206 = t205 * t4;
t207 = t15 * t12 + t206;
t208 = -t19 * t31;
t209 = t158 * t52;
t210 = t51 * t14;
t211 = t66 * t58;
t212 = t1 * (t15 * (t209 - t38) + t210) - t195 * (t211 * t12 + t208 * t27);
t213 = t1 * t94;
t82 = -t213 * t14 + t196 + t82;
t196 = -t1 * t137;
t108 = t108 * t15;
t214 = t108 * t2;
t191 = -t196 * t14 + t15 * (-t14 * (t128 * t27 + t214 * t58) + t191) + t198;
t198 = t67 * t82;
t202 = -t27 * t200 * (t212 * t68 + t198) - t202 - t180 * (t58 * t191 * t176 + t203);
t203 = t182 * t16;
t208 = t15 * (-t1 * t51 + t15 * (t66 * t12 + t208)) + t203;
t213 = t15 * (t15 * (-t99 + t98) + t213) + t17 * t59;
t196 = (t15 * (t128 + t214) + t196) * t15 - t203 * t110;
t214 = t175 * t67;
t215 = t214 * t144;
t216 = t151 * t27 * m0;
t217 = t67 * t213;
t218 = -t27 * t200 * (t208 * t68 + t217) - t13 * (-t216 * t34 * t52 + t215) + t183 * t165 - t184 * t196;
t219 = -t58 * t202;
t220 = -t58 * t218;
t221 = 0.1e1 / t68;
t222 = 0.1e1 / t15;
t223 = 0.1e1 / m0;
t189 = 0.1e1 / t189;
t224 = 0.1e1 / L0;
t225 = t221 ^ 2;
t226 = t225 ^ 2;
t227 = t221 * t225;
t228 = t222 ^ 2;
t229 = t228 ^ 2;
t230 = t222 * t229;
t231 = t222 * t228;
t232 = t207 * t220;
t233 = t224 * t189;
t234 = t233 * t223;
t235 = t234 * t231;
t236 = t235 * t225;
t31 = t236 * (t189 * (-t186 * t218 + t207 * (t204 - t202)) + t221 * (t145 * t182 * t151 * m0 * t56 + t27 * t68 * (t14 * t170 + t181 * ((t66 * (t14 * (-0.5e1 * t62 + t60) - t64) + t1 * (0.2e1 * t14 * t38 + t15 * (t36 + t51)) + t31 * t56) * t68 + t67 * (t99 * (t63 - t97) - t1 * (t14 * (t96 + 0.2e1 * t83) + t15 * (t44 * t35 + t94)) + t98 * (t27 * t55 - 0.7e1 * t52)))) - t183 * (-t165 + t145 * (-t1 * t13 * t172 + (-t175 * t56 * t67 * t123 + t173 * t116) * m0 * L0) + t27 * t163 * (t143 + t171)) + t184 * (-t110 * t1 * (t27 * t38 * t14 + t15 * t36) - t27 * (t128 * t52 + t14 * (t121 * t15 + t14 * (t139 - t128))) + (-t121 * t14 * t27 + t15 * (t115 * t116 * t4 - t117 * t3 * t2 + t139) + t140) * t15) + t220) + (t232 * t189 + t219 * t221) * t222 * t14);
t36 = t218 * t189;
t98 = t221 * t204;
t99 = t234 * t225;
t115 = t99 * t229 * t14;
t121 = t189 ^ 2;
t128 = t27 * t121 * t218;
t139 = t145 * t220 * t225;
t140 = t235 * t221;
t170 = t1 * t7;
t237 = t14 * t6;
t238 = t237 * t170;
t239 = t238 * t145;
t240 = t239 + t22;
t241 = t180 * t2;
t242 = t241 * t68;
t243 = t242 * t240;
t244 = t148 * t28 * t68 * m0;
t245 = t243 * t4;
t241 = t241 * t183;
t160 = t13 * (t244 + t245) - t27 * t241 * t160;
t246 = t151 * t62 * t68 * m0;
t247 = t161 * t68;
t169 = -t201 * t67 + t68 * (t14 * t160 - t15 * (-t145 * t13 * (-t242 * t37 * t1 + t246 * t14) - t27 * t242 * t169));
t201 = 0.8e1;
t248 = t27 * t68;
t249 = t13 ^ 2;
t250 = t4 * t249;
t251 = t250 * t5 * t144;
t160 = t15 * t160;
t252 = t201 * t208;
t253 = -t57 * t247 * (t217 * t68 + t196) + t68 * (-t160 + t251) + t15 * t165 * t67 + t200 * (t248 * t213 - t252 * t67);
t254 = t68 * t34;
t255 = t186 * t67 - t254;
t256 = t221 * t67;
t257 = t36 * t255;
t258 = t234 * t227;
t259 = t258 * t229;
t260 = t259 * t14;
t261 = t27 * t218 * t223 * t189 * t121 * t224;
t262 = t261 * t225 * t231;
t263 = x(15);
t264 = x(16);
t265 = x(14);
t266 = t263 * t3 + t264 * t4;
t267 = t265 * t5 + t266 * t6;
t268 = t28 * t6;
t269 = t32 + t268;
t270 = t9 * t19;
t271 = -t270 * t18 - t26 * t3;
t272 = t11 * t6;
t273 = t9 - t272;
t274 = t15 * n3p;
t275 = t274 * t273;
t276 = t4 * t48;
t277 = t3 * t43;
t278 = t277 * t6 + t276;
t279 = t22 * t3;
t280 = t279 * t13;
t281 = t32 * t1;
t282 = t281 * n3p;
t283 = t32 * t70;
t284 = t3 * t80 + t283;
t285 = t4 * t92;
t286 = -t3 * t90 + t285;
t287 = t1 * t269;
t288 = t1 * (t287 * t13 - t65 * t273);
t289 = t1 * t286;
t290 = t14 * t284;
t291 = t15 * (t3 * t74 + t282);
t292 = t111 * t32 * t13;
t293 = t274 * t32;
t294 = t293 * t110 * t2;
t295 = t4 * t125;
t296 = -t25 * t3 + t295;
t297 = t134 * t4;
t298 = t131 * t6;
t299 = t298 * t3 - t297;
t300 = t1 * t299;
t301 = (t106 * t3 + t292) * t15;
t302 = t301 * t2;
t303 = t1 * t275;
t304 = t303 * t110;
t305 = t3 * t92;
t306 = t305 * t6;
t307 = t85 * t4;
t308 = t306 + t307;
t309 = t9 * t150;
t310 = t154 * t3;
t311 = t280 * t15;
t312 = -t311 + t308;
t313 = t13 * (t309 - t310) + t27 * t163 * t312;
t314 = t65 * t269;
t315 = t314 * t15;
t316 = t145 * t13 * (t152 * t61 * t3 * m0 * t14 + t163 * t1 * t273);
t317 = -t273;
t318 = t195 * t145;
t319 = t318 * t13;
t320 = t319 * t123;
t321 = t320 * t317;
t322 = t66 * t269;
t323 = t17 * t317;
t324 = t15 * (-t1 * t278 + t15 * (t322 - t271)) + t323;
t325 = t14 * t269;
t326 = t325 * t17;
t327 = t15 * (t15 * (t291 - t290) - t289) + t326;
t328 = t323 * t110;
t329 = t328 + (t15 * (t296 + t302) + t300) * t15;
t330 = t174 * t3;
t331 = t330 * t67 * t144;
t332 = t67 * t327;
t333 = t13 * (t216 * t317 * t52 - t331);
t334 = -t27 * t200 * (t324 * t68 + t332) - t183 * t313 + t333 + t184 * t329;
t335 = t61 * t3;
t336 = -t14 * t269 + t335;
t337 = t67 * t317;
t338 = t336 * t68 + t337;
t339 = t205 * t3;
t340 = t218 * (t15 * t269 + t339);
t341 = -t36 * t338 + t334;
t342 = t262 * t338 * t207;
t343 = t263 * t4 - t264 * t3;
t344 = t237 * t44;
t21 = -t344 * t1 - t21 * t5;
t345 = t44 * t6;
t346 = t4 * t1;
t347 = t195 * t4;
t71 = t71 * t5;
t348 = t6 * n3p;
t349 = t348 * t1;
t73 = t73 * t8 + t349;
t350 = t86 * t6;
t351 = t350 * t13;
t352 = t5 * t85 + t351;
t353 = t2 * t7;
t354 = t1 * t352;
t355 = t61 * t1;
t356 = t4 * (t354 * t14 + t54 * t73 - t355 * (t353 * t15 + t100) * t13);
t357 = t14 * t73;
t358 = t357 * t27;
t359 = t15 * (-t70 * t6 + t71);
t360 = t101 * t5;
t361 = t348 * t19;
t362 = t360 + t361;
t363 = t105 * t362;
t364 = t111 * t6;
t365 = t2 * t15;
t366 = t344 * t111 + t126 * t5;
t367 = -t365 * t363;
t368 = t4 * t15;
t153 = -t152 * t6 * m0 + t153 * t5;
t369 = t65 * t6;
t370 = t92 * t5;
t371 = t369 + t370;
t372 = t163 * t4;
t373 = t13 * t153;
t374 = -t27 * t371 * t372 + t373 * t4;
t375 = t116 * t6;
t376 = t170 * t5;
t377 = t375 + t376;
t378 = t40 * t52;
t379 = t161 * t157;
t380 = t68 * (t14 * t374 - t15 * (t145 * t161 * t377 * t4 * t65 - t27 * t379 * (-t14 * t92 + t378)));
t381 = (-t347 * (t23 * t58 * t8 * t13 * t15 + t21 * t27) - t346 * (t5 * (-t14 * t43 + t41 * t52) + t345 * t54)) * t68;
t114 = t180 * (t61 * t32 * t145 * t13 * t123 * t14 + t58 * (t368 * (t14 * (-t27 * t366 - t367 * t58) + t355 * t41 * t110) + t4 * (t52 * t365 * (-t114 * t5 + t364 * t13) - t205 * t132 * t1)) * t176);
t382 = t378 - t43;
t383 = t174 * t16;
t384 = t383 * t7;
t385 = t21 * t52 + t355 * t382 + t384;
t386 = t4 * t385;
t387 = t383 * t14 * t8;
t388 = t15 * (t15 * (t359 - t357) + t354) + t387;
t389 = t4 * t388;
t367 = t15 * (t367 + t366) + t132 * t5 * t1;
t390 = -t383 * t32 * t110 + t368 * t367;
t391 = t146 * t67 * t6;
t392 = t216 * t5 * t7 * t52 + t391;
t393 = t13 * t392 * t4 + t183 * t374;
t394 = t386 * t68;
t395 = t67 * t389;
t396 = t184 * t390;
t397 = t27 * t200 * (t394 + t395) - t393 + t396;
t398 = t205 * t8;
t399 = t6 * t15;
t400 = t399 + t398;
t401 = t4 * t400;
t402 = t32 * t67;
t403 = -t401 * t68 + t402 * t5;
t404 = t61 * t8;
t405 = -t404 + t237;
t406 = t4 * t405;
t407 = t218 * t406;
t408 = t36 * t403 + t397;
t409 = t262 * t403 * t207;
t410 = -t10 * t18 + t11 * t18;
t411 = t48 * t6;
t412 = t3 * t43;
t413 = t411 * t4 + t412;
t414 = -t274 * t12 * t1;
t415 = t414 * t15;
t416 = t1 * t34;
t417 = t416 * t63 * t44 * t14;
t418 = t1 * t34;
t419 = t418 * n3p;
t420 = t70 * t34;
t421 = t92 * t6 * t4;
t422 = -t85 * t3 + t421;
t423 = t182 * t1;
t424 = (t1 * (-t423 + t166) + t420 * t52) * t15;
t425 = t1 * t422;
t420 = t14 * t420;
t426 = t420 * t27;
t427 = t15 * t419;
t428 = t418 * t13;
t429 = -t125 * t6;
t430 = t126 * t3 + t429 * t4;
t431 = t105 * t3;
t432 = t134 * t6;
t433 = -t431 * t130 + t432 * t4;
t434 = t365 * t428 * t145;
t435 = t433 * t1;
t414 = t110 * t15 * (-t15 * t2 * t38 + t414);
t436 = t89 * t4 + t93;
t437 = t150 * t12;
t438 = t163 * t27;
t439 = -t13 * t437 - t438 * t436;
t440 = t145 * t13;
t441 = t68 * (t14 * t439 - t15 * (t27 * t162 * (t14 * t436 - t15 * t83) - t440 * t163 * t95));
t320 = t320 * t12;
t442 = t44 * t52;
t443 = t442 * t34;
t444 = t1 * t12;
t445 = t444 * t13;
t446 = t52 * t19;
t447 = -t446 * t410 - t1 * (t15 * (-t443 + t413) + t445);
t203 = t15 * (t15 * (t427 - t420) - t425) + t203 * t14;
t420 = t17 * t110;
t448 = -t105 * t428 * t2 * t54 + t420 * t12 + t15 * (t15 * t430 + t435);
t449 = t67 * t203;
t450 = t13 * t123;
t451 = t450 * t12;
t452 = t451 * t52;
t453 = (t180 * t448 * t58 * t68 - t15 * t439) * t68;
t454 = t27 * t180 * (t179 * (t447 * t68 + t449) + t452) + t453;
t455 = t67 * t12;
t456 = t68 * t34;
t457 = t456 * t14;
t458 = t455 + t457;
t99 = t99 * t228;
t459 = -t36 * t458 + t454;
t460 = t262 * t458 * t207;
t425 = t58 * t260 * t459 + t99 * (t189 * (-t218 * t34 + t222 * (-t202 * t458 * t221 + t207 * t454)) + (t27 * t200 * (t67 * (t425 * t14 - t424 + t195 * (-t427 * t58 + t426)) + t68 * (-t417 + t14 * (t1 * t413 + t15 * t410) - t415)) + t441 + t180 * (-t320 + t58 * (t14 * (t15 * (-t27 * t430 + t434) - t435) + t414) * t176)) * t221 * t222) - t460;
t427 = t170 * t6;
t435 = t22 * t14;
t461 = -t435 + t427;
t462 = t13 * t461;
t463 = t28 * t1;
t464 = t463 * t13 + t4 * t462;
t209 = t15 * (t209 - t38);
t465 = t195 * (-t166 * t58 + t27 * t464);
t466 = t46 * t6;
t467 = t27 * t1;
t468 = t467 * t174;
t469 = t466 + t468;
t470 = -t4 * t469 + t75;
t471 = t27 * t104;
t472 = -t467 * t11 * t13 + t4 * t471;
t473 = (t472 * t52 - t83) * t15;
t474 = t27 * t15 * (t472 * t55 + t96);
t475 = (t88 * t4 + t63 * t470) * t14;
t476 = t12 * t13;
t477 = (t110 * t38 + t15 * (-t159 * t105 + t147 * t476) - 0.8e1 / 0.3e1 * t14 * t464) * t15;
t478 = t13 * t68;
t167 = t145 * t478 * (t14 * t172 - t15 * t167);
t479 = t423 * t27 + (t15 * (t166 - t464) - t51) * t15;
t480 = 0.3e1 / 0.2e1 * t62;
t481 = t1 * t13;
t470 = -(t15 * (t14 * t472 + t15 * t470) - t94) * t15 + t481 * (t59 * t27 - t480);
t464 = -t105 * (t52 * (t365 * t476 - t464) + t423) - t137 * t15;
t472 = t67 * t470;
t482 = t15 * t172;
t483 = t482 * t440;
t484 = t27 * t200 * (t479 * t68 + t472) + t68 * (t180 * t464 * t58 * t68 - t483);
t485 = t175 * t54;
t486 = t15 * t12;
t487 = t481 * t195 * (t206 * t27 + t486 * t58);
t488 = t35 * t13;
t118 = -t118 * t4 + t120 * t15;
t47 = -t47 * t110 + t45 * t27;
t113 = -t113 * t14 + t47 * t6;
t120 = t40 * t27;
t117 = t117 + t120;
t489 = t113 * t4 + t117 * t3;
t490 = t111 * t476;
t491 = -t59 * t13;
t492 = t22 * t27;
t239 = t239 + t492;
t493 = t161 * t239;
t494 = t493 * t4;
t495 = t2 * t491;
t496 = t495 - t143;
t497 = t161 * t15;
t498 = t27 * t496 * t497 + t13 * (t463 * t161 * t145 * t14 + t379 * t52 * t145 + t494);
t499 = -t486 * t13;
t500 = t37 * t13 * t15;
t501 = t67 * t1;
t379 = t68 * (t14 * t498 - t15 * (t13 * (t1 * t145 * t161 * t37 - t379 * t195 * t201) - t27 * t161 * (t14 * (t495 - t143) + t15 * (-t2 * t499 + t166))));
t495 = t65 * t201 * t34 * t14;
t502 = (t486 + t206) * t15;
t503 = t15 * (t502 * t13 - t476);
t504 = t503 * t1;
t505 = t490 * t15 + t52 * (t489 + t108);
t506 = t501 * t488;
t443 = t27 * t200 * (t506 * t15 + t504 * t68) + t180 * (t176 * t505 * t58 - t443 * t145) - t183 * t498;
t507 = t1 * (t427 * t19 - t435);
t508 = t28 * t19;
t509 = t508 * t16 + t4 * t507;
t510 = t2 * t12;
t511 = t157 * t54;
t512 = t27 * t509;
t513 = t365 * t95;
t514 = t16 * t12;
t515 = t375 * t7;
t516 = -t515 + t87;
t517 = t116 * t28;
t518 = -t4 * t516 + t517;
t519 = t514 * t52;
t520 = t1 * (t37 * t2 + t95);
t521 = t1 * t518;
t522 = t14 * t514;
t523 = t62 * t58;
t524 = t195 * (t523 * t16 - t522 * t27);
t525 = -t123 - t124;
t526 = t525 * t7;
t24 = t24 * t105 + t526 * t6;
t527 = t24 * t4 + t28 * t525;
t528 = t365 * t145 * t95;
t529 = t105 * t1 * (t14 * t510 + t511);
t530 = -t59 * t2;
t531 = t144 * t34;
t532 = t157 * t15;
t533 = t532 + t530;
t534 = t154 * t4;
t535 = t13 * t531;
t536 = t27 * t163 * t533;
t537 = -t536 - t155 - t534 - t535;
t538 = t365 * t12;
t539 = -t538;
t540 = t15 * (-t145 * t163 * (t4 * (-t435 + t427) + t463) - t27 * t162 * (-t14 * t530 + t15 * t539));
t541 = t123 * t34;
t318 = t541 * t318;
t542 = t16 * t34;
t509 = t15 * (-t510 * t1 + t15 * (-t509 + t513)) + t542;
t522 = t15 * (t15 * (t62 * t16 - t522) + t521) + t59 * t16;
t543 = t510 * t1;
t544 = t95 * t2;
t545 = t105 * t15 * (t544 * t52 - t543) + t52 * t527 + t124 * t34;
t546 = t67 * t522;
t547 = t180 * t545 * t58 * t68;
t548 = t27 * (t215 + t180 * (t179 * (t509 * t68 + t546) - t541 * t52));
t549 = t68 * (-t15 * t537 + t547) - t548;
t550 = t5 * t4;
t551 = t550 * t54;
t552 = t467 * t206;
t553 = t15 * t95;
t554 = t1 * t35;
t555 = t110 * (t15 * (t1 * t37 + t15 * t539) - t554 * t14) - t195 * (t105 * t530 + t532 * t27);
t556 = t37 * t15;
t557 = t1 * t68;
t147 = t188 * t147 * t15;
t558 = t58 * t68;
t559 = t180 * t68;
t560 = t206 * t1;
t561 = t15 * (t15 * (t560 + t553) - t444);
t562 = (t15 * (t532 + t530) + t554) * t15;
t554 = t554 * t183;
t563 = t67 * t561;
t564 = t188 * t52;
t565 = t559 * (t68 * (t68 * (t563 - t554) + t562) + t564 * t2);
t566 = t176 - 0.1e1;
t480 = t67 * t15 * (t12 * (-t446 + t55) - t480 * t14) * t68;
t567 = t52 * t186;
t568 = t181 * (t566 * t34 * t52 - t67 * t567 * t68);
t569 = t5 ^ 2;
t570 = t569 - t27;
t571 = t7 ^ 2;
t572 = -t19 + t571;
t573 = t4 ^ 2;
t574 = t570 * t573;
t575 = 0.1e1 + t574;
t576 = t7 * t8;
t577 = t576 * t575;
t578 = t3 * t572;
t579 = t578 * t27 * t6 * t4;
t580 = t579 + t577;
t581 = t206 * t34;
t579 = -t579 - t15 * (-t15 * t580 + t581) - t577;
t582 = t550 * t34;
t583 = t570 * t571;
t584 = 0.1e1 + t583;
t585 = -t27 * t569 + t584;
t586 = t11 * t10;
t587 = t586 * t27;
t588 = t573 * t585 + t571 - t587;
t589 = t574 * t572 - t19 + t571 - t587;
t590 = t52 - 0.1e1;
t591 = -t27 * (t62 * t12 * t590 + t14 * t589) + t588 * t14 * t52;
t592 = t550 * t12;
t593 = t27 * t588;
t594 = t569 * t201;
t595 = t77 * t27;
t596 = t595 * t6;
t597 = t596 + t101 * (t594 - 0.16e2);
t598 = t440 * t237 * t22;
t599 = t598 * t8;
t600 = t46 * t19;
t601 = t84 - t600;
t602 = t571 * t145;
t603 = -t602 + t27;
t604 = t601 * t5;
t605 = t481 * t603 * t6 + t604;
t606 = (t597 * t7 + t599) * t4;
t607 = t201 * t7;
t608 = t4 * (-t3 * t605 * t145 + t606) + t607 * t101;
t609 = t174 * t1;
t610 = t609 * t6;
t611 = t610 + t46 * (t19 - t569 / 0.4e1);
t612 = -t360 * t19 - t348 / 0.8e1;
t613 = t571 / 0.4e1;
t614 = 0.16e2 * t3;
t615 = t27 * (t569 + t145);
t616 = t40 * t6;
t617 = t613 * t237 * n3p + t14 * t612 + t616 * t7;
t618 = t571 * t201;
t619 = -t618 + t57;
t620 = (-t201 * t7 * (t14 * t611 + t45 * t570) - t615 * t44) * t4;
t621 = t8 * t27;
t622 = t4 * (t614 * t617 + t620) + t621 * t42 + t44 * t619;
t596 = t596 + t101 * (-t569 * t57 + 0.12e2);
t623 = t58 * t571 - 0.3e1 / 0.2e1;
t624 = t481 * t623 * t6 + t604;
t599 = (t596 * t7 + t599) * t4;
t625 = t4 * (-t3 * t624 * t145 + t599) - t101 * t57 * t7;
t626 = t346 * t5;
t627 = t626 * t34;
t628 = -t19 + t571;
t629 = t27 * t3;
t630 = 0.1e1 + t569 + t583;
t631 = 0.3e1 / 0.4e1;
t632 = t8 * (-t631 * t6 * t1 * t5 + t116 * t570 * t7);
t633 = t630 * n3p / 0.4e1 + t632 * t13;
t634 = 0.3e1 / 0.8e1 * t609 - t466 / 0.4e1;
t344 = -t344 * t19 + t7 * (t84 * t6 + t634);
t635 = t91 * t7;
t636 = -n3p * (0.1e1 - t571) / 0.4e1 + t573 * t633 + t635 + t629 * t344 * t4;
t637 = t569 + t110;
t638 = t19 * t571;
t639 = t638 * t481;
t640 = t631 * (t466 * t122 * t5 + t481 * t637);
t641 = t102 * t27 + t103;
t642 = 0.1e1 - t7;
t643 = 0.1e1 + t7;
t644 = t32 * t3;
t645 = t481 * t642 * t643;
t646 = t14 * t170 * t570;
t647 = t22 * t6;
t648 = t7 * (t646 - t647);
t649 = -t13 * t19 * t648 - t640 * t14;
t650 = t641 * t14;
t651 = t22 * t8;
t652 = t651 * t13;
t653 = t650 * t7 + t652;
t654 = t19 * (t3 * t653 * t4 + t645 * t14) + t573 * t649;
t655 = t584 + 0.3e1 / 0.2e1 * t569;
t587 = t573 * t655 + t571 - t587 - 0.1e1;
t656 = t41 * t122 + t91;
t657 = -t46 * t122 + t84;
t658 = t656 * t6;
t659 = -t3 * t657 + t658 * t4;
t660 = t15 * t13;
t661 = t481 * t67;
t662 = t188 * t157;
t168 = (t68 * (t67 * (-t201 * (-t14 * t654 + t15 * (t15 * (t40 * t15 * t7 * t575 + t629 * t369 * t628 * t4) + t19 * t15 * (t644 * t641 + t645) - t573 * t15 * (t639 * t570 + t640))) + t195 * (0.24e2 * t159 * t34 + 0.16e2 * t636)) + t68 * (-t145 * t15 * (t12 * t159 * (-t52 - 0.1e1) + t13 * (t116 * t52 * t593 + t627)) - t14 * t625 + t52 * (t614 * t15 * (t613 * t348 + t612) * t4 + (-t573 * t611 * t201 + t46 * t27) * t15 * t7) - t195 * (t58 * t608 * t15 + t27 * t622))) - t57 * t550 * (-t14 * t659 + t168) + t660 * (-t116 * t201 * t587 + t627 * t145)) * t68;
t575 = t176 * t16;
t612 = t123 + t575;
t627 = t183 * t180;
t640 = t627 * t612 - t146;
t641 = t416 * t175 * t145;
t608 = (t15 * (t15 * (t65 * t593 + t608) + t622) + t625) * t15 - t641 * t14;
t622 = t159 * t34;
t625 = t550 * t96 * t145;
t636 = -t201 * (t15 * (t636 + t622) + t654) * t15 - t625;
t645 = t416 * t206;
t654 = t587 * t2 * t52 + t645;
t663 = t62 * t57;
t664 = t13 * t145 * t654 - t663 * t659;
t665 = t1 * t579 * t178 - t662;
t666 = t660 * t467;
t667 = -t145 * t660 * t665 + (t68 * (t608 * t68 + t636 * t67) + t664) * t68 + t666 * t591 * t67 * t177;
t668 = t559 * t14;
t669 = t668 * t612;
t670 = 0.1e1 / t5;
t671 = n3p * t549;
t672 = n3ppp * t568;
t673 = t671 - t672;
t674 = t233 * t16 * t67;
t211 = t267 * (t58 * t260 * t341 + t236 * (t189 * (-t202 * t338 * t221 + t207 * t334 + t340) + t221 * (t27 * t200 * (t67 * (-t15 * (-t284 * t52 + t288) - t289 * t14 + t195 * (-t290 * t27 + t291 * t58)) + t68 * (-t1 * (t14 * t278 + t15 * (t280 * t52 + t275)) + t195 * (t211 * t269 - t27 * t271))) + t68 * (t14 * t313 - t15 * (-t27 * t162 * (t14 * t308 - t315) + t316)) + t180 * (-t321 + t58 * (t15 * (-t14 * (t27 * t296 + t302 * t58) + t304) + t52 * (-t119 * t3 + t294) - t300 * t14) * t176))) - t342) + t266 * t425;
t60 = (-(-t145 * t13 * (t662 * t14 + (-t14 * t579 + t15 * (-t195 * t27 * t580 - t582 * t56)) * t178 * t1) - t27 * t661 * t177 * (t14 * t591 - t15 * (-t27 * (t14 * (t195 * t588 + t592) + t15 * t589) + t52 * (t15 * t588 + t550 * t60))) + t168) * t640 + t667 * t669) * t224 * t121 * t223 * t229 * t226;
t168 = t235 * (n3p * (t27 * t200 * (t67 * (t524 - t15 * (t520 - t519) + t521 * t14) + t68 * (-t1 * (t14 * t510 + t511) + t195 * (t513 * t58 - t512))) + t68 * (t14 * t537 - t540) + t180 * (-t318 + t58 * (t529 - t195 * (t27 * t527 + t528)) * t176)) + n3pp * (t27 * t200 * (t67 * (t1 * (t551 + t185) - t195 * (t553 * t58 + t552)) + t557 * (t14 * t35 - t556)) + t559 * (t558 * t555 - t147))) * t227;
t271 = t256 * t16;
t108 = (t207 * t673 * t224 * t121 - t674 * (t27 * t200 * (t68 * (-t487 + t1 * (t14 * t476 + t485)) + t501 * (-t14 * t488 + t500)) + t379 + t180 * (t495 + t58 * (t118 * t52 + t14 * (t15 * (-t58 * t108 - t27 * t489) - t490)) * t176))) * t223 * t231 * t225;
t275 = t2 * t484;
t284 = t275 * t256 * t1;
t289 = n3pp * t565;
t290 = t640 * t667;
t291 = t290 * t221 * t222 * t121;
t296 = t189 * (t289 + t284) - t291;
t300 = t256 * t2;
t302 = t300 * t1;
t94 = t236 * (t207 * t296 + t221 * (n3ppp * t181 * (t195 * t566 * t34 + t480) + t302 * (t27 * t200 * (t67 * (-t94 * t14 - t473 + t474 + t475) + t68 * (t465 + t209 + t210)) + t167 + t184 * (t137 * t14 + t477))));
t210 = t16 * t67;
t425 = t210 * t443;
t290 = t290 * t145;
t31 = t27 * t94 + t57 * t260 * (t289 + t284) - t58 * t115 * (t221 * (t672 - t671) + t425) + t1 * (t58 * t115 * (-t36 * t207 + t98) + t31 + t140 * (-t128 * t207 ^ 2 + t139 * t228 * t55)) + t2 * (t58 * t260 * (t256 * t220 + t253 - t257) + t236 * (t221 * (t189 * (-t202 * t255 + t67 * (t207 * t218 + t232)) - t57 * t247 * (t198 * t68 + t191) + t169 + t200 * (-t201 * t212 * t67 + t248 * t82) + t256 * t219) + t253 * t189 * t207) - t262 * t255 * t207) + t343 * (t58 * t260 * t408 + t236 * (t189 * (t202 * t403 * t221 + t207 * t397 + t407) + t221 * (t27 * t200 * (t67 * (t347 * (-t359 * t58 + t358) - t356) + t381) + t380 + t114)) + t409) + t211 * t670 + t60 + t168 - t271 * t443 * t223 * t121 * t224 * t231 * t207 + t108 - t290 * t223 * t224 * t230 * t121 * t226 * t14;
t60 = t2 * t6;
t82 = t170 * t205;
t94 = t82 * t145;
t108 = t68 * (t15 * (-t241 * t27 * t371 * t4 + t13 * t242 * (-t60 + t94) * t4) + t250 * t6 * t144) - t15 * t374 * t67;
t115 = t201 * t386 * t67;
t168 = t186 * t67 - t254;
t191 = t32 * t68 * t5;
t198 = t235 * t227;
t202 = t235 * t226;
t211 = t202 * t67;
t212 = t261 * t227 * t231;
t219 = t212 * t403;
t232 = t67 ^ 2;
t250 = -t176 + t232;
t260 = t189 * t168;
t261 = t260 * t220 + t58 * t253;
t138 = -t27 * t218 * t223 * t121 * t224 * t225 * t231 * t207 * (t260 + t256) + t58 * t211 * (t220 * t222 * t14 + t204) + t236 * (t189 * (t98 * t168 + t207 * t253) + t221 * (-t57 * t247 * (t199 * t68 + t138) + t169 + t200 * (-t201 * t193 * t67 + t248 * t197)) + t221 * t261 * t222 * t14);
t169 = -t57 * t247 * (t506 * t183 + t505) - t15 * (-t498 * t67 + t68 * (t27 * t496 * t627 + t13 * (t559 * t157 * t52 * t145 + t668 * t463 * t145 + t239 * t4 * t559))) + t200 * (t467 * t183 * t488 - t201 * t504 * t67);
t148 = t148 * t9 * t68 * m0;
t193 = t3 * t249 * t5 * t144;
t197 = t68 * t317;
t199 = t212 * t338;
t239 = t15 * (-t439 * t67 + t68 * (-t440 * t242 * t59 * t1 - t241 * t27 * t436));
t203 = t248 * t203;
t262 = t57 * t247 * (t449 * t68 + t448);
t359 = t12 * t68;
t374 = t67 * t34;
t386 = t14 * t374 - t359;
t439 = t218 * t386;
t448 = t212 * t458;
t496 = t27 * t241 * t533;
t498 = t175 * t144;
t504 = t27 * t68 * (t200 * t522 + t498);
t505 = t57 * t247 * (-t546 * t68 + t545);
t506 = t161 * t201 * t509 * t179;
t509 = t575 * t58;
t511 = t497 * (t123 + t509);
t513 = t591 * t67;
t521 = t157 * t34;
t522 = t472 * t68;
t470 = t248 * t470;
t172 = t145 * t660 * (t242 * t35 * t68 - t172 * t67);
t533 = -t232 + t176;
t545 = t27 * t180 * (t533 * t34 * t52 * t2 + t177 * t561) + t247 * (-t145 * t562 + t68 * (t554 * t201 - t563 * t57));
t546 = t176 * t145;
t553 = t559 * (t374 * (t546 - t27) * t52 + t68 * t567 * (-t232 * t58 + t176));
t312 = t266 * (t58 * t211 * t459 + t198 * (t189 * (t168 * t454 + t253 * t458 + t439) - t239 - t262 + t200 * (-t201 * t447 * t67 + t203)) - t448 * t168) + t267 * (t58 * t211 * t341 + t198 * (t189 * (t168 * t334 + t218 * (t336 * t67 - t197) + t253 * t338) + t57 * t247 * (t332 * t68 - t329) - t68 * (t15 * (t13 * (-t243 * t3 + t148) + t27 * t241 * t312) + t193) + t15 * t313 * t67 + t200 * (t201 * t324 * t67 - t248 * t327)) - t199 * t168);
t313 = (t511 * t667 - t640 * (t27 * t68 * (t481 * t15 * t591 * t177 - t232 * t636) + t68 * (-t558 * t608 * t67 + t660 * (t521 * t145 + t501 * t176 * (-t513 * t201 + 0.20e2 * t68 * t579))) + t179 * t636 - t664 * t67)) * t224 * t121 * t223 * t229 * t226;
t324 = (t233 * (n3p * (t506 - t504 - t15 * (-t537 * t67 + t68 * (-t243 * t4 - t244 - t496)) - t505) + n3pp * t545 + n3ppp * t553) + t168 * t673 * t224 * t121) * t223 * t231 * t227;
t128 = t1 * t138 + t2 * (t58 * t211 * (-t257 + t253) + t198 * (t189 * (t168 * t253 - t218 * (t186 * t68 + t188) + t253 * t255) + t220 + t180 * t196 * t250 * t57 - t183 * (t13 * (-t162 * t240 * t4 - t149 * t28) + t164 - t165) - t251 * t67 + t180 * (0.12e2 * t67 * t232 * t213 * t68 + 0.24e2 * t232 * t208 * t176 - t252 * t177 - 0.20e2 * t217 * t179) + t160 * t27 * t67 + t256 * t261) + t198 * (-t128 * t255 * t168 + t139 * t232)) + t343 * (t58 * t211 * t408 + t198 * (t189 * (t168 * t397 + t218 * (t401 * t67 + t191) - t253 * t403) - t57 * t247 * (t395 * t68 + t390) - t108 + t200 * (t248 * t389 - t115)) + t219 * t168) + t670 * t312 + t313 - t140 * t16 * t443 + (-t425 * t168 * t224 * t121 - t674 * t169) * t223 * t231 * t225 + t324;
t30 = t9 * t18 + t30 * t3;
t138 = t412 * t6 + t276;
t139 = t3 * t80 + t283;
t140 = t3 * t90 - t285;
t149 = t14 * t139;
t160 = t15 * (t3 * t74 + t282);
t164 = t106 * t3 + t292;
t165 = t25 * t3 - t295;
t186 = t136 * t3 + t297;
t196 = t2 * t52;
t208 = t142 * t3 + t307;
t213 = -t311 + t208;
t154 = t13 * (-t154 * t3 + t309) + t27 * t163 * t213;
t217 = t15 * (t1 * t138 + t15 * (-t19 * t30 - t322)) - t323;
t240 = t15 * (-t140 * t1 + t15 * (-t160 + t149)) - t326;
t251 = t328 + (-t1 * t186 + t15 * (t365 * t164 - t165)) * t15;
t252 = t67 * t240;
t257 = t183 * t154 - t27 * t200 * (t217 * t68 + t252) - t333 - t184 * t251;
t261 = t220 * t338 * t189 - t58 * t257;
t148 = t198 * (t189 * (t218 * (t336 * t67 - t197) + t253 * t338 - t255 * t257) - t57 * t247 * (t252 * t68 + t251) - t68 * (t15 * (t13 * (-t243 * t3 + t148) + t27 * t241 * t213) + t193) + t15 * t154 * t67 + t200 * (-t201 * t217 * t67 + t248 * t240) + t256 * t261) - t199 * t255;
t193 = t6 * t343;
t213 = t198 * t341;
t217 = t4 * t43;
t240 = t217 * t6;
t241 = t185 * t17;
t243 = t298 * t4;
t251 = t420 * t34;
t252 = t421 - t141;
t276 = t62 - t59;
t282 = t276 * t68;
t283 = t198 * t408;
t292 = t15 * t3;
t295 = t383 * t11 * t110;
t297 = t163 * t3;
t298 = t13 * t3 * t392;
t311 = t218 * (-t11 * t67 * t5 + t3 * t400 * t68);
t312 = t219 * t338;
t313 = t312 + t198 * (t189 * (t257 * t403 + t338 * t397 + t311) - t27 * t200 * (t3 * t385 * t68 + t3 * t388 * t67) + t298 - t183 * (t27 * t297 * t371 - t373 * t3) + t184 * (-t292 * t367 + t295));
t322 = t198 * t459;
t324 = t442 * t317;
t326 = t481 * t269;
t327 = t446 * (t268 * t18 + t32 * t18);
t328 = t105 * t4 * t130;
t329 = t15 * (-t126 * t4 + t429 * t3);
t332 = -t105 * t481 * t273 * t2 * t54;
t333 = t420 * t269;
t89 = t89 * t3 - t285;
t336 = t13 * t150 * t269;
t306 = t67 * (t15 * (-t1 * (t85 * t4 + t306) + t15 * (-n3p * t1 * t15 * t273 + t14 * t273 * t70)) + t323 * t14);
t323 = t450 * t269 * t52;
t341 = t558 * t180;
t367 = t67 * t269;
t371 = t218 * (t317 * t14 * t68 + t367);
t199 = t199 * t458;
t373 = t198 * (t189 * (-t257 * t458 + t338 * t454 + t371) - t27 * t180 * (t179 * (-t68 * (-t327 + t1 * (t15 * (t411 * t3 - t324 - t50) + t326)) + t306) + t323) + t68 * (-t15 * (t438 * t89 + t336) + t341 * (t332 - t333 + t15 * (t1 * (-t432 * t3 - t328) - t329)))) - t199;
t383 = t481 * t9;
t385 = t3 * t462 - t383;
t388 = t467 * t317 * t13;
t389 = t32 * n3p;
t392 = t281 * t27;
t395 = t392 * t13;
t408 = t481 * (-t325 * t27 + 0.3e1 / 0.2e1 * t335);
t411 = t13 * t269;
t412 = t105 * (t52 * (t365 * t411 - t385) + t481 * t317);
t421 = t440 * t15;
t429 = -t421 * t161 * t116 * t273;
t432 = t15 * t269;
t459 = t432 + t339;
t537 = t1 * t15;
t554 = t14 * t273;
t561 = t4 * t117;
t562 = t111 * t411 * t15;
t563 = t325 * t13;
t567 = t161 * t9 * t145 * t1 * t14;
t591 = t2 * t563;
t608 = t279 * t161 * t52 * t145;
t636 = t324 * t145;
t411 = t27 * t200 * (-t68 * t537 * (-t660 * t459 + t411) - t501 * t554 * t13 * t15);
t662 = t270 * t16;
t664 = t2 * t269;
t668 = t365 * t287;
t671 = t664 * t1;
t672 = t16 * t317;
t675 = t16 * t269;
t676 = t116 * t9;
t677 = (t14 * t675 - t335 * t16) * t15;
t678 = t325 * t16;
t679 = t9 * t525;
t680 = t105 * t15 * (t196 * t287 - t671);
t681 = t124 * t317;
t682 = t116 * t269;
t683 = t279 * t15;
t684 = t123 * t52;
t685 = t684 * t317;
t309 = t15 * (-t27 * t163 * (-t683 + t682) - t13 * t144 * t273 - t309 + t310);
t310 = t1 * t554;
t310 = t559 * (t68 * (t68 * (t67 * t15 * (-t1 * t269 + t15 * (t339 * t1 + t15 * t287)) + t310 * t183) - (t15 * (-t683 + t682) + t310) * t15) + t337 * t196);
t683 = t335 - t325;
t686 = t181 * (-t67 * t52 * t683 * t68 + t566 * t317 * t52);
t687 = t3 ^ 2 - t573;
t688 = t11 * t9 * t570;
t689 = t687 * t572 * t6;
t690 = t688 + t689;
t691 = t4 * t317;
t692 = t3 * t34;
t693 = t692 + t691;
t694 = t61 * t14;
t695 = t576 * t687 * t6;
t585 = t585 * t4 * t3 - t695;
t696 = -t578 * t570 * t4 + t695;
t697 = -t52 + 0.1e1;
t698 = t3 * t12;
t699 = t145 * t14;
t691 = t692 + t691;
t692 = t205 * t1;
t700 = t4 * t269;
t701 = t700 + t698;
t702 = t22 * t13;
t657 = t4 * t657;
t703 = t442 * t201;
t704 = t67 * t691;
t49 = -t193 * t213 - t266 * t373 - t267 * (t198 * (t189 * (-t218 * (t282 + t374) + t338 * (t334 - t257)) + t27 * t200 * (-t67 * (t15 * (-t1 * (-t4 * t90 - t93) + t15 * (t14 * (-t4 * t80 + t81) - t15 * (-t4 * t74 + t76))) + t241) + t68 * (t15 * (t1 * (t240 - t49) + t15 * (-t66 * t12 + t29 * t19 - t26 * t4)) - t17 * t34)) + t13 * (t216 * t34 * t52 - t215) - t183 * (-t13 * (t155 + t534) + t27 * t163 * (-t159 + t252)) + t184 * (t251 + (t1 * (t243 + t135) + t15 * (-t25 * t4 - t127 + t365 * (t106 * t4 - t107))) * t15)) - t212 * t338 ^ 2) - t343 * t322;
t66 = (-t145 * t660 * (t704 * t22 + t1 * (t27 * (-t52 * t690 + t688 + t689) + t694 * t693) * t178) + (t68 * (t67 * (t145 * t609 * t701 + t201 * t15 * (t19 * t653 * t687 + t629 * t649 * t4 + t702 * t52 * t691) + (0.16e2 * t633 * t4 * t3 + 0.16e2 * t344 * t687) * t52) + t68 * (t145 * t13 * (-t585 * t2 * t53 + t692 * t691) + (t145 * t624 * t687 + t15 * (t15 * (t145 * t605 * t687 - t606 * t629) - 0.16e2 * t617 * t687 - t620 * t629) - t599 * t629) * t15)) - t14 * t145 * t609 * t693 + t57 * t61 * (t3 * t659 + t4 * (t658 * t3 + t657)) - t703 * (t655 * t4 * t3 - t695)) * t68 + t666 * (-t27 * t15 * (t550 * t697 * t269 + t698 * t697 * t5 + t195 * t585) - t699 * t696) * t67 * t177) * t223 * t224 * t229 * t121 * t226 * t640;
t74 = (-t338 * t673 * t224 * t121 + t233 * (-n3p * (-t27 * (t180 * (t179 * (t67 * (t15 * (t1 * (t3 * t516 + t676) + t677) - t678) + t68 * (t15 * (t15 * (t3 * t507 - t662 - t668) + t671) - t672)) + t685) - t331) + t68 * (-t309 + t341 * (t52 * (-t24 * t3 + t679) - t680 - t681))) - n3ppp * t686)) * t223 * t231 * t227;
t76 = (t425 * t338 * t224 * t121 + t674 * (-t183 * (t13 * (-t3 * t493 + t567 - t608) + t27 * t497 * (t591 + t208)) + t180 * (t176 * (-t562 + t52 * (-t113 * t3 + t15 * t164 + t561)) * t58 + t636) - t411)) * t223 * t231 * t225;
t30 = -t1 * (-t342 + t236 * (t189 * (-t207 * t257 + t98 * t338 + t340) + t221 * (t27 * t200 * (t67 * (t15 * (t139 * t52 - t288) + t140 * t1 * t14 + t195 * (-t149 * t27 + t160 * t58)) + t68 * (t15 * (-t23 * t3 * t13 * t52 + t14 * t30 - t303) - t1 * t138 * t14 + t287 * t63 * t44 * t14)) + t68 * (t14 * t154 - t15 * (-t27 * t162 * (t14 * t208 - t315) + t316)) + t180 * (-t321 + t58 * (t15 * (t14 * t165 * t27 + t304) + t14 * (-t196 * t58 * t164 + t1 * t186) + t52 * (-t119 * t3 + t294)) * t176)) + t221 * t261 * t222 * t14)) - t2 * t148 - t343 * t313 + t670 * t49 + t266 * t283 + t66 + t74 + t76;
t49 = t71 - t79;
t66 = t15 * t49;
t71 = t4 * (t15 * (t15 * (-t66 + t357) - t354) - t387);
t74 = t67 * t71;
t76 = -t27 * t200 * (t394 - t74) + t393 - t396;
t79 = t220 * t403 * t189 + t58 * t76;
t81 = -t265 * t6 + t266 * t5;
t93 = t92 * t5;
t107 = t237 * t8;
t25 = t198 * (t189 * (-t218 * (t68 * t4 * (t61 - t107) + t33 * t67) + t403 * (-t397 + t76)) - t27 * t200 * (t67 * t4 * (t15 * (t1 * t90 + t15 * (-t14 * t80 + t15 * (t70 * t5 + t72))) + t237 * t17 * t8) - t68 * t4 * (-t17 * t6 * t7 - t26 * t52 + t537 * (-t378 + t43) * t6)) + t13 * t4 * (t216 * t6 * t7 * t52 - t174 * t67 * t144) - t183 * (t27 * t372 * (-t660 * t22 + t142) - t534 * t13) + t184 * (-t368 * (t15 * (-t365 * t106 + t25) + t136 * t1) + t420 * t33)) - t212 * t403 ^ 2;
t20 = t20 * t9 * t5 * t52 - t626 * (t15 * (-t45 * t52 + t48) + t101);
t26 = t7 * t14;
t72 = t175 * t1;
t80 = t8 * t13;
t90 = t67 * t550 * (t15 * (t1 * t92 + t15 * (t26 * t70 - t537 * t41)) - t26 * t17);
t106 = t684 * t174 * t9;
t110 = (t15 * t550 * (t80 * t150 + t438 * t85) + t341 * (t62 * (t1 * t134 - t125 * t15) + t72 * (-t353 * t105 * t54 + t100 * t110))) * t68;
t119 = t67 * t8;
t127 = t550 * (t26 * t68 + t119);
t135 = t218 * t127;
t136 = t219 * t458;
t139 = t13 * t377;
t148 = t368 * (-t139 * t15 + t382 * t5) + t392 * t174;
t149 = t46 * t5;
t154 = t467 * t6 * t13;
t160 = -t154 + t149;
t163 = t346 * t13;
t132 = -t105 * t4 * (-t139 * t52 + t174 * (t39 * t54 + t170)) + t62 * t132;
t139 = t67 * (t163 * (0.3e1 / 0.2e1 * t399 + t398 * t27) + t368 * (t15 * (-t14 * t27 * t362 + t15 * t160) + t352));
t164 = t402 * t319 * t22;
t165 = t195 * t6;
t215 = t4 * t52;
t216 = t161 * t62;
t257 = t13 * t4;
t92 = t27 * t200 * (-t68 * t660 * t346 * (t697 * t5 * t8 + t165) + t694 * t281 * t67 * t13) + t180 * (-t440 * t32 * t22 * t52 + t176 * (t111 * t61 * t9 * t13 + t215 * (t237 * t111 * t13 - t15 * t363 + t47 * t5)) * t58) - t183 * (-t27 * t216 * (t91 + t92) + t257 * (-t162 * t145 * t6 * t52 + t161 * (-t60 * t27 + t94)));
t94 = t376 * t19;
t111 = t435 * t7;
t261 = t1 * t6;
t288 = t174 * t7 * t144;
t152 = t27 * t368 * t152 * m0 * t400;
t294 = t341 * (t105 * t15 * t23 * t590 * t9 + t4 * (t52 * (-t364 * t116 + t526 * t5) + t124 * t7 * t5));
t303 = t27 * (-t391 * t4 + t180 * (t179 * (t67 * t346 * (-t15 * (t261 * t52 - t111 - t350) + t205 * t100 * t697) - t68 * t4 * (t52 * t1 * (t94 + t375) + t23 * t8 * t15 * t697 - t16 * t7 * t5)) - t684 * t32 * t5));
t304 = t52 - 0.1e1;
t165 = t559 * (t68 * (t67 * t346 * t15 * (t304 * t5 * t8 - t165) * t68 - t368 * (t196 * t6 + t205 * (t39 * t15 - t170))) + t32 * (-t355 * t14 * t179 + t22 * t67 * t52));
t313 = t181 * (t67 * t215 * t400 * t68 + t32 * t566 * t5 * t52);
t315 = t550 * (t10 * t7 - t578);
t316 = t32 * t569;
t319 = t6 * t34;
t321 = t319 - t316;
t340 = t27 * t571;
t342 = -t340 + t145;
t344 = t5 * t6;
t350 = t28 * t27;
t354 = t350 * t5 * t7;
t357 = t4 * (t342 * t344 * t4 - t354);
t364 = t28 * t7;
t372 = t550 * (t572 * t6 * t4 + t364);
t373 = t6 * t12;
t377 = t6 ^ 2 - t569;
t382 = n3p * t377;
t391 = t27 * t382;
t392 = t145 * t91 * t377;
t393 = t6 * t601;
t394 = t145 * t3;
t396 = t481 * t377;
t400 = t466 * t19;
t402 = t101 * t377;
t420 = t77 * t6;
t526 = t46 * t377;
t316 = t319 - t316;
t319 = t9 * t569 - t373;
t361 = -t145 * t163 * t319 + t201 * t15 * (t15 * (t65 * t4 * t316 - t4 * (t4 * (-t19 * t420 * (0.1e1 + t571) + t402 * t631 - t576 * t492 * t237 * t13) + t629 * (-t435 * t19 * t13 + t7 * (t111 * t13 - 0.3e1 / 0.8e1 * t481 * t6 - t149 / 0.4e1)))) - t4 * (t4 * (-t19 * t377 * t45 + t14 * (-t631 * (-t122 * t526 - t468 * t6) + t610 * t571)) + t19 * t3 * (t26 * (t360 * t27 - t361) - t616)));
t373 = t666 * (t14 * (t145 * t372 + t357 * t52) + t27 * t368 * (t9 * t697 * t569 + t373 * t304)) * t67 * t177;
t21 = -t213 * t81 - t266 * (t198 * (-t189 * (t403 * t454 + t458 * t76 + t135) - t27 * t180 * (t179 * (-t20 * t68 + t90) - t106) + t110) + t136) - t267 * (t312 + t198 * (t189 * (-t334 * t403 - t338 * t76 + t311) - t27 * t200 * (t67 * t3 * (t15 * (t1 * t352 + t15 * (-t14 * t73 + t15 * t49)) + t387) - t68 * t3 * (-t21 * t52 - t384 + t355 * (-t378 + t43))) - t183 * (t27 * t297 * (t369 + t93) - t13 * t153 * t3) + t298 + t184 * (t295 + t292 * (t15 * (t365 * t363 - t366) + t131 * t5 * t1)))) + (-t213 * t267 - t266 * t322) * t670 * t6;
t49 = (-t145 * t660 * (t2 * t4 * t67 * t316 + t1 * (t27 * (-t315 * t52 + t315) + t347 * t321) * t178) + (t68 * (t67 * t361 + t68 * (t14 * t145 * t163 * t321 + (t15 * (t15 * (t65 * t357 * t27 + t4 * (t4 * (t7 * (-0.16e2 * t102 * t5 - t391) - t392) - t394 * (t609 * t603 - t393))) + t4 * (t4 * (-t607 * t14 * (t400 * t5 - t396) + t647 * (t145 + 0.16e2 * t571) * t13) + t614 * (t613 * t77 * t14 + t14 * (t102 * t19 - t77 / 0.8e1) + t702 * t576))) + t4 * (t4 * (t7 * (0.12e2 * t102 * t5 - t391) - t392) - t394 * (t609 * t623 - t393))) * t15)) - t145 * t13 * (t346 * t14 * t316 - t196 * t4 * (-t4 * t344 * (t340 + t58) - t354)) + t57 * t368 * (-t569 * t656 * t4 + t6 * t659)) * t68 + t373) * t223 * t224 * t229 * t121 * t226 * t640;
t21 = -t1 * (t409 - t236 * (t189 * (t207 * t76 + t98 * t403 - t407) - t221 * (t27 * t200 * (t67 * (-t356 + t347 * (-t66 * t58 + t358)) + t381) + t114 + t380) + t221 * t79 * t222 * t14)) - t2 * (t219 * t255 - t198 * (t189 * (-t218 * (t401 * t67 + t191) + t253 * t403 + t255 * t76) - t57 * t247 * (t74 * t68 - t390) + t108 + t200 * (t248 * t71 + t115) + t256 * t79)) - t343 * t25 + t670 * t21 + t49 + (t233 * (-n3p * (t68 * (-t15 * (t152 - t4 * (t288 + t153)) + t294) - t303) + n3ppp * t313) + t403 * t673 * t224 * t121) * t223 * t231 * t227 + (-t425 * t403 * t224 * t121 + t674 * t92) * t223 * t231 * t225;
t25 = -t27 * t180 * (t179 * (t447 * t68 + t449) + t452) - t453;
t49 = t220 * t458 * t189 - t58 * t25;
t66 = t221 * t14;
t71 = t48 * t6;
t73 = t141 * t6 - t285;
t74 = t442 * t12;
t76 = t59 * t68;
t18 = t198 * (t189 * (t218 * (t76 - t374) + t458 * (t454 - t25)) + t27 * t180 * (t179 * (t67 * (t15 * (-t1 * (t307 * t6 + t305) + t15 * (-n3p * t15 * t95 + t12 * t14 * t70)) - t241) + t68 * (-t1 * (t15 * (t3 * t48 - t240 + t74) + t481 * t34) + t446 * (t33 * t18 + t29))) + t450 * t34 * t52) + t68 * (-t15 * (-t13 * t150 * t34 + t438 * t422) + t341 * (t251 + t15 * (t1 * (t431 * t133 + t243) + t15 * (-t126 * t6 * t4 - t3 * t125)) + t105 * t96 * t2 * t54))) - t212 * t458 ^ 2;
t29 = t65 * t34;
t70 = -(t15 * (-t96 - t29) + t413) * t15 - t445 * t27;
t79 = t428 * t52;
t108 = t13 * t34;
t114 = -t105 * (t52 * (t365 * t108 + t96) - t445) + t15 * t433;
t115 = t67 * (-t27 * t14 * (-t423 + t79) + t15 * (n3p * t34 * t52 - t422));
t125 = t421 * t162 * t59;
t47 = t27 * t200 * (-t68 * t537 * (-t182 * t52 + t108) + t501 * t491 * t15) + t180 * (t74 * t145 + t176 * (t105 * t15 * (t1 * t108 - t79) + t52 * (-t117 * t6 * t4 + t3 * t47)) * t58) - t183 * (-t27 * t497 * (t2 * t488 + t436) - t440 * t161 * t59 * t1);
t74 = t2 * t34;
t79 = t196 * t34;
t117 = t16 * t34;
t126 = t35 * t2;
t74 = t27 * t180 * (t179 * (t67 * (t14 * (t117 * t52 - t542) - t537 * t530) + t68 * (t1 * (t15 * (-t79 + t74) + t444) - t446 * t514)) - t684 * t12) + t68 * (-t15 * (t12 * t13 * t144 + t438 * t126 + t437) + t341 * (-t12 * t52 * t525 + t105 * t15 * (-t1 * t74 + t196 * t418) - t124 * t12));
t124 = -t59;
t131 = t124 * t1;
t131 = t559 * (t68 * (t68 * (t67 * t15 * (t1 * t34 - t418 * t52) + t131 * t183) - t15 * (-t126 * t15 + t131)) + t455 * t196);
t141 = t181 * t52;
t150 = t141 * (t12 * t566 - t457 * t67);
t162 = t8 ^ 2;
t191 = t162 - t571;
t196 = t574 * t191;
t212 = t586 * t145;
t219 = -t212 - t196 - t162 + t571;
t240 = -t4 * t191 * t3 * t6 + t577;
t241 = t19 * t569 - 0.1e1;
t243 = t170 * t13 * t241;
t251 = t598 * t7;
t285 = t41 * t19;
t295 = t285 * t5;
t297 = t481 * t191;
t298 = -t41 * t241;
t305 = t466 + t609;
t307 = t40 * t7;
t311 = t14 * n3p;
t312 = t44 * t14;
t316 = t635 * t27;
t347 = t702 * t7;
t344 = t201 * (t15 * (-t573 * (-t312 * t570 * t191 - t7 * (t600 * t570 + t610 * t631)) + t312 * t191 - t629 * (t6 * (-t613 * n3p - t316) - t634 * t8) * t4 + t285 * t8 + t159 * t12) - t19 * (t101 * t14 * (-t642 + t643) + t3 * (t467 * t237 * t13 * t571 - t650 * t8 + t347) * t4) - t573 * (-t344 * t42 / 0.4e1 + t80 * (-t647 * t19 + t646))) * t15 - t641;
t352 = t666 * (-t27 * t15 * (t195 * t240 + t582 * t304) + t699 * t240) * t67 * t177;
t18 = t266 * t18 + t267 * (t198 * (t189 * (-t25 * t338 + t334 * t458 + t371) - t27 * t180 * (t179 * (-t68 * (-t327 + t1 * (t15 * (t71 * t3 - t324 - t50) + t326)) + t306) + t323) + t68 * (-t15 * (t438 * t73 + t336) + t341 * (t332 - t333 + t15 * (t1 * (-t134 * t6 * t3 - t328) - t329)))) - t199);
t50 = (-t145 * t660 * (t455 * t157 + t1 * (t185 * t62 + t219 * t52 + t162 + t196 + t212 - t571) * t178) + (t68 * (t67 * t344 + t68 * (t145 * t13 * (-t240 * t2 * t53 + t444 * t206) + (t15 * (t15 * (-t201 * t297 + t4 * (t4 * (0.16e2 * t243 * t7 - t597 * t8 + t251) - t394 * (-t295 + t80 * (t427 * t201 - t435)))) - t27 * t311 * t191 + t573 * (-t201 * t14 * (t19 * t298 * t7 - t611 * t8) + 0.16e2 * t40 * t570 * t7) + 0.16e2 * t3 * (-t19 * t26 * t305 - t345 * t191) * t4 + 0.16e2 * t307) + t297 * t57 + t4 * (t4 * (-0.12e2 * t243 * t7 - t596 * t8 + t251) - t394 * (-t295 + t80 * (-t427 * t57 - t435)))) * t15)) + t550 * (-t444 * t440 * t14 - t15 * (t3 * t656 + t657 * t6) * t57) - t703 * t240) * t68 + t352) * t223 * t224 * t229 * t121 * t226 * t640;
t134 = (t458 * t673 * t224 * t121 + t233 * (n3p * t74 + n3ppp * t150)) * t223 * t231 * t227;
t178 = t198 * (-n3pp * t131 + t296 * t458 + t302 * (t27 * t200 * (t68 * t70 + t115) + t68 * (t341 * t114 + t125)));
t18 = t27 * t178 + t1 * (-t460 + t99 * (t222 * (t189 * (-t207 * t25 + t98 * t458) + t221 * (t27 * t200 * (t67 * (t1 * t422 * t14 - t424 + t195 * (-t58 * t419 * t15 + t426)) + t68 * (-t417 - t14 * (-t1 * t413 - t15 * t410) - t415)) + t441 + t180 * (-t320 + t58 * (t14 * (-t433 * t1 + t15 * (-t27 * t430 + t434)) + t414) * t176)) + t66 * t49 * t222) - t36 * t34)) + t2 * (t198 * (t189 * (-t25 * t255 + t253 * t458 + t439) - t239 - t262 + t200 * (-t201 * t447 * t67 + t203) + t256 * t49) - t448 * t255) + t343 * (t198 * (t189 * (t25 * t403 + t397 * t458 - t135) - t27 * t180 * (t179 * (-t20 * t68 + t90) - t106) + t110) + t136) + t670 * t18 - t50 + (-t425 * t458 * t224 * t121 - t674 * t47) * t223 * t231 * t225 + t134;
t20 = -t27 * t200 * (t479 * t68 + t472) + t68 * (-t341 * t464 + t483);
t25 = -t58 * t20;
t20 = t20 * t189;
t36 = t108 * t52;
t49 = t67 * t488;
t50 = -t145 * t68 * (t660 * t161 * t35 + t559 * t15 * (t62 * t14 * t13 + t304 * t476)) + t27 * t200 * (t15 * t49 + t503 * t68);
t90 = t95 * t52;
t98 = t145 * t68 * (t559 * (t15 * (t15 * (t365 * t12 - t4 * t461 - t463) - t510) + t416) + t482) + t27 * t200 * (t67 * (t15 * (t87 * t4 - t518) - t27 * (t14 * (-t90 + t95) + t626 * t54)) + t68 * (-t416 * t27 - (t15 * (-t4 * t461 - t463 + t538) - t510) * t15));
t99 = t486 + t206;
t106 = t181 * (t566 * t35 * t15 - t67 * (t15 * t99 - t12) * t15 * t68);
t110 = t80 * t241;
t134 = t6 * t13 * t628;
t135 = t175 * t35;
t136 = t175 * t12;
t178 = t19 * t14;
t191 = t667 * t189;
t196 = t2 * t67;
t199 = t256 * t1;
t203 = t189 * t231;
t70 = t266 * t198 * (t20 * t458 - t27 * t200 * (t68 * t70 + t115) - t68 * (t341 * t114 + t125)) + t267 * t198 * (t20 * t338 - t27 * t200 * (t67 * (t408 - (t15 * (t14 * (-t3 * t471 - t395) + t15 * (t3 * t469 + t389)) - t286) * t15) + t68 * (-t388 + (t15 * (t3 * t462 - t314 - t383) + t278) * t15)) - t68 * (t429 + t341 * (t15 * t299 + t412)));
t114 = (t145 * t478 * (-t15 * t579 * t177 + t581) + t176 * (t67 * (t15 * (-t201 * (t178 * t642 * t643 * t13 + t4 * (-t4 * t14 * (t638 * t570 * t13 + t13 * t631 * t637) + t364 * t237 * t13)) + t136 * t57 * t15) - t136 * t145) + t68 * (-t699 * t175 * t34 - t201 * t135 * t52 + t15 * (t52 * (t7 * (0.16e2 * t110 * t573 + t80 * t201) + t394 * t145 * t134 * t4) + t7 * (-0.12e2 * t110 * t573 - t80 * t57) - t394 * t58 * t134 * t4))) + t513 * t660 * t27 * t177) * t223 * t224 * t229 * t121 * t226 * t640;
t20 = t1 * t236 * (-t221 * (t14 * t25 * t222 + t27 * t200 * (t67 * (t475 + t474 - t473 - t194) + t68 * (t465 + t209 + t192)) + t167 + t184 * (t137 * t14 + t477)) + t20 * t207) + t2 * t198 * (t20 * t255 + t57 * t247 * (t464 + t522) + t172 - t200 * (-t201 * t479 * t67 + t470) - t256 * t25) + t227 * (-t234 * t14 * t220 * t229 + t235 * (-n3p * t98 - t204)) - t343 * t198 * (t20 * t403 + t27 * t200 * (t148 * t68 + t139) + t559 * (t558 * t132 - t164)) + t670 * t70 + t114 + (t207 * t218 * t224 * t121 + t674 * t50) * t223 * t231 * t225;
t25 = t58 * t443;
t70 = -t443 * t189;
t114 = t57 * t176;
t115 = t182 * t145;
t125 = t27 * t497 * (t124 * t2 + t530);
t137 = t145 * t161 * (t463 * t14 + t157 * t52);
t167 = t27 * t200 * (t68 * t537 * (t502 - t12) + t501 * t35 * t15);
t79 = t180 * (t79 * t145 + t176 * (-t105 * t15 * (-t90 + t444) + t52 * (t4 * (-t353 * t27 * t6 + t112 * t14) - t350 * t2)) * t58);
t90 = t559 * (t68 * t52 * (t62 + t124) + t564);
t105 = t175 * t59;
t112 = 0.1e1 + t52;
t184 = t237 * t13;
t192 = t184 * t628;
t194 = t175 * t34;
t204 = -t235 * t67 * t220 + t640 * (t115 * t62 * t67 + (t68 * (t67 * (-t201 * t52 * (t577 * t14 * t13 + t629 * t192 * t4 + t182 * t62) - t145 * t194 * t15) + t68 * (t145 * t105 * t15 * t112 + t52 * (t13 * (t7 * (t614 * t10 - t607) + t57) - t573 * t13 * (t618 * t570 + t615) + t593 * t13 * t52))) + t15 * (t550 * t57 * t491 + t421 * t587)) * t68) * t223 * t121 * t224 * t229;
t209 = t210 * t236;
t212 = (t233 * (-n3p * (t79 - t167 - t183 * (-t493 * t4 - t125 - t137)) - t253) + t218 * t255 * t224 * t121) * t223 * t231 * t227;
t25 = t1 * t236 * (-t221 * (t14 * t25 * t222 + t27 * t200 * (t67 * t1 * (-t14 * t488 + t500) + t68 * (-t487 + t1 * (t14 * t476 + t485))) + t379 + t180 * (t495 + t58 * (-t14 * (t15 * t489 * t27 + t490) + t52 * (t109 * t14 + t118)) * t176)) + t70 * t207) + t2 * t198 * (-t256 * t25 + t70 * t255 - t169) + t226 * t204 - t343 * t198 * (t70 * t403 + t92) + t670 * (t266 * t198 * (t70 * t458 - t47) + t267 * t198 * (t411 + t183 * (t13 * (-t3 * t493 + t567 - t608) + t27 * t497 * (t591 + t308)) - t180 * (t636 + t176 * (-t562 + t52 * (-t113 * t3 + t301 + t561)) * t58) + t70 * t338)) + t209 * t15 * (-t68 * (t145 * t497 * (t62 * t13 + t491) + t175 * t161 * t27) + t180 * (t114 * t108 - t115) * t15) + t212;
t47 = t213 * t6 + t322;
t70 = t3 * t670;
t92 = t4 * t670;
t109 = -t536 - t155 - t535 - t156;
t113 = t68 * (t109 * t15 - t547) + t548;
t115 = -t58 * t113;
t113 = t113 * t189;
t118 = -t100 * t241;
t155 = t651 * t237 * t145;
t156 = t353 * t570;
t169 = t692 * t6;
t204 = t353 * t6;
t212 = t238 * t27;
t218 = t1 * t14;
t24 = t266 * t198 * (t113 * t458 - t74) + t267 * t198 * (t113 * t338 - t27 * (t180 * (t179 * (t67 * (t15 * (t1 * (-t3 * t516 - t676) - t677) + t678) - t68 * (t15 * (t15 * (t3 * t507 - t662 - t668) + t671) - t672)) - t685) + t331) - t68 * (-t309 + t341 * (t52 * (-t24 * t3 + t679) - t680 - t681)));
t74 = (t144 * t667 + t640 * (t145 * t15 * t665 + (-t145 * t654 - t663 * t530 + t68 * (t67 * (t201 * (t15 * (t532 * t34 + t26 * t39 + t573 * t632 - t629 * (-0.3e1 / 0.8e1 * t376 - t375 * t628) * t4) - t19 * (-t218 * t642 * t643 - t3 * t8 * (t212 + t22) * t4) - t573 * (t631 * t14 * t1 * t637 + t19 * t648)) * t15 + t550 * t95 * t145) + t68 * (t645 * t145 - (t15 * (t15 * (t365 * t593 - t4 * (t4 * (0.16e2 * t118 * t7 - t155) - t394 * (-t261 * t603 - t111)) + t607 * t100) + t2 * t619 - t4 * (t4 * (t201 * t7 * (t169 + t156) + t615 * t2) + t614 * t8 * (t692 * t19 - t204))) - t4 * (t4 * (-0.12e2 * t118 * t7 - t155) - t394 * (-t261 * t623 - t111)) - t100 * t57 * t7) * t15))) * t68 - t513 * t467 * t15 * t177)) * t224 * t121 * t223 * t229 * t226;
t24 = -t27 * t198 * (n3p * (-t550 * t67 * t144 + t183 * t531) - t302 * t98) - t1 * t236 * (-t221 * (t14 * t115 * t222 + t27 * t200 * (t67 * (t524 + t15 * (-t520 + t519) + t1 * t518 * t14) + t68 * (t14 * (-t15 * t512 - t543) - t190 * t54 + t116 * t64 * t1)) + t68 * (t109 * t14 - t540) + t180 * (-t318 + t58 * (t529 - t195 * (t27 * t527 + t528)) * t176)) + t113 * t207) - t2 * t198 * (-t256 * t115 - t506 + t504 + t15 * (-t109 * t67 + t68 * (-t244 - t496 - t245)) + t505 + t113 * t255) + t343 * t198 * (t113 * t403 + t68 * (-t15 * (t152 - t4 * (t288 + t153)) + t294) - t303) - t670 * t24 - t209 * (t79 - t167 - t183 * (-t494 - t125 - t137)) - t74;
t64 = t27 * t565;
t74 = t256 * t57;
t79 = t255 * t189;
t98 = t565 * t189;
t109 = -t8 * t241;
t98 = t27 * (-t343 * t198 * (t98 * t403 - t165) + t670 * (t266 * t198 * (t98 * t458 - t131) + t267 * t198 * (t98 * t338 - t310)) - t209 * t90) + t1 * t236 * (t221 * (t14 * t565 * t222 * t57 + t27 * t200 * (t67 * (t1 * (t551 + t59) - t195 * (t15 * t58 * t95 + t552)) - t68 * t1 * (-t14 * t35 + t556)) + t559 * (t558 * t555 - t147)) + t64 * t189 * t207) + t2 * t198 * (t565 * (t79 * t27 + t74) + t545) - t198 * ((-t248 * t62 * t34 + t176 * (t67 * t15 * (t27 * t550 * t59 - t201 * (t573 * t630 / 0.4e1 + t571 / 0.4e1 - 0.1e1 / 0.4e1 - t586 * t19) * t15) + t68 * (t27 * t550 * t34 * t15 * t112 + t52 * (t614 * t237 * (-0.1e1 / 0.8e1 + t613) * t4 + t26 * (-t573 * t19 * t109 * t201 + t621))))) * t222 * t189 * t221 * t640 - t549) - t202 * t501 * t145 * t2 * t106;
t111 = t34 * t176;
t112 = t568 * t189;
t64 = t1 * t236 * (-t221 * (t27 * t181 * (t195 * (-t111 + t34) - t480) + t14 * t568 * t222 * t58) - t112 * t207) + t2 * (t198 * (-t79 * t568 + t553) - t211 * t58 * t568) - t343 * t198 * (-t112 * t403 + t313) + t670 * (t266 * t198 * (-t112 * t458 + t150) + t267 * t198 * (-t112 * t338 + t686)) + t64 * t198;
t79 = 0.1e1 / J__3;
t112 = 0.1e1 / J__2;
t113 = t264 * (J__1 - J__3);
t115 = t263 * (J__1 - J__2);
t125 = t501 * t68;
t18 = t266 * t18 + t267 * (t27 * t198 * (-n3pp * t310 + t296 * t338 + t302 * (t27 * t200 * (t67 * (t408 - (t15 * (t14 * (-t3 * t471 - t395) + t15 * (t3 * t469 + t389)) + t140) * t15) + t68 * (-t388 + (t15 * (-t314 + t385) + t138) * t15)) + t68 * (t429 + t341 * (-t15 * t186 + t412)))) - t30);
t30 = t263 * t264;
t131 = t30 * (J__2 - J__3) / J__1;
t18 = n3p * t24 + n3pp * t98 + n3ppp * t64 + t1 * (-t125 * (-t27 * t203 * t227 * (t191 * t2 + (-n3pp * t90 - t199 * (t2 * t50 + t484)) * t224 * t223) - t25) + t31) + t2 * (t27 * t198 * (t1 * (t67 * (-t501 * t443 + t2 * (-t57 * t247 * (t464 + t522) - t172 + t200 * (-t201 * t479 * t67 + t470)) * t221) + t275) + t168 * t296) + t58 * t211 * t673 + t128 + t211 * (t221 * (-t290 * t222 * t189 + t275 * t501 * t201) + t289 * t57)) + t265 * (-t115 * (-t283 * t3 + t92 * t47) * t79 + t113 * (t283 * t4 + t70 * t47) * t112) + t343 * (t27 * t198 * (n3pp * t165 + t403 * (t189 * (-t289 - t284) + t291) + t302 * (t27 * t200 * (t148 * t68 + t139) + t559 * (t558 * t132 - t164))) - t21) + t670 * t18 - n1 - t198 * n3pppp * t568 - t131 * t213;
t21 = t300 * t467;
t24 = t37 * n3pp;
t25 = t17 * t58 + n3pp;
t31 = t25 * t8;
t47 = -t78 * t27 + t31 * t6;
t50 = t122 * t25;
t64 = t11 * t58 * t50;
t78 = t4 * t47 - t64;
t90 = -t69 * t237 * t7 + t23 * t13;
t98 = t508 * t14 * n3pp;
t122 = t4 * t90 - t98;
t128 = t248 * t67;
t132 = t450 * t12 + t128 * t122 + t176 * t78;
t137 = -t78 * t27;
t139 = t122 * t250;
t140 = t137 * t68 * t67 - t139 * t27;
t147 = t466 + t88;
t148 = -t15 * t147;
t75 = t148 * t4 + t75 * t15;
t150 = t145 * t232;
t152 = t114 * t67;
t153 = t180 * (t1 * (t150 * t166 * t68 - t166 * t27 * t179 + t152 * t75) - t450 * t62 * t67);
t71 = -t88 * t14 + t71;
t88 = t4 * t71 + t277;
t155 = t427 * t27 + t435;
t164 = t463 * t27;
t165 = t155 * t4 + t164;
t166 = t179 * t143;
t167 = t44 * t165;
t168 = t180 * (t1 * (t150 * t143 * t68 + t152 * t88 - t166 * t27) - t167 * t67);
t172 = t27 * t176;
t186 = -t172 + t150;
t198 = t13 * t542 * t627 * t186;
t202 = t132 * t67 - t140 * t68;
t209 = -0.9e1 * t55;
t211 = 0.12e2 * t59 * t15;
t213 = t161 * t176;
t220 = t213 * t52;
t233 = -t282 - t188;
t234 = -t172 + t150;
t235 = t12 * t68;
t236 = t235 * t57 * t67;
t239 = t234 * t34;
t241 = t559 * t16;
t244 = t180 * t15;
t245 = t13 * t241 * (t239 * t14 - t236);
t251 = t213 * n3pp;
t253 = t251 * t54;
t255 = t58 * t253 * t99;
t261 = -t15 * (t244 * t202 - t168) - t245 + t255;
t262 = t68 * t99;
t75 = t68 * t75 + t173;
t173 = t181 * t1;
t246 = -t173 * t27 * t75 + t246 * t13;
t275 = t88 * t68;
t278 = t67 * t143;
t283 = t242 * t165;
t284 = t146 * t12;
t286 = -t27 * t173 * (t278 + t275) - t13 * (t284 - t283);
t288 = t575 * t161 * t27;
t289 = -t288 * t34 + t498;
t290 = t550 * t52 * t68;
t291 = t67 * t24;
t294 = t181 * t15;
t295 = t13 * t15 * t289;
t296 = t15 * (t294 * (t290 * n3pp + t291) - t246);
t206 = t486 * t145 + t206 * t58;
t299 = t176 * n3pp;
t300 = t15 * t299;
t301 = t627 * t14;
t303 = t301 * (t132 * t27 - t300 * t206);
t304 = t14 * t286 + t295 + t296 + t303;
t276 = -t276 * t67 + t254;
t306 = t188 * t14;
t309 = t235 - t306;
t310 = t181 * t16;
t313 = t14 * t498;
t318 = t27 * t310 * t309;
t320 = -t13 * (t313 + t318) + t15 * (t286 + t627 * (-t300 * t99 + t132));
t322 = 0.1e1 / t233;
t323 = t320 * t67 * t99;
t324 = t223 * t322 * t224;
t326 = t324 * t225;
t327 = t326 * t231;
t328 = t322 * t276;
t329 = t256 + t328;
t331 = t322 ^ 2;
t332 = t320 * t223;
t333 = t332 * t331 * t224;
t334 = t333 * t225;
t336 = t334 * t231;
t341 = t328 * t320;
t344 = t326 * t229 * t14;
t350 = t324 * t57 * t320;
t352 = t35 * n3pp;
t353 = 0.10e2;
t295 = -t14 * t286 - t295 - t296 - t303;
t55 = -t58 * (-t334 * t27 * t229 * t262 * t14 + t327 * (t295 * t222 * t14 + t320)) - t327 * (t322 * (t262 * (t304 - t295) - t282 * t320) - t132 * t27 * t559 * t56 + t145 * t294 * (t235 * n3pp * t54 + t291 * t14) + t13 * t14 * t289 - 0.2e1 * t246 * t14 + t15 * (t497 * t176 * t352 + t27 * t173 * (t171 * t67 + t68 * (-t14 * t147 * t4 + t42 * t3)) - t175 * t151 * m0 * t14 * t68 - t286) + t200 * t195 * n3pp * (-t211 + t550 * (t353 * t52 - t97)) - t58 * t304 * t222 * t14) - t327 * t320 * (t331 * t27 * t262 ^ 2 + 0.12e2 * t228 * t55);
t31 = t349 * t27 + t31 * t5;
t56 = -t69 * t205 * t7 - t345 * t1;
t69 = t174 * t123 * t8;
t97 = t176 * t31 + t69;
t147 = t128 * t56;
t171 = t147 * t4 + t4 * t97;
t246 = t346 * t181;
t48 = t184 * t86 + t48 * t5;
t184 = t376 * t27 - t375;
t282 = t174 * t144 * t8;
t286 = t242 * t184;
t289 = t282 - t286;
t296 = t370 * t67;
t303 = t68 * t48;
t334 = t303 + t296;
t349 = -t246 * t27 * t334 - t257 * t289;
t353 = t146 * t6;
t354 = t67 * t7;
t355 = t354 * t5;
t356 = -t13 * t368 * (t288 * t5 * t7 + t353);
t215 = t15 * (-t27 * t246 * (t68 * t15 * (t351 - t149) + t652 * t67 * t15) - t257 * t183 * t151 * m0 * t6 + t215 * t181 * n3pp * (t183 * t6 - t355));
t351 = t237 * t58;
t358 = t299 * t368;
t361 = t301 * (-t171 * t27 + t358 * (t404 * t145 - t351));
t363 = t26 * t67;
t364 = t68 * t8;
t365 = -t363 + t364;
t366 = t310 * t550;
t369 = t27 * t366 * t365;
t371 = t146 * t237;
t373 = t371 * t4;
t376 = -t13 * (-t373 + t369) + t15 * (t627 * (t358 * t405 + t171) + t349);
t378 = t399 + t398;
t355 = t378 * t68 - t355;
t379 = t4 * t355;
t380 = -t320 * t406 * t68;
t381 = t320 * t322;
t383 = t381 * t379;
t384 = t376 - t383;
t332 = t332 * t27 * t322 * t331 * t224 * t225 * t231;
t385 = t332 * t379;
t387 = t385 * t262;
t388 = t466 * t5;
t389 = t4 * (-t19 * (-t481 * t584 + t388) - t481 * t569);
t390 = t639 - t4 * (t11 * t104 - t389);
t391 = t158 * t67;
t392 = t467 * t588;
t393 = -t201 * (t391 * t12 + t390 * t68) - t392 * t13 * t179;
t394 = t201 * (t104 * t5 + n3p / 0.4e1);
t307 = -t307 * t145 * t570 - t340 * t311 * t570 - t394 * t14;
t395 = -t19 * t469;
t397 = t395 * t14;
t398 = t7 * (t45 * t6 + t397) - t345 * t19;
t130 = t145 * t130;
t401 = t201 * t3;
t407 = -t401 * t398 * t4 + t130 * t7 + t307 * t573;
t408 = t481 * t6;
t149 = t408 - t149;
t46 = t149 * t19 * t5 + t46;
t409 = t569 - t19;
t410 = t27 * t409;
t84 = t7 * (t84 * t570 + t46) - t410 * t312;
t411 = t360 + t348;
t91 = t91 + t285;
t285 = t6 * t91;
t412 = -t411 / 0.4e1 + t285 * t7;
t414 = t145 * (t573 * t84 + t601 * t7) - t401 * t412 * t4;
t415 = -t188 + t76;
t416 = t72 * t179;
t417 = t44 * t27;
t419 = -t145 * t416 * t415 + t68 * (t407 * t68 + t414 * t67) + t417 * t580;
t421 = -t467 * t5 + t515;
t400 = t13 * t421 - t400;
t424 = t4 * t400;
t425 = t3 * t91;
t426 = t467 * t13;
t427 = t145 * t550 * (t425 + t424) + t426;
t411 = t19 * t411 * t5 - t101;
t429 = t7 * (-t22 + t238);
t430 = -t429 * t13 + t178 * t149;
t431 = (t26 * t411 + t80 * t647) * t4;
t433 = -t145 * t4 * (t3 * t430 - t431) + t26 * t101 * t27;
t434 = t580 * t14;
t437 = t434 * t67 + t589 * t68;
t438 = t481 * t179;
t439 = t158 * t27;
t441 = t145 * t438 * t437 + t68 * (t427 * t68 + t433 * t67) - t14 * t439 * t34;
t442 = t557 * t175 * t145;
t444 = (t15 * (t183 * t393 + t419) + t441) * t15 + t442 * t415;
t445 = t626 * t67 * t68 + t510;
t446 = t13 * t445;
t108 = t108 * t68;
t447 = t67 * t491;
t448 = t157 * t14 + t165;
t449 = t478 * t180;
t452 = -t27 * t173 * (-t447 + t108) + t449 * t448;
t453 = t627 * t446;
t454 = t453 * t145;
t159 = t27 * t559 * (t125 * t499 + t159) * t15;
t457 = -t12 * t123 + t68 * (-t190 * t67 * t27 - t558 * t514);
t87 = t87 * t14 - t204;
t460 = t28 * t2 - t87 * t4;
t461 = t460 * t68;
t462 = t67 * t530;
t283 = t27 * (t284 + t173 * (-t462 + t461)) - t283;
t284 = t627 * t457;
t463 = t27 * (t313 + t180 * (t12 * t179 - t306 * t176) * t16) + t15 * (t284 + t283);
t410 = -t410 + t583;
t464 = t32 * t58 * t50;
t465 = -t3 * t47 - t464;
t270 = t270 * t14 * n3pp;
t466 = -t3 * t90 - t270;
t468 = t450 * t269;
t469 = t128 * t466 + t176 * t465 - t468;
t314 = t67 * t314;
t151 = t478 * t335 * t151 * m0;
t470 = -t71 * t3 + t217;
t471 = t467 * t9;
t472 = -t155 * t3 + t471;
t473 = t470 * t68;
t474 = t67 * t308;
t475 = t146 * t269;
t477 = t242 * t472;
t479 = -t27 * t173 * (-t474 + t473) + t13 * (t477 + t475);
t480 = t330 * t144;
t294 = t294 * (t52 * t68 * t3 * t5 * n3pp - n3pp * t15 * t273 * t67);
t288 = t13 * t15 * (t288 * t317 - t480);
t482 = t300 * (t432 * t145 + t339 * t58);
t483 = t269 * t68;
t487 = t337 * t14;
t488 = t483 - t487;
t480 = t480 * t14;
t489 = t27 * t310 * t488;
t339 = t432 + t339;
t432 = t300 * t339;
t490 = t13 * (-t480 - t489);
t492 = t15 * (t479 + t627 * (t432 + t469)) - t490;
t493 = -t68 * t683 - t337;
t494 = t320 * t68 * t339;
t495 = t381 * t493;
t496 = t492 + t495;
t499 = t332 * t493;
t500 = t499 * t262;
t33 = t28 * t58 * t50 + t33 * t25;
t503 = t59 * n3pp;
t504 = t68 * (t33 * t68 + t503 * t67) + t182 * t123;
t51 = t51 * t68;
t505 = t67 * t436;
t506 = t44 * t95;
t249 = t249 * t144;
t507 = t27 * t559 * (-t506 + t557 * (-t505 + t51)) - t249 * t34;
t508 = t220 * t486 * n3pp;
t17 = t27 * t15 * (t559 * (t455 * t17 * t68 + t14 * t504) - t173 * (t38 * t68 - t67 * t83));
t38 = t699 * t200;
t83 = t38 * n3pp * t34 * t54;
t512 = t185 * t67 + t254;
t513 = t310 * t512;
t516 = t27 * t13;
t518 = t15 * (t627 * (-t299 * t34 * t52 + t504) + t507) - t516 * t513;
t519 = t254 * t14 + t455;
t520 = t381 * t34;
t522 = t324 * t228 * t221;
t524 = -t381 * t519 + t518;
t525 = t501 * t248;
t527 = t457 * t14;
t528 = t188 * t16 * t68;
t529 = t559 * (-t525 * t539 + t62 * (-t509 - t123)) * t15;
t453 = t15 * (t453 * t27 + t452);
t531 = t102 * t57 - t595;
t532 = t481 * t11 * t57;
t391 = t391 * t27;
t534 = t68 * (t4 * t531 - t532);
t535 = t68 * (t391 + t534);
t275 = -t27 * t559 * (t68 * (t278 + t275) - t44 * t34) + t72 * t200 * t58 * t14;
t75 = (-t181 * t27 * t75 + t523 * t481 * t200) * t15;
t423 = t423 * t145 * t67 * t68;
t536 = t124 * t68 + t188;
t538 = t173 * t536;
t38 = -t27 * (-t537 * t200 * t486 - t14 * t538) + t38 * t62 * t1;
t486 = t200 * t62;
t537 = t15 * (t486 * t1 + t538);
t538 = t68 * (t35 * t67 - t235);
t539 = t559 * t52;
t502 = t539 * (t502 * t176 + t538);
t540 = t176 * t15;
t141 = -t141 * (t37 * t67 + t290) + t301 * (t540 * t206 + t27 * t538);
t206 = t173 * t309;
t290 = t440 * t206;
t542 = t15 * (t627 * t535 + t275) - t290;
t543 = n3p * t463;
t545 = n3ppp * t502;
t547 = -t545 + t543;
t479 = t266 * (-t58 * t344 * t524 - t522 * ((-t14 * t507 + t322 * (-t262 * t518 + t304 * t519) - t17 + t508 + t83) * t222 * t221 - t520) - t332 * t519 * t262) + t267 * (-t58 * t344 * t496 - t327 * (t322 * (-t262 * t492 - t304 * t493 + t494) - t14 * t479 + t15 * (t294 - t27 * t173 * (t68 * (-t148 * t3 + t293) - t314) - t151) - t288 + t301 * (-t27 * t469 - t482)) + t500);
t548 = (-t210 * t262 * t453 * t331 + t210 * (t14 * (-t454 - t452) + t159) * t322) * t224 * t223 * t231 * t221;
t37 = (t189 * (-t444 * t669 + t640 * (t15 * (t68 * (-t195 * t393 * t58 + t625 * t68) - t27 * t419 * t14) - t14 * t441 + t15 * (t15 * (t68 * (t67 * (t145 * (t410 * t573 * t65 + t65 * t571) - t292 * t45 * t10 * t201) + t68 * (-t573 * t15 * (t340 * n3p * t570 + t394) - t340 * t274 - t644 * t201 * t395 * t15)) - t96 * t62 * t145 * t177) + t145 * t176 * (t661 * t183 * t580 + t158 * t37) - t27 * t622 + (-t145 * t4 * (t3 * t15 * (t149 * t19 - t408 * t571) - t32 * t411 * t15) + t101 * t27 * t7 * t15) * t67 * t68))) * t322 - t640 * t262 * t444 * t189 * t331) * t224 * t223 * t229 * t227;
t45 = n3pp * t537;
t65 = t344 * (-t302 * t542 + t45);
t96 = t327 * (t45 * t322 * t262 + t302 * (-t262 * t542 * t322 - t14 * t275 + t75 + t627 * (-t27 * t535 * t14 + t423)));
t149 = t210 * t453;
t66 = t324 * t66 * t229 * (t221 * (-t545 + t543) - t149);
t37 = -t27 * t96 + t57 * t65 - t66 * t58 + t1 * t55 + t2 * (t27 * t336 * t262 * t329 - t58 * t344 * (t341 + t261) - t327 * ((-t261 * t262 - t276 * t304 + t323) * t322 + t27 * t195 * t180 * t202 - t14 * t168 - t15 * (t627 * (-t232 * t24 - t24 * t250) - t153) - t198 + t220 * n3pp * (t550 * (t63 + t209) - t211) - t256 * t27 * t304) - t350 * t227 * t229 * t67 * t14) + t225 * (t324 * t444 * t229 * t640 * t121 * t207 + (t322 * (-n3p * (t27 * t15 * (-t559 * (t528 + t527) + t498) - t14 * t283 + t529) - t38 * n3pp - n3ppp * t141) + t262 * t547 * t331) * t224 * t223 * t231) + t343 * (-t58 * t344 * t384 - t327 * (-t14 * t349 + t322 * (-t262 * t376 + t304 * t379 - t380) + t215 - t356 + t361) - t387) + t670 * t479 + t548 + t37 + t699 * t258 * t444 * t230 * t322 * t640;
t55 = t78 * t68 * t67 + t139;
t63 = t248 * t180;
t65 = t15 * (t497 * t132 - t168) + t245 - t255 + t63 * t55 * t52;
t66 = t256 * t322;
t78 = t276 * t331;
t96 = t344 * t320;
t121 = -t58 * t406 * t253 - t13 * t241 * t550 * (-t364 * t57 * t67 + t26 * t234) - t15 * (-t180 * t4 * (t1 * (t370 * t150 * t68 - t370 * t27 * t179 + t152 * t48) - t44 * t184 * t67) + t497 * t171) + t63 * t4 * (-t31 * t68 * t67 + t533 * t56) * t52;
t139 = t68 * t7;
t171 = t78 + t66;
t177 = t171 * t379 * t320;
t195 = t320 * t4 * (t139 * t5 + t378 * t67);
t202 = t201 * t67;
t211 = 0.14e2;
t211 = t176 * t211 - t150;
t220 = 0.12e2 * t232;
t230 = t180 * t16;
t122 = -t27 * (t327 * (t320 * (t276 ^ 2 * t331 + 0.1e1) + t256 * t261) + t333 * t27 * t227 * t231 * t276 * t67) - t327 * (t322 * (t233 * t320 + t276 * (t261 - t65)) - t57 * t559 * n3pp * t54 * t232 * t99 + t58 * t200 * n3pp * t54 * t99 - t13 * t230 * (t306 * t211 + t235 * (-t114 + t220)) - t15 * (-t180 * (t501 * t211 * t143 + t557 * (t114 - t220) * t88 - t167 * t68) + t244 * (t140 * t67 + t68 * (t202 * t122 * t68 + t137 * t250 + t132))) + t161 * t27 * t55 * t52 - t256 * t27 * t65) - t350 * t226 * t231 * t232;
t59 = t59 * t67;
t137 = t557 * t180;
t140 = t180 * t52;
t143 = t15 * (-t161 * t13 * t448 + t137 * (t108 * t57 * t67 - t186 * t491)) - t27 * t140 * (t250 * t68 * t72 + t446 * t67);
t161 = t172 - t150;
t167 = t13 * t241 * (t161 * t317 * t14 + t483 * t57 * t67);
t172 = t58 * t253 * t339;
t211 = t171 * t493 * t320;
t226 = t320 * (-t67 * t683 + t197);
t233 = t503 * t250;
t234 = -t27 * t180 * (t179 * t436 * t1 - t506 * t67) + t247 * t1 * (t505 * t145 - t51 * t57);
t245 = t67 * t504;
t161 = t13 * t241 * (-t188 * t57 * t68 + t185 * t161);
t53 = t251 * t58 * t34 * t53;
t251 = t320 * (-t359 + t306);
t190 = t57 * t514 * t68 * t67 + t190 * t250 * t27;
t165 = t180 * (t1 * (t150 * t530 * t68 - t530 * t27 * t179 - t152 * t460) + t196 * t165);
t253 = t457 * t67;
t186 = t241 * (t186 * t34 * t14 - t236);
t236 = t158 * t250;
t88 = -t27 * t180 * (t374 * t44 + t166) + t247 * (t68 * (-0.9e1 * t72 * t14 + t57 * t88) + t278 * t145);
t166 = t13 * t137 * (-0.12e2 * t235 * t67 + (t201 * t232 - t546) * t34 * t14);
t241 = t67 * t124;
t137 = t15 * (t137 * (t241 * t57 * t68 + t239) + t213 * t663 * t1);
t239 = -t35 * t250;
t247 = t67 * t538;
t213 = t58 * t213 * t54 * t99;
t255 = t16 * t453;
t171 = t266 * (t27 * t327 * (t171 * t519 * t320 - t256 * t518) - t327 * (t322 * (t276 * t518 + t519 * t65 + t251) + t53 - t15 * (-t234 + t244 * (-t68 * (-t128 * t33 - t233) + t245)) - t161)) + t267 * (-t27 * t327 * (t256 * t492 + t211) - t327 * (t322 * (t276 * t492 - t493 * t65 - t226) - t15 * (-t180 * (t1 * (-t150 * t308 * t68 + t308 * t27 * t179 + t152 * t470) - t44 * t472 * t67) + t497 * t469) - t167 - t172 - t63 * (t465 * t68 * t67 + t250 * t466) * t52));
t59 = (t78 * t640 * t444 * t227 * t189 + t227 * t189 * (t444 * (t260 * t640 - t511) + t640 * (-t145 * t72 * (t415 * t67 + t68 * (t254 + t59)) + (t15 * (t15 * (-t393 * t67 + t68 * (-t201 * (t235 * t158 - t390 * t67) + t114 * t661 * t588)) - t414 * t250 + t68 * (-t27 * t407 * t67 + t72 * (t34 * t145 * t179 + 0.16e2 * t59 * t176 - t220 * t254))) - t433 * t250 + t68 * (-t427 * t27 * t67 + t481 * (-0.16e2 * t67 * t589 * t176 + t699 * t580 * t179 - t220 * t434 * t68))) * t15)) * t322) * t224 * t223 * t229;
t114 = (t322 * (t221 * (t221 * (-n3p * (-t15 * (t244 * (-t190 * t68 + t253) - t165) + t186) - n3pp * t137 - n3ppp * (t140 * (t68 * (-t128 * t12 - t239) + t247) + t213) + t255 * t232) + t210 * t143) + t255) + t78 * t221 * (-t221 * t547 + t149)) * t224 * t223 * t231;
t220 = t1 * t542;
t232 = t444 * t640;
t255 = t501 * t2;
t258 = t324 * t231;
t260 = t258 * t227;
t274 = t260 * t67;
t278 = t274 * (t221 * (t232 * t222 * t189 * t58 - t255 * t542 * t57) + t45 * t145);
t24 = t27 * t327 * (-t220 * t2 + t256 * (-t2 * t1 * (t328 * t542 - t15 * (t497 * t535 - t88) - t166 + t63 * (-t534 * t67 - t236) * t52) - t543 + t545) + t45 * t328) + t1 * (-t27 * t327 * (t256 * t295 + (-t78 - t66) * t320 * t262) - t327 * (t322 * (t262 * t65 + t276 * t295 + t323) + t27 * t497 * (t132 * t14 + t291 * t183) - t14 * t168 - t15 * (t200 * t24 * t15 - t153) - t198 + t627 * ((t209 * t62 * t68 * t67 - 0.12e2 * t76 * t67 * t52 + t558 * t551 * t67) * n3pp + t699 * t55) - t58 * t65 * t222 * t14) - t96 * (t328 * t58 + t74)) + t2 * t122 + t343 * (t27 * t327 * (-t256 * t376 + t177) - t327 * (t322 * (t276 * t376 + t379 * t65 + t195) + t121)) + t670 * t171 + t59 + t114 + t278;
t45 = -t3 * t47 - t464;
t55 = -t3 * t90 - t270;
t59 = t128 * t55 + t176 * t45 - t468;
t63 = -t71 * t3 + t217;
t65 = -t155 * t3 + t471;
t66 = t242 * t65;
t74 = t63 * t68;
t78 = t67 * t208;
t114 = -t27 * t173 * (-t74 + t78) - t13 * (t66 + t475);
t122 = t15 * (-t114 + t627 * (t432 + t59)) - t490;
t132 = t327 * t496;
t90 = -t4 * t90;
t153 = t310 * t386;
t168 = t327 * t384;
t171 = t173 * t3;
t198 = t13 * t3;
t209 = t299 * t292 * t405;
t217 = t13 * (-t27 * t3 * t310 * t365 * t5 + t371 * t3);
t270 = t320 * t3 * t355;
t278 = t385 * t493;
t291 = t327 * t524;
t138 = t138 * t68;
t287 = t44 * t287;
t292 = t249 * t317;
t50 = t627 * (t299 * t317 * t52 - t68 * (t67 * t325 * n3pp - t68 * (t9 * t58 * t50 - t272 * t25)) - t450 * t317);
t272 = t516 * t310 * (t367 * t14 + t197);
t197 = t320 * (t197 * t14 + t367);
t304 = t499 * t519;
t281 = t281 * t57 * t13;
t280 = t280 * t27 * t67;
t306 = t44 * t317;
t218 = t218 * t330 * t200 * t58;
t308 = -t440 * t173 * t488;
t279 = t279 * t14;
t273 = t27 * t173 * (-t13 * t273 * t68 + t563 * t67);
t317 = t627 * t27;
t323 = t317 * t13 * (t125 * t5 * t3 + t664);
t9 = t9 * t2;
t324 = t67 * t682;
t23 = t627 * (t123 * t269 + t68 * (t629 * t23 * t67 + t558 * t675));
t330 = t15 * (t335 * t200 * t1 + t173 * (-t325 * t68 + t337));
t333 = t539 * (t540 * t459 - t68 * (t554 * t67 + t483));
t335 = t440 * t1;
t339 = t640 * t189;
t89 = t132 * t193 - t266 * (-t327 * (t322 * (-t122 * t519 + t493 * t518 + t197) + t15 * (t50 + t27 * t559 * (t557 * (t67 * t89 - t138) + t287) + t292) + t272) + t304) - t267 * (-t332 * t493 ^ 2 - t327 * (t322 * (t320 * (-t374 - t187) + t493 * (t492 + t122)) - t13 * (t153 * t27 - t313) + t15 * (t627 * (t300 * t207 + t128 * (t98 + t90) + t176 * (-t4 * t47 + t64) - t451) + t27 * t173 * (t252 * t67 + t68 * (t4 * t71 + t277)) + t13 * (t146 * t12 + t242 * (-t155 * t4 - t164))))) + t343 * t291;
t66 = (t322 * (n3p * (-t27 * (t230 * (-t487 * t176 + t179 * t269) + t480) + t15 * (-t27 * (t173 * (-t68 * (t3 * t87 + t9) + t324) + t475) - t66 + t23)) + n3ppp * t333) + t493 * t547 * t331) * t224 * t223 * t231 * t225;
t98 = (-t149 * t493 * t331 - t210 * t15 * (t449 * (-t279 + t65) + t273 - t323) * t322) * t224 * t223 * t231 * t221;
t84 = (-t339 * (-t145 * t557 * t174 * (t3 * t415 + t4 * (t325 * t68 - t337)) + (t15 * (t183 * (t201 * (-t68 * (t7 * t104 * t687 - t389 * t629) + t702 * t67 * t701) + t335 * t585 * t179) - t145 * t13 * (t2 * t690 + t179 * t5 * t1 * ((-t698 - t700) * t68 * t14 + t704)) + t68 * (t68 * (t201 * t398 * t687 - t629 * t307 * t4) - t202 * (t84 * t4 * t3 - t412 * t687))) - t201 * t438 * (t690 * t14 * t67 - t68 * t696) + t27 * t435 * t13 * t693 + t68 * (t67 * (t145 * t430 * t687 - t431 * t401) + t68 * (-t145 * t5 * t687 * t91 - t401 * t550 * t400))) * t15 + t338 * t444 * t189) * t322 - t232 * t493 * t189 * t331) * t224 * t223 * t229 * t227;
t164 = t537 * t322;
t187 = t164 * t493;
t74 = t327 * (n3pp * (-t187 + t330) + t302 * (t493 * t542 * t322 + t15 * (t627 * t68 * (t68 * (-t3 * t531 - t281) - t280) - t27 * t559 * (t68 * (-t78 + t74) + t306) - t218) - t308));
t45 = -t27 * t74 + t1 * (-t58 * t344 * (t122 + t495) + t500 - t327 * (t322 * (-t122 * t262 + t295 * t493 + t494) + t114 * t14 + t15 * (t294 + t27 * t173 * (-t68 * (-t148 * t3 + t293) + t314) - t151) - t288 + t301 * (-t59 * t27 - t482))) + t2 * (-t27 * t327 * (t256 * t122 + t211) - t327 * (t322 * (t122 * t276 + t261 * t493 - t226) - t15 * (t244 * (t59 * t67 - t68 * (-t45 * t27 * t68 * t67 - t250 * t27 * t55)) - t180 * (t1 * (-t150 * t208 * t68 + t208 * t27 * t179 + t152 * t63) - t44 * t65 * t67)) - t167 - t172)) + t266 * t168 + t343 * (-t327 * (t322 * (-t122 * t379 + t376 * t493 + t270) + t15 * (t171 * t27 * t334 + t198 * t289 + t627 * (-t147 * t3 - t3 * t97 - t209)) - t217) + t278) - t670 * t89 - t66 - t98 - t84;
t55 = t119 * t14 + t139;
t43 = t15 * (t627 * (-t299 * t32 * t5 * t52 + t550 * (t68 * (t119 * n3pp * t14 + t139 * t25) + t450 * t7)) + t27 * t626 * t559 * (t68 * (t43 * t68 - t67 * t85) - t40) - t249 * t32 * t5) - t516 * t366 * t55;
t59 = t127 * t320;
t63 = t385 * t519;
t65 = t348 * t27 + t360 * t57;
t66 = t345 * t27 * t67;
t74 = t68 * t4;
t78 = -t27 * t559 * t4 * (t68 * (t303 + t296) - t347) - t351 * t163 * t200;
t84 = t626 * t181;
t85 = t440 * t84 * t365;
t55 = t15 * (-t27 * t72 * t181 * t55 + t449 * t4 * (-t375 + t184) - t317 * t257 * (t125 * t6 - t651));
t72 = -t27 * t4 * (t180 * (t179 * (-t22 * t7 - t237 * t86) - t119 * t435 * t176) * t1 - t282) - t286 * t4;
t86 = t627 * t4 * (-t123 * t5 * t8 - t509 * t8 * t5 + t525 * t60);
t89 = t364 * t14;
t97 = t89 - t354;
t84 = t15 * (t399 * t346 * t200 + t84 * t97);
t98 = t539 * (-t550 * t68 * t365 + t368 * t176 * (t404 - t237));
t114 = t13 * t7;
t11 = t145 * t13 * (-t2 * t315 + t346 * t179 * (t6 * (-t188 + t76) + (t354 - t89) * t569 * t4)) + t68 * (t67 * t4 * (t145 * (t7 * (-t19 * t396 + t388) + t702 * t237 * t342) * t4 - t401 * (-t77 / 0.4e1 + t102 / 0.4e1 + t7 * t5 * t91)) + t68 * t4 * (t4 * (t201 * (-t14 * (-t402 + t420) + t647 * t576 * t13) + t602 * t237 * t77) - t401 * (t7 * (-t14 * t160 * t19 + t347) - t702 * t19))) + t183 * (t201 * (-t68 * t4 * (t4 * (t19 * t526 + t610 * (-t571 + t27)) - t11 * t362) - t44 * t4 * t67 * t319) - t426 * t357 * t179);
t31 = t132 * t81 - t266 * (-t327 * (-t322 * (t376 * t519 + t379 * t518 + t59) + t43) - t63) - t267 * (-t327 * (t322 * (t376 * t493 - t379 * t492 + t270) + t15 * (-t27 * t171 * (-t68 * t48 - t93 * t67) + t198 * (-t242 * t184 + t282) + t627 * (t3 * (-t176 * t31 - t69) - t128 * t56 * t3 - t209)) - t217) + t278) + (t132 * t267 + t266 * t291) * t670 * t6;
t48 = (t322 * (n3p * (-t27 * t4 * (t230 * (t363 * t176 - t179 * t8) * t5 + t371) + t15 * (t86 + t72)) - n3ppp * t98) - t379 * t547 * t331) * t224 * t223 * t231 * t225;
t11 = (t232 * t379 * t189 * t331 + t339 * (-t145 * t478 * t346 * (t5 * t550 * t97 - t415 * t6) - (t15 * t11 - t145 * t68 * (t67 * t4 * (t3 * (-t114 * (t60 + t82) + t178 * t305) - t4 * (-t40 * t377 + t26 * (-t102 * t5 - t19 * t382))) + t68 * t4 * (t6 * (t425 + t424) - t550 * (t154 + t604))) - t201 * t438 * (t315 * t14 * t67 + t372 * t68) + t27 * t312 * t4 * t321) * t15 + t403 * t444 * t189) * t322) * t224 * t223 * t229 * t227;
t40 = t164 * t379;
t56 = t327 * (n3pp * (t40 + t84) + t302 * (-t379 * t542 * t322 + t15 * (t78 + t627 * t74 * (t65 * t68 - t66)) - t85));
t11 = -t27 * t56 + t1 * (-t58 * t344 * (t376 - t383) - t387 - t327 * (-t14 * t349 - t322 * (t262 * t376 + t295 * t379 + t380) + t215 - t356 + t361)) + t2 * (t27 * t327 * (-t256 * t376 + t177) - t327 * (t322 * (-t261 * t379 + t276 * t376 + t195) + t121)) + t343 * (-t327 * (t322 * (-t320 * t4 * (t68 * (t61 - t107) + t354 * t6) - 0.2e1 * t379 * t376) - t13 * (-t27 * t310 * t365 * t4 * t6 - t313) + t15 * (-t27 * t246 * (-t142 * t67 - t68 * t71) + t257 * (-t242 * t155 + t353 * t8) + t627 * (t4 * (-t450 * t6 * t8 - t176 * t47) + t90 * t128 + t358 * (t399 * t8 + t205)))) - t332 * t379 ^ 2) - t670 * t31 - t48 - (t149 * t379 * t331 - t210 * t55 * t322) * t224 * t223 * t231 * t221 - t11;
t31 = t262 * t322;
t47 = t31 * t27;
t48 = t336 * t519;
t51 = t15 * (-t27 * t559 * (t68 * (t505 - t51) + t44 * t12) + t200 * t428 * t57 * t15) - t440 * t173 * t512;
t29 = t15 * (-t559 * (t95 * t13 + t557 * (-t476 * t68 + t49)) + t29 * t559);
t49 = t27 * (t15 * (t182 * t144 + t559 * (t557 * (t126 * t67 - t510 * t68) + t544)) + t513) + t539 * (-t58 * t117 * t176 - t541);
t56 = t173 * (t35 * t68 + t455);
t61 = t539 * (t68 * (t67 * t124 - t254) + t111 * t52);
t69 = t571 - t162;
t28 = -t145 * t416 * t519 + t68 * (t67 * (t145 * (t573 * (t298 * t7 - t316 * t570 - t46 * t8) - t601 * t8 - t91 * t7) - t401 * (t6 * (t312 * t69 - t41 * t8) - t170 * t174 / 0.4e1) * t4) + t68 * (-t130 * t8 + t573 * (-t145 * t570 * (-t42 * t8 + t44 * t69) - t238 * t174 * t201) - t7 * t145 * t133 - t401 * (t6 * (-t120 * t7 - t311 * t638) - t397 * t8) * t4)) + t417 * t219 + t183 * (-t201 * (-t68 * (t1 * (t257 * t6 * t3 * t571 + t576 * t13) - t4 * (-t4 * t7 * (t101 * t570 + t103 * t6) + t28 * t104)) + t188 * t158) + t335 * t240 * t179);
t10 = t266 * (-t327 * (t322 * (t320 * (t185 * t68 - t374) - 0.2e1 * t519 * t518) + t15 * (t627 * (t299 * t12 * t52 + t68 * (t352 * t67 + t68 * (-t10 * t25 + t64)) - t451) + t27 * t559 * (-t44 * t418 + t557 * (t413 * t68 + t422 * t67)) + t249 * t12) - t516 * t153) - t332 * t519 ^ 2) + t267 * (-t327 * (t322 * (-t492 * t519 + t493 * t518 + t197) + t15 * (t50 + t27 * t559 * (t557 * (t67 * t73 - t138) + t287) + t292) + t272) + t304);
t22 = (-t232 * t519 * t189 * t331 + t339 * ((t15 * t28 + t145 * t176 * (t550 * (-t285 * t4 + t3 * t601) + t501 * t478 * t219 * t14) + t68 * (t67 * (-t145 * t4 * (t3 * (-t129 * t5 + t80 * (t212 - t22)) - t4 * (t14 * (t243 * t7 - t411 * t8) + t114 * t647)) - t27 * t297 * t14) - t438 * t240 * t201) + t439 * t185) * t15 + t442 * t519 + t458 * t444 * t189) * t322) * t224 * t223 * t229 * t227;
t25 = t164 * t222 * t519;
t28 = t4 * t531 - t532;
t41 = t68 * (t28 * t68 + t391);
t42 = -t15 * (t627 * t41 + t275) + t290;
t44 = t42 * t322;
t46 = t175 * t14;
t50 = t15 * (t559 * (-t13 * t34 + t68 * (-t447 + t108)) - t216 * t176 * t13);
t64 = t145 * t206 + t15 * (t27 * t559 * (-t2 * t34 + t68 * (-t462 + t461)) - t560 * t200 * t58 - t627 * t68 * (t157 * t27 * t67 + t68 * t57 * t95));
t69 = t15 * (t181 * t536 + t486);
t32 = t327 * (n3p * t64 + t295 - t339 * ((t15 * (-t145 * t175 * t179 * t415 + t68 * (-t105 * t201 * t68 + t67 * t194 * t27) - t183 * t68 * (t201 * (t4 * (t4 * (-t13 * t569 + t19 * (t583 * t13 + G - n3)) - t114 * t268) + t638 * t13) + t516 * t588 * t176)) + t145 * t13 * t179 * t437 + t68 * (t67 * (t145 * t4 * (t32 * t110 * t14 + t192 * t3) + t516 * t576 * t14) + t68 * t13 * (-t594 * t573 + t27))) * t15 + t175 * t145 * t415 * t68) * t222 * t221 - t381 * t262);
t71 = t322 * t231;
t73 = -t453;
t76 = t73 * t322;
t77 = t15 * (-t317 * t445 - t27 * t173 * (-t456 + t241) - t559 * t448);
t80 = t14 * t13;
t81 = t260 * t255 * t145;
t82 = t132 * t6 + t291;
t89 = -t313 * t27 - t15 * (t284 + t283) - t318;
t90 = t89 * t322;
t8 = t259 * (t144 * t444 + t640 * ((t15 * (t145 * t179 * t415 * t626 + t68 * (t67 * (t145 * (t573 * (-t116 * t410 - t94 * t6) - t116 * t571) - t401 * t8 * (t1 * t5 / 0.4e1 - t515) * t4) + t68 * (t4 * (t4 * t8 * (t156 * t145 + t169 * t201) - t401 * (t7 * (-t204 + t692) + t60 * t19)) + t39 * t145 * t7)) - t27 * t580 * t2 + t183 * (-t201 * (t68 * (t4 * (t4 * (-t1 * t19 * t584 + t1 * t569) + t268 * t170) - t638 * t1) - t157 * t67 * t12) + t392 * t179)) - t145 * t1 * t179 * t437 + t68 * (t67 * (-t145 * t4 * (t3 * (-t237 * t19 * t1 + t429) + t4 * (-t26 * t118 + t647 * t8)) - t26 * t100 * t27) + t68 * (-t145 * t550 * (t4 * t421 + t517) - t467)) + t521 * t27 * t14) * t15 - t626 * t145 * t415 * t68)) * t322;
t7 = -t27 * (t343 * t327 * (t40 + t84) + t670 * (t266 * t326 * t228 * (t25 + t56) - t267 * t327 * (t187 - t330))) + t1 * t327 * (t537 * (t222 * t14 * t57 - t47) - t38) + t2 * t327 * (t537 * (t256 * t145 + t328 * t27) - t137) - t327 * (t463 - t339 * (t15 * (t68 * (t67 * (t7 * (t573 * t109 * t145 - t621) - t401 * t6 * (t638 - 0.1e1 / 0.4e1) * t4) + t68 * (-t573 * t14 * (-t19 * t201 * t409 + t340 * t570) - t340 * t14 + t699 * t586)) + t540 * t592 * t145) - t27 * t68 * (-t35 * t550 * t67 + t592 * t68)) * t15 * t222 * t221) + t81 * t69;
t12 = t502 * t322;
t12 = t1 * (-t327 * (t31 * t502 + t141) + t344 * t58 * t502) + t2 * (t327 * (-t140 * (t68 * (-t455 * t248 - t239) + t247) - t213 + t328 * t502) + t274 * t27 * t502) - t343 * t327 * (t12 * t379 - t98) - t670 * (t266 * t327 * (t12 * t519 - t61) - t267 * t327 * (t12 * t493 - t333)) + t327 * t27 * t537;
t19 = -t115 * (-t168 * t3 + t92 * t82) * t79 + t113 * (t168 * t4 + t70 * t82) * t112;
t16 = -t37 + t125 * (-t27 * t71 * t221 * (-t444 * t221 * t2 * t189 + (-t13 * t16 * t627 * t99 + t225 * (t220 + t320)) * t224 * t223 * t67) - t1 * t327 * (t58 * t453 * t222 * t14 + t14 * (-t454 - t452) + t159 + t31 * t73) + t2 * t327 * (-t256 * t453 * t27 + t328 * t73 - t143) - t343 * t327 * (t76 * t379 + t55) - t670 * (t266 * t327 * (t27 * t29 + t76 * t519) - t267 * t327 * (-t15 * (-t323 - t449 * (t279 - t472) + t273) + t76 * t493)) - t327 * (n3p * t77 + t261 + t341 - t339 * (-t235 * t214 * t201 * t54 + t15 * (t15 * (t516 * t580 + t68 * (t67 * (t145 * (t410 * t573 * t80 + t80 * t571) - t80 * t586 * t201) + t68 * (-t13 * t145 * t577 - t401 * t134 * t4))) + t145 * t68 * (t135 * t68 + t136 * t67) - t46 * t27 * t34)) * t222 * t221) + t81 * t50);
t10 = -t266 * (-t27 * t522 * (t255 * t225 * t222 * (-t519 * t542 * t322 + t51) + n3pp * t221 * (t25 + t56) - t210 * t29 * t222) + t1 * (-t522 * (t221 * (t222 * (-t14 * t507 + t322 * (-t262 * t518 - t295 * t519) - t17 + t508 + t83) + t14 * t58 * t518 * t228) - t520) + t48 * (t58 * t222 * t14 - t47)) + t2 * (t27 * t329 * t48 - t327 * (t322 * (-t261 * t519 + t276 * t518 + t251) - t15 * (t244 * (-t68 * (-t27 * t33 * t68 * t67 - t233) + t245) - t234) - t161 + t53 + t256 * t27 * t518)) + t343 * (-t327 * (t322 * (-t376 * t519 - t379 * t518 - t59) + t43) - t63) + t670 * t10 - t271 * t453 * t223 * t331 * t224 * t231 * t519 + (t322 * (-n3p * t49 + n3ppp * t61) + t519 * t547 * t331) * t224 * t223 * t231 * t225 + t22) - t267 * t45;
t17 = t21 * (t27 * t71 * (t444 * t1 * t189 - t196 * (t1 * (t57 * t200 * t15 * (t15 * t476 + t46) - t440 * t181 * t309) + t542) * t224 * t223 * t227 + t199 * (-t1 * t50 + t453) * t224 * t223 + n3pp * t69 * t223 * t224 * t225) - t1 * t327 * (-t58 * t42 * t222 * t14 - t14 * t275 + t75 + t627 * (-t27 * t41 * t14 + t423) + t31 * t42) - t2 * t327 * (-t328 * t42 + t15 * (t88 + t244 * (-t41 * t67 + t68 * (-t28 * t27 * t68 * t67 - t236 * t27))) - t166 - t256 * t27 * t42) - t343 * t327 * (t15 * (t78 + t627 * t74 * (t65 * t68 - t66)) - t85 + t44 * t379) - t670 * (t266 * t327 * (t44 * t519 + t51) + t267 * t327 * (t15 * (-t27 * t559 * (t68 * (-t474 + t473) + t306) - t218 + t627 * t68 * (t68 * (-t3 * t531 - t281) - t280)) - t308 - t44 * t493)) - t32 - t96 * t58);
t2 = n3p * (t27 * t327 * (n3p * t144 * t99 - t302 * t64) - t1 * t327 * (-t58 * t89 * t222 * t14 + t146 * t62 * t27 - t14 * t283 - t27 * t627 * (t528 + t527) + t529 + t31 * t89) - t2 * t327 * (-t328 * t89 - t15 * (t244 * (-t190 * t68 + t253) - t165) + t186 - t256 * t27 * t89) - t343 * t327 * (t90 * t379 - t373 * t27 + t15 * (t86 + t72) + t369) - t670 * (t266 * t327 * (t90 * t519 + t49) - t267 * t327 * (t90 * t493 + t480 * t27 - t15 * (-t27 * (t173 * (-t68 * (t3 * t87 + t9) + t324) + t475) - t477 + t23) + t489)) + t258 * t271 * t77 + t8) + n3pp * t7 + n3ppp * t12 - t1 * t16 + t11 * t343 + t2 * t24 - t265 * t19 - t670 * t10 - n2 + t327 * n3pppp * t502 + t131 * t132 + t17;
t7 = 0.1e1 / t144;
t8 = J__1 - J__2 - J__3;
Nonb = [t21 * (-t27 * t203 * t221 * (t191 * t1 - t196 * (t1 * (t27 * t200 * (t67 * (-t27 * (t14 * (t476 * t52 - t476) - t485) - t523 * t13) + t68 * (t182 * t27 - t36)) + t181 * t145 * (t36 - t182)) + t484) * t224 * t223 * t227 + n3pp * t106 * t223 * t224 * t225 + t199 * t443 * t223 * t224) - t20) + t18 t2 (-t183 * t180 * t612 + G * t144) * t7 - n3 -n4 + (-t5 * (J__2 * t265 * t263 * t8 * t4 - t3 * J__3 * t265 * t264 * t8) - t27 * t6 * J__2 * J__3 * (t30 - t3 * (t263 ^ 2 - t264 ^ 2) * t4 - t30 * t27 * t573)) * t670 ^ 2 * t112 * t79];

F = [x(9); x(10); x(11); x(12); x(13); (sin(x(6)) * sin(x(7)) * x(15) + cos(x(6)) * sin(x(7)) * x(16) + x(14) * cos(x(7))) / cos(x(7)); cos(x(6)) * x(15) - sin(x(6)) * x(16); (sin(x(6)) * x(15) + cos(x(6)) * x(16)) / cos(x(7)); -L * sin(x(5)) * m * (cos(x(5)) ^ 2 * x(12) ^ 2 + x(13) ^ 2) / (m + mp); sin(x(4)) * cos(x(5)) * m * (cos(x(5)) ^ 2 * x(12) ^ 2 + x(13) ^ 2) * L / (m + mp); 0.1e1 / (m + mp) * (-L * cos(x(5)) ^ 3 * cos(x(4)) * m * x(12) ^ 2 - L * cos(x(4)) * cos(x(5)) * m * x(13) ^ 2 + G * m + G * mp); 0.2e1 * x(13) * x(12) * sin(x(5)) / cos(x(5)); -x(12) ^ 2 * cos(x(5)) * sin(x(5)); -x(15) * x(16) * (J__2 - J__3) / J__1; x(14) * x(16) * (J__1 - J__3) / J__2; -x(14) * x(15) * (J__1 - J__2) / J__3;];

G0 = [0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; (sin(x(4)) * sin(x(5)) * cos(x(5)) * cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(4)) * sin(x(5)) * cos(x(5)) * cos(x(8)) * sin(x(6)) - sin(x(5)) * cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) + cos(x(5)) ^ 2 * cos(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(5)) ^ 2 * sin(x(6)) * sin(x(8)) - cos(x(6)) * sin(x(7)) * cos(x(8)) - sin(x(6)) * sin(x(8))) / (m + mp) 0 0 0; 0.1e1 / (m + mp) * cos(x(5)) * (cos(x(5)) * cos(x(4)) ^ 2 * cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(4)) * sin(x(5)) * cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(4)) * cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - cos(x(5)) * cos(x(4)) ^ 2 * cos(x(8)) * sin(x(6)) + sin(x(4)) * sin(x(5)) * sin(x(8)) * sin(x(6)) - cos(x(5)) * cos(x(6)) * sin(x(7)) * sin(x(8)) + cos(x(5)) * cos(x(8)) * sin(x(6))) 0 0 0; 0.1e1 / (m + mp) * cos(x(5)) * cos(x(4)) * (sin(x(4)) * cos(x(5)) * cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(4)) * cos(x(5)) * cos(x(8)) * sin(x(6)) - sin(x(5)) * cos(x(6)) * sin(x(7)) * cos(x(8)) - cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(5)) * sin(x(8)) * sin(x(6))) 0 0 0; (-cos(x(4)) * cos(x(6)) * sin(x(7)) * sin(x(8)) + cos(x(4)) * cos(x(8)) * sin(x(6)) - sin(x(4)) * cos(x(6)) * cos(x(7))) / L / cos(x(5)) / m 0 0 0; (((cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(4)) - cos(x(7)) * cos(x(4)) * cos(x(6))) * sin(x(5)) + cos(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / m / L 0 0 0; 0 0.1e1 / J__1 0 0; 0 0 0.1e1 / J__2 0; 0 0 0 0.1e1 / J__3;];

xdot=F + G0*(NonA\Nonb');
end
