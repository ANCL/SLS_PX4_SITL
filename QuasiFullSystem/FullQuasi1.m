function xdot=FullQuasi1(t,x,Kv2,Kv6,M)
m=1.6;mp=0.16;L=1;G=10;J__1=0.03;J__2=0.03;J__3=0.03;
m0=M(1);mp0=M(2);L0=M(3);
Ts1 = [x(3) x(11)];

yr = [0.30e1 * sin(pi * t / 0.4e1) + 0.1e1 0.7500000000e0 * pi * cos(pi * t / 0.4e1) -0.1875000000e0 * pi ^ 2 * sin(pi * t / 0.4e1) -0.4687500000e-1 * pi ^ 3 * cos(pi * t / 0.4e1) 0.1171875000e-1 * pi ^ 4 * sin(pi * t / 0.4e1) 0.2929687500e-2 * pi ^ 5 * cos(pi * t / 0.4e1) 0.150e1 * sin(pi * t / 0.2e1) 0.7500000000e0 * pi * cos(pi * t / 0.2e1) -0.3750000000e0 * pi ^ 2 * sin(pi * t / 0.2e1) -0.1875000000e0 * pi ^ 3 * cos(pi * t / 0.2e1) 0.9375000000e-1 * pi ^ 4 * sin(pi * t / 0.2e1) 0.4687500000e-1 * pi ^ 5 * cos(pi * t / 0.2e1) -0.4e1 + 0.2e1 * sin(pi * t / 0.4e1) pi * cos(pi * t / 0.4e1) / 0.2e1 -pi ^ 2 * sin(pi * t / 0.4e1) / 0.8e1 -pi ^ 3 * cos(pi * t / 0.4e1) / 0.32e2 pi ^ 4 * sin(pi * t / 0.4e1) / 0.128e3 pi ^ 5 * cos(pi * t / 0.4e1) / 0.512e3 0.2e-1 * t 0.2e-1];

yr6 = [-0.7324218750e-3 * pi ^ 6 * sin(pi * t / 0.4e1) -0.2343750000e-1 * pi ^ 6 * sin(pi * t / 0.2e1) -pi ^ 6 * sin(pi * t / 0.4e1) / 0.2048e4];

n3 = yr(15) - Kv2(1,2)*(Ts1(2)-yr(14)) - Kv2(1,1)*(Ts1(1)-yr(13));
n3p = yr(16)- Kv2(1,2)*(n3-yr(15)) - Kv2(1,1)*(Ts1(2)-yr(14));
n3pp = yr(17)- Kv2(1,2)*(n3p-yr(16)) - Kv2(1,1)*(n3-yr(15));
n3ppp = yr(18)- Kv2(1,2)*(n3pp-yr(17)) - Kv2(1,1)*(n3p-yr(16));
n3pppp = yr6(3)- Kv2(1,2)*(n3ppp-yr(18)) - Kv2(1,1)*(n3pp-yr(17));
Ts = [x(1) x(9) -(G - n3) * sin(x(5)) / cos(x(5)) / cos(x(4)) ((n3p * cos(x(5)) * sin(x(5)) - x(13) * (G - n3)) * cos(x(4)) - sin(x(4)) * x(12) * cos(x(5)) * sin(x(5)) * (G - n3)) / cos(x(5)) ^ 2 / cos(x(4)) ^ 2 (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) ^ 2 - x(12) * ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + 0.3e1 * (-0.4e1 / 0.3e1 * x(13) * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1)) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 / 0.3e1 * x(12) * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) - (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * (G - n3)) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) - (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) x(12) * ((0.2e1 * m0 * (-0.3e1 * x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 2 * sin(x(4)) + x(13) * x(12) * cos(x(7)) * cos(x(4)) ^ 3 * (G - n3) * cos(x(6)) - 0.2e1 * ((-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) * sin(x(4)) - x(12) * (cos(x(4)) * n3p * cos(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(8)) * cos(x(4)) * n3p * sin(x(6))) * cos(x(4)) + x(12) * ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * (G - n3) * cos(x(8)) + sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * sin(x(4))) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (-0.3e1 * ((sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 2 * sin(x(4)) - cos(x(4)) ^ 3 * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) + 0.2e1 * sin(x(4)) ^ 2 * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) + x(12) * (x(13) * cos(x(4)) * (G - n3) * cos(x(8)) * sin(x(7)) * cos(x(6)) + x(13) * sin(x(8)) * cos(x(4)) * (G - n3) * sin(x(6))) * cos(x(4)) - x(12) * (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * sin(x(4)) + x(12) ^ 2 * cos(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (0.12e2 * x(13) * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 2 * sin(x(4)) + 0.3e1 * ((-0.2e1 / 0.3e1 * x(13) * sin(x(8)) * cos(x(4)) * n3p * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * cos(x(4)) * (G - n3)) * cos(x(6)) + 0.2e1 / 0.3e1 * x(13) * cos(x(8)) * cos(x(4)) * n3p * sin(x(6))) * cos(x(4)) ^ 2 - 0.6e1 * (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1)) * sin(x(6))) * cos(x(4)) * sin(x(4)) + 0.4e1 * x(12) * (cos(x(4)) * n3p * cos(x(8)) * sin(x(7)) * cos(x(6)) / 0.2e1 + sin(x(8)) * cos(x(4)) * n3p * sin(x(6)) / 0.2e1) * cos(x(4)) - 0.4e1 * x(12) * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * sin(x(4))) * m0 * L0 * cos(x(5)) ^ 2 + sin(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * (G - n3)) * cos(x(5)) - cos(x(4)) * (-0.4e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) * sin(x(4)) - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * (x(13) * sin(x(8)) * cos(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - x(13) * cos(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * cos(x(4)) + 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * sin(x(4)) + (0.4e1 * cos(x(8)) * x(13) * x(12) * L0 * sin(x(5)) * cos(x(4)) * m0 * sin(x(7)) * cos(x(6)) + 0.4e1 * sin(x(8)) * x(13) * x(12) * L0 * sin(x(5)) * cos(x(4)) * m0 * sin(x(6))) * (G - n3)) * cos(x(5)) + 0.4e1 * (G - n3) * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) * sin(x(4))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + 0.3e1 * (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) ^ 2 - x(12) * ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * (G - n3) * cos(x(8)) + sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1)) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.2e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * (G - n3)) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / cos(x(4)) ^ 4 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * sin(x(4)) - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) ^ 2 - x(12) * ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * (G - n3) * cos(x(8)) + sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1)) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.2e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * (G - n3)) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 * (-sin(x(4)) * cos(x(6)) * cos(x(7)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * cos(x(4)))) + x(13) * ((-0.8e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) ^ 2 - x(12) * ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * (G - n3) * cos(x(8)) + sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 3 * sin(x(5)) + 0.2e1 * m0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 4 * L0 - 0.6e1 * m0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) ^ 2 * L0 * cos(x(5)) ^ 2 - 0.2e1 * (-0.4e1 * x(13) * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1)) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.2e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) * sin(x(5)) - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * cos(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * cos(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + ((0.4e1 * cos(x(8)) * x(13) * x(12) * L0 * cos(x(5)) * sin(x(4)) * m0 * sin(x(7)) + x(13) ^ 2 * L0 * cos(x(5)) * cos(x(7)) * m0) * cos(x(6)) + 0.4e1 * sin(x(8)) * x(13) * x(12) * L0 * cos(x(5)) * sin(x(4)) * m0 * sin(x(6))) * (G - n3)) * cos(x(5)) + cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * (G - n3)) * sin(x(5)) + (G - n3) ^ 2 * cos(x(6)) * cos(x(5)) * cos(x(7)) * (m0 + mp0)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + 0.3e1 * (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) ^ 2 - x(12) * ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * (G - n3) * cos(x(8)) + sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1)) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.2e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * (G - n3)) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 4 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * sin(x(5)) - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) ^ 2 - x(12) * ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * (G - n3) * cos(x(8)) + sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1)) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.2e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * (G - n3)) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 * (-(cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * sin(x(5)) + cos(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))))) + (sin(x(6)) * sin(x(7)) * x(15) + cos(x(6)) * sin(x(7)) * x(16) + x(14) * cos(x(7))) / cos(x(7)) * ((0.2e1 * m0 * (x(13) * x(12) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (-(-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * sin(x(6)) - sin(x(8)) * cos(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) ^ 2 - x(12) * (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * sin(x(6)) + (-x(13) * (G - n3) * cos(x(8)) + sin(x(8)) * sin(x(4)) * n3p) * cos(x(6))) * cos(x(4)) + x(12) ^ 2 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * ((-(sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * sin(x(6)) - cos(x(8)) * cos(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * (-(sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * sin(x(6)) - cos(x(8)) * cos(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * (-((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * sin(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * cos(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * (-(sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * sin(x(6)) - cos(x(8)) * cos(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * (-((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * sin(x(6)) + (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1)) * cos(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * (-(sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * sin(x(6)) - cos(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.2e1 * x(12) ^ 2 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * x(13) ^ 2 * sin(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * (-(n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * sin(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * cos(x(6))) * cos(x(4)) + (-(cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * sin(x(6)) + sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * cos(x(6))) * (G - n3)) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 - sin(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) ^ 2 - x(12) * ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * (G - n3) * cos(x(8)) + sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1)) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.2e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * (G - n3)) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 * ((-cos(x(7)) * cos(x(4)) * sin(x(6)) + (sin(x(6)) * sin(x(7)) * sin(x(8)) + cos(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))))) + (cos(x(6)) * x(15) - sin(x(6)) * x(16)) * ((0.2e1 * m0 * (x(13) * x(12) * cos(x(6)) * cos(x(7)) * sin(x(8)) * (G - n3) * cos(x(4)) ^ 3 + (-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * cos(x(7)) / 0.2e1 - x(13) * x(12) * sin(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) * cos(x(4)) ^ 2 - x(12) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * cos(x(7)) * cos(x(6)) * cos(x(4)) + x(12) ^ 2 * cos(x(6)) * cos(x(7)) * cos(x(8)) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * ((sin(x(8)) * x(12) * cos(x(7)) * n3p - sin(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) * cos(x(4)) ^ 3 - sin(x(4)) * (sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7)) + x(12) * sin(x(7)) * n3p) * cos(x(6)) * cos(x(4)) ^ 2 + x(12) * ((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * cos(x(7)) + 0.3e1 / 0.2e1 * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * cos(x(6)) * cos(x(7)) * sin(x(8)) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * (sin(x(8)) * x(12) * (G - n3) * cos(x(7)) + sin(x(7)) * n3p / 0.2e1) * cos(x(6)) * cos(x(4)) ^ 3 + 0.3e1 * ((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * cos(x(7)) + 0.4e1 / 0.3e1 * x(13) * x(12) * sin(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * cos(x(7)) * cos(x(6)) * cos(x(4)) - 0.2e1 * x(12) ^ 2 * cos(x(6)) * cos(x(7)) * cos(x(8)) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * sin(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * cos(x(7)) * cos(x(6)) * cos(x(4)) + (cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * cos(x(7)) - x(13) ^ 2 * L0 * sin(x(5)) * sin(x(7)) * m0) * cos(x(6)) * (G - n3)) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * cos(x(6)) * cos(x(7)) * cos(x(8)) * cos(x(4)) ^ 2 - cos(x(6)) * sin(x(5)) * sin(x(7)) * (m0 + mp0) * (G - n3))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) ^ 2 - x(12) * ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * (G - n3) * cos(x(8)) + sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1)) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.2e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * (G - n3)) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 * ((-sin(x(7)) * cos(x(4)) * cos(x(6)) - cos(x(6)) * cos(x(7)) * sin(x(8)) * sin(x(4))) * cos(x(5)) + sin(x(5)) * cos(x(6)) * cos(x(7)) * cos(x(8)))) + (sin(x(6)) * x(15) + cos(x(6)) * x(16)) / cos(x(7)) * ((0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) * cos(x(6)) / 0.2e1 - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) ^ 2 - x(12) * ((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * ((cos(x(8)) * x(12) * sin(x(7)) * n3p * cos(x(6)) + sin(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * (cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) * cos(x(6)) + sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * ((-x(13) * sin(x(8)) * sin(x(4)) * (G - n3) - n3p * cos(x(8))) * sin(x(7)) * cos(x(6)) + (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * (cos(x(8)) * x(12) * (G - n3) * sin(x(7)) * cos(x(6)) + sin(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * ((-sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) - 0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p) * sin(x(7)) * cos(x(6)) + (((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * ((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (-x(13) * sin(x(8)) * (G - n3) - sin(x(4)) * n3p * cos(x(8)) / 0.2e1)) * cos(x(4)) - 0.2e1 * x(12) ^ 2 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) + (-sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) * cos(x(6)) + cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * (G - n3)) * cos(x(5)) - 0.2e1 * (G - n3) * x(13) ^ 2 * L0 * m0 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 2) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) / 0.2e1) * cos(x(4)) ^ 2 - x(12) * ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * (G - n3) * cos(x(8)) + sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + cos(x(7)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1)) * cos(x(4)) ^ 2 + x(12) * (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1)) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.2e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * (G - n3)) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 * ((-cos(x(6)) * sin(x(7)) * cos(x(8)) - sin(x(6)) * sin(x(8))) * sin(x(4)) * cos(x(5)) + sin(x(5)) * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))))) + 0.2e1 * x(13) * x(12) * sin(x(5)) / cos(x(5)) ^ 4 * (0.2e1 * m0 * (x(13) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * x(12) * (G - n3) * sin(x(7)) + x(13) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 2 - ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * (G - n3) * cos(x(8)) + sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(4)) + 0.2e1 * x(12) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (((sin(x(8)) * sin(x(7)) * n3p + 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((0.2e1 * sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p) * cos(x(6)) - 0.2e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(4)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3) * cos(x(6)) * cos(x(4)) + 0.2e1 * x(12) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * (sin(x(8)) * (G - n3) * sin(x(7)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * ((0.2e1 * (0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) * cos(x(8)) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + 0.2e1 * sin(x(8)) * (0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.4e1 * x(12) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (0.4e1 * cos(x(8)) * x(13) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(7)) * cos(x(6)) + 0.4e1 * sin(x(8)) * x(13) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(6))) * (G - n3) * cos(x(5))) / cos(x(4)) ^ 3 / m0 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) - x(12) ^ 2 / cos(x(5)) ^ 2 * sin(x(5)) * (0.2e1 * m0 * (x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + x(12) * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(6)) * cos(x(4)) ^ 2 - x(12) * (sin(x(8)) * (G - n3) * sin(x(7)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * (G - n3)) * cos(x(4))) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * x(12) * (sin(x(4)) * (G - n3) * cos(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(8)) * sin(x(4)) * (G - n3) * sin(x(6))) * cos(x(4)) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + 0.3e1 * (((0.2e1 * x(13) * (G - n3) * cos(x(8)) - 0.2e1 / 0.3e1 * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (0.2e1 / 0.3e1 * sin(x(4)) * n3p * cos(x(8)) + 0.2e1 * x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * (sin(x(8)) * (G - n3) * sin(x(7)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * (G - n3)) * cos(x(4))) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (0.4e1 * x(13) * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * (sin(x(8)) * sin(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - sin(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * cos(x(4)) + ((0.4e1 * cos(x(8)) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(7)) + 0.2e1 * x(13) * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + 0.4e1 * sin(x(8)) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(6))) * (G - n3)) * cos(x(5)) - 0.4e1 * (G - n3) * x(13) * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2) / cos(x(4)) ^ 3 / m0 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + n3p * (0.2e1 * m0 * (-x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 3 + ((cos(x(8)) * x(12) ^ 2 * sin(x(7)) / 0.2e1 - x(13) * x(12) * cos(x(7)) * sin(x(4))) * cos(x(6)) + sin(x(8)) * sin(x(6)) * x(12) ^ 2 / 0.2e1) * cos(x(4)) ^ 2 - x(12) * (-x(13) * sin(x(8)) * sin(x(7)) * cos(x(6)) + x(13) * cos(x(8)) * sin(x(6))) * cos(x(4)) - x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (-cos(x(7)) * x(12) ^ 2 * cos(x(6)) * cos(x(4)) ^ 3 - sin(x(4)) * (-sin(x(8)) * x(12) ^ 2 * sin(x(7)) * cos(x(6)) + cos(x(8)) * sin(x(6)) * x(12) ^ 2) * cos(x(4)) ^ 2 + x(12) * ((-x(13) * cos(x(8)) * sin(x(4)) * sin(x(7)) + 0.3e1 / 0.2e1 * x(12) * cos(x(7))) * cos(x(6)) - x(13) * sin(x(8)) * sin(x(4)) * sin(x(6))) * cos(x(4)) - x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (-0.4e1 * x(13) * (-sin(x(8)) * x(12) * sin(x(7)) * cos(x(6)) + sin(x(6)) * cos(x(8)) * x(12)) * cos(x(4)) ^ 3 + 0.3e1 * (((-0.2e1 / 0.3e1 * x(12) ^ 2 - x(13) ^ 2) * cos(x(8)) * sin(x(7)) + 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4))) * cos(x(6)) + sin(x(8)) * (-0.2e1 / 0.3e1 * x(12) ^ 2 - x(13) ^ 2) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * (-x(13) * sin(x(8)) * sin(x(7)) * cos(x(6)) + x(13) * cos(x(8)) * sin(x(6))) * cos(x(4)) + 0.2e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * m0 * L0 * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * cos(x(4)) ^ 2 - 0.2e1 * m0 * x(13) * sin(x(5)) * L0 * (-x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + x(13) * cos(x(8)) * sin(x(4)) * sin(x(6))) * cos(x(4)) + (cos(x(8)) * (-m0 - mp0) * sin(x(7)) * cos(x(6)) + sin(x(8)) * (-m0 - mp0) * sin(x(6))) * (G - n3) - (cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) - sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(6))) * cos(x(5)) + 0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + n3pp * (-0.2e1 * m0 * x(12) * (cos(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * sin(x(8)) * sin(x(4))) * cos(x(4)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * ((sin(x(8)) * x(12) * sin(x(7)) * cos(x(6)) - sin(x(6)) * cos(x(8)) * x(12)) * cos(x(4)) ^ 3 + sin(x(4)) * x(12) * cos(x(7)) * cos(x(6)) * cos(x(4)) ^ 2 + x(12) * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * cos(x(4))) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + (0.2e1 * x(13) * cos(x(6)) * cos(x(7)) * cos(x(4)) ^ 3 + 0.3e1 * (-0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + 0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * sin(x(6))) * cos(x(4)) ^ 2 + 0.4e1 * x(12) * (cos(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) / 0.2e1 + sin(x(6)) * sin(x(8)) * sin(x(4)) / 0.2e1) * cos(x(4))) * m0 * L0 * cos(x(5)) ^ 2 + 0.2e1 * cos(x(4)) ^ 2 * m0 * x(13) * sin(x(5)) * L0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + n3ppp * (0.2e1 * m0 * (-cos(x(6)) * sin(x(7)) * cos(x(8)) / 0.2e1 - sin(x(6)) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * (cos(x(6)) * cos(x(7)) * cos(x(4)) ^ 3 / 0.2e1 - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) / 0.2e1 - sin(x(6)) * cos(x(8)) / 0.2e1) * cos(x(4)) ^ 2) * sin(x(5)) * L0 * cos(x(5)) ^ 3 + 0.3e1 * (cos(x(6)) * sin(x(7)) * cos(x(8)) / 0.3e1 + sin(x(6)) * sin(x(8)) / 0.3e1) * cos(x(4)) ^ 2 * m0 * L0 * cos(x(5)) ^ 2) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + (-0.4e1 * ((cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 + 0.2e1 * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * sin(x(6)) * cos(x(6)) + cos(x(8)) * sin(x(8))) * cos(x(4)) ^ 2 - cos(x(6)) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) - cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 - 0.2e1 * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * sin(x(6)) * cos(x(6)) - cos(x(8)) * sin(x(8))) * cos(x(4)) * x(12) * (G - n3) * cos(x(5)) ^ 5 + 0.2e1 * cos(x(4)) * (-0.2e1 * cos(x(6)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 3 + sin(x(4)) * (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(8)) * sin(x(6)) * sin(x(8)) * sin(x(7)) * cos(x(6)) + cos(x(8)) ^ 2) * cos(x(4)) ^ 2 + 0.2e1 * cos(x(6)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) - 0.2e1 * sin(x(4)) * ((cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(8)) * sin(x(6)) * sin(x(8)) * sin(x(7)) * cos(x(6)) + cos(x(8)) ^ 2 - 0.1e1 / 0.2e1)) * sin(x(5)) * x(12) * (G - n3) * cos(x(5)) ^ 4 + (0.2e1 * x(13) * (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(8)) * sin(x(6)) * sin(x(8)) * sin(x(7)) * cos(x(6)) + cos(x(8)) ^ 2) * (G - n3) * cos(x(4)) ^ 4 + (((0.8e1 * sin(x(8)) * x(12) * (G - n3) * cos(x(7)) ^ 2 + 0.2e1 * cos(x(7)) * sin(x(7)) * n3p - 0.16e2 * sin(x(8)) * x(12) * (G - n3)) * cos(x(8)) + 0.4e1 * x(13) * sin(x(8)) * cos(x(7)) * sin(x(4)) * sin(x(7)) * (G - n3)) * cos(x(6)) ^ 2 - 0.4e1 * sin(x(6)) * (-0.4e1 * x(12) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + x(13) * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * cos(x(7)) * n3p / 0.2e1 + 0.2e1 * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) + 0.8e1 * cos(x(8)) * sin(x(8)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + ((-0.8e1 * x(13) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 - 0.8e1 * sin(x(4)) * (-sin(x(8)) * cos(x(7)) ^ 2 * n3p / 0.4e1 + x(12) * sin(x(7)) * (G - n3) * cos(x(7)) + sin(x(8)) * n3p / 0.2e1) * cos(x(8)) - 0.2e1 * x(13) * (cos(x(7)) ^ 2 + 0.4e1) * (G - n3)) * cos(x(6)) ^ 2 + 0.16e2 * (cos(x(8)) ^ 2 * sin(x(4)) * sin(x(7)) * n3p / 0.4e1 + x(13) * sin(x(8)) * sin(x(7)) * (G - n3) * cos(x(8)) - sin(x(4)) * (sin(x(8)) * x(12) * (G - n3) * cos(x(7)) + sin(x(7)) * n3p / 0.4e1) / 0.2e1) * sin(x(6)) * cos(x(6)) - 0.8e1 * x(13) * (G - n3) * cos(x(8)) ^ 2 + 0.2e1 * cos(x(8)) * sin(x(8)) * sin(x(4)) * n3p + 0.6e1 * x(13) * (G - n3)) * cos(x(4)) ^ 2 + (((-0.6e1 * sin(x(8)) * x(12) * (G - n3) * cos(x(7)) ^ 2 + 0.2e1 * cos(x(7)) * sin(x(7)) * n3p + 0.12e2 * sin(x(8)) * x(12) * (G - n3)) * cos(x(8)) + 0.4e1 * x(13) * sin(x(8)) * cos(x(7)) * sin(x(4)) * sin(x(7)) * (G - n3)) * cos(x(6)) ^ 2 - 0.4e1 * sin(x(6)) * (0.3e1 * x(12) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + x(13) * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * cos(x(7)) * n3p / 0.2e1 - 0.3e1 / 0.2e1 * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) - 0.6e1 * cos(x(8)) * sin(x(8)) * x(12) * (G - n3)) * cos(x(4)) - 0.4e1 * cos(x(6)) * x(12) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 3 - 0.8e1 * sin(x(5)) * (x(13) * cos(x(6)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((n3p * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 / 0.4e1 + x(13) * sin(x(8)) * sin(x(4)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) + cos(x(7)) ^ 2 * n3p / 0.4e1 - 0.3e1 / 0.4e1 * sin(x(7)) * x(12) * sin(x(8)) * (G - n3) * cos(x(7)) + n3p / 0.4e1) * cos(x(6)) ^ 2 + 0.2e1 * (x(13) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + (0.3e1 / 0.8e1 * x(12) * cos(x(7)) * (G - n3) - sin(x(8)) * sin(x(7)) * n3p / 0.4e1) * cos(x(8)) - x(13) * sin(x(4)) * sin(x(7)) * (G - n3) / 0.2e1) * sin(x(6)) * cos(x(6)) + cos(x(8)) ^ 2 * n3p / 0.4e1 + x(13) * sin(x(8)) * sin(x(4)) * (G - n3) * cos(x(8)) - n3p / 0.4e1) * cos(x(4)) ^ 2 + ((-x(12) * sin(x(4)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 / 0.2e1 + x(13) * cos(x(7)) * sin(x(7)) * (G - n3) * cos(x(8)) / 0.2e1 - 0.3e1 / 0.4e1 * sin(x(4)) * (x(12) * (G - n3) * cos(x(7)) ^ 2 + sin(x(8)) * cos(x(7)) * sin(x(7)) * n3p / 0.3e1 + 0.2e1 / 0.3e1 * x(12) * (G - n3))) * cos(x(6)) ^ 2 + (0.2e1 * sin(x(4)) * (cos(x(7)) * n3p / 0.4e1 + sin(x(8)) * x(12) * (G - n3) * sin(x(7))) * cos(x(8)) + x(13) * sin(x(8)) * cos(x(7)) * (G - n3)) * sin(x(6)) * cos(x(6)) / 0.2e1 - x(12) * sin(x(4)) * (cos(x(8)) - 0.1e1) * (cos(x(8)) + 0.1e1) * (G - n3) / 0.2e1) * cos(x(4)) + cos(x(6)) * x(12) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) / 0.2e1) * cos(x(5)) ^ 2 + (0.4e1 * (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 + 0.3e1 / 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(8)) * sin(x(6)) * sin(x(8)) * sin(x(7)) * cos(x(6)) + cos(x(8)) ^ 2 - 0.1e1) * x(13) * (G - n3) * cos(x(4)) ^ 2 - 0.6e1 * cos(x(7)) * ((n3p * cos(x(8)) / 0.3e1 + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) - (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p / 0.3e1) * sin(x(6))) * cos(x(6)) * cos(x(4)) + 0.4e1 * cos(x(6)) * x(12) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) + 0.4e1 * x(13) * cos(x(6)) * sin(x(5)) * cos(x(4)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) / ((cos(x(7)) * cos(x(4)) * cos(x(6)) - (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / m0 / cos(x(4)) ^ 4 / cos(x(5)) ^ 4 / L0 * (-L0 * cos(x(5)) ^ 3 * cos(x(4)) * m0 * x(12) ^ 2 - L0 * cos(x(5)) * cos(x(4)) * m0 * x(13) ^ 2 + (m0 + mp0) * (G - n3)) x(2) x(10) sin(x(4)) * (G - n3) / cos(x(4)) (-n3p * sin(x(4)) * cos(x(4)) + x(12) * (G - n3)) / cos(x(4)) ^ 2 (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + m0 * cos(x(5)) * L0 * (((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) - (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) - (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3)) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) x(12) * ((0.4e1 * cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 3 * sin(x(4)) + 0.3e1 * L0 * cos(x(4)) ^ 2 * sin(x(4)) ^ 2 * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp - L0 * cos(x(4)) ^ 4 * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + m0 * cos(x(5)) ^ 2 * L0 * (-cos(x(8)) * cos(x(4)) * sin(x(7)) * n3pp * cos(x(6)) - sin(x(6)) * sin(x(8)) * cos(x(4)) * n3pp) * sin(x(5)) * cos(x(4)) ^ 2 - 0.2e1 * m0 * cos(x(5)) * L0 * (((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + (0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) * sin(x(4)) + (-0.2e1 * m0 * x(12) * L0 * ((-sin(x(8)) * cos(x(4)) * n3p * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * cos(x(4)) * (G - n3)) * cos(x(6)) + cos(x(4)) * n3p * cos(x(8)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * (x(13) * sin(x(8)) * cos(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - x(13) * cos(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) ^ 2 * L0 * cos(x(7)) * cos(x(4)) * cos(x(6)) * cos(x(5))) * cos(x(4)) - (-0.2e1 * m0 * x(12) * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * sin(x(4)) + (0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * cos(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 - cos(x(6)) * cos(x(7)) * cos(x(4)) * (m0 + mp0) * (G - n3)) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + 0.3e1 * (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + m0 * cos(x(5)) * L0 * (((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + (0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 + 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 - cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3)) * (G - n3)) / cos(x(4)) ^ 4 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * sin(x(4)) - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + m0 * cos(x(5)) * L0 * (((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + (0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 + 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 - cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3)) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 * (-cos(x(5)) * sin(x(4)) * cos(x(6)) * cos(x(7)) - cos(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)))) + x(13) * ((0.3e1 * cos(x(5)) ^ 2 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 * sin(x(5)) + 0.3e1 * L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 2 * cos(x(6)) * cos(x(7)) * m0 * n3pp * sin(x(5)) - m0 * sin(x(5)) * L0 * (((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + (0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + m0 * cos(x(5)) * L0 * (-0.2e1 * ((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) * sin(x(5)) + (0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * cos(x(5)) ^ 2 - (0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) ^ 2) * cos(x(4)) ^ 2 + (0.6e1 * m0 * x(12) * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 2 * sin(x(5)) - 0.2e1 * m0 * cos(x(5)) ^ 3 * x(12) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) + 0.4e1 * m0 * sin(x(5)) ^ 2 * x(12) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) - m0 * (G - n3) * x(13) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * sin(x(5))) * cos(x(4)) + (0.6e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 2 * sin(x(5)) + 0.2e1 * x(12) ^ 2 * L0 * cos(x(5)) ^ 3 * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) - 0.4e1 * x(12) ^ 2 * L0 * sin(x(5)) ^ 2 * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5))) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + 0.2e1 * (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + m0 * cos(x(5)) * L0 * (((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + (0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 + 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 - cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3)) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 3 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * sin(x(5)) - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + m0 * cos(x(5)) * L0 * (((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + (0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 + 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 - cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3)) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 * (-sin(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) + sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(5)) + cos(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))))) + (sin(x(6)) * sin(x(7)) * x(15) + cos(x(6)) * sin(x(7)) * x(16) + x(14) * cos(x(7))) / cos(x(7)) * ((-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 + L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 3 * sin(x(6)) * cos(x(7)) * m0 * n3pp + m0 * cos(x(5)) * L0 * ((-(0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * sin(x(6)) - 0.3e1 * cos(x(8)) * cos(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + (-0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * sin(x(6)) - cos(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * (-((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * sin(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * cos(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * (-(n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * sin(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * cos(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * (-(x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * sin(x(6)) + 0.2e1 * cos(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8)))) * cos(x(4)) + (-0.2e1 * x(12) ^ 2 * L0 * m0 * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 + 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + sin(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3)) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + m0 * cos(x(5)) * L0 * (((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + (0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 + 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 - cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3)) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 * (-cos(x(5)) * cos(x(4)) * sin(x(6)) * cos(x(7)) - sin(x(4)) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))))) + (cos(x(6)) * x(15) - sin(x(6)) * x(16)) * ((-cos(x(5)) ^ 3 * L0 * m0 * n3pp * cos(x(6)) * cos(x(7)) * sin(x(8)) * cos(x(4)) ^ 4 + L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(6)) * sin(x(7)) * m0 * n3pp + m0 * cos(x(5)) * L0 * ((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * cos(x(7)) + 0.2e1 * x(12) * sin(x(7)) * n3p) * cos(x(6)) * cos(x(5)) ^ 2 + 0.2e1 * (-cos(x(8)) * sin(x(4)) * cos(x(7)) * n3pp / 0.2e1 - x(13) * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * cos(x(6)) * cos(x(7)) * sin(x(8)) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * ((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * cos(x(7)) + 0.3e1 / 0.2e1 * x(12) * sin(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * cos(x(7)) * cos(x(6)) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * (-x(13) * sin(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * cos(x(7))) * cos(x(6)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * cos(x(6)) * cos(x(7)) * sin(x(8))) * cos(x(4)) + (-0.2e1 * x(12) ^ 2 * L0 * m0 * cos(x(6)) * cos(x(7)) * sin(x(8)) * cos(x(5)) ^ 3 + 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * cos(x(6)) * cos(x(7)) * cos(x(8)) * cos(x(5)) ^ 2 + cos(x(6)) * sin(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3)) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + m0 * cos(x(5)) * L0 * (((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + (0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 + 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 - cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3)) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 * (-cos(x(5)) * cos(x(4)) * cos(x(6)) * sin(x(7)) - sin(x(4)) * cos(x(6)) * cos(x(7)) * sin(x(8)) * cos(x(5)) + sin(x(5)) * cos(x(6)) * cos(x(7)) * cos(x(8)))) + (sin(x(6)) * x(15) + cos(x(6)) * x(16)) / cos(x(7)) * ((-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 4 + m0 * cos(x(5)) * L0 * ((0.3e1 * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) * cos(x(6)) + 0.3e1 * sin(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + (sin(x(8)) * sin(x(4)) * sin(x(7)) * n3pp * cos(x(6)) - sin(x(6)) * cos(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * ((-x(13) * sin(x(8)) * (G - n3) - sin(x(4)) * n3p * cos(x(8))) * sin(x(7)) * cos(x(6)) + (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * ((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) * cos(x(6)) + (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * (-0.2e1 * sin(x(8)) * x(12) * sin(x(7)) * cos(x(6)) + 0.2e1 * sin(x(6)) * cos(x(8)) * x(12)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * cos(x(4)) + (-0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 3 + 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 2) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + m0 * cos(x(5)) * L0 * (((0.3e1 * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * cos(x(8)) * sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + (0.2e1 * (-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp) * sin(x(5)) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 + 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 - cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3)) * (G - n3)) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 * (-sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) + sin(x(5)) * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))))) + 0.2e1 * x(13) * x(12) * sin(x(5)) / cos(x(5)) ^ 3 * (m0 * cos(x(5)) * L0 * (((0.6e1 * sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - 0.2e1 * cos(x(7)) * n3p) * cos(x(6)) - 0.6e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(5)) ^ 2 + 0.2e1 * x(13) * cos(x(7)) * (G - n3) * cos(x(6)) * sin(x(5)) * cos(x(5))) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(6))) * cos(x(5)) ^ 3 + 0.3e1 * m0 * x(12) * L0 * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(6)) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * x(13) * L0 * (0.2e1 * cos(x(6)) * sin(x(7)) * cos(x(8)) + 0.2e1 * sin(x(6)) * sin(x(8))) * cos(x(5))) * cos(x(4)) + (-0.4e1 * x(12) * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 + 0.4e1 * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2) * (G - n3)) / cos(x(4)) ^ 3 / m0 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) - x(12) ^ 2 / cos(x(5)) * sin(x(5)) * (m0 * cos(x(5)) * L0 * (0.2e1 * x(12) * cos(x(7)) * (G - n3) * cos(x(6)) * sin(x(5)) * cos(x(5)) + 0.2e1 * x(13) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * ((G - n3) * cos(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(8)) * (G - n3) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * (sin(x(8)) * sin(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - sin(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (G - n3) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) + m0 * (G - n3) * x(13) * L0 * sin(x(4)) * cos(x(6)) * cos(x(7)) * cos(x(5))) * cos(x(4))) / cos(x(4)) ^ 3 / m0 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + n3p * (m0 * cos(x(5)) * L0 * ((-0.3e1 * sin(x(8)) * x(12) ^ 2 * sin(x(7)) * cos(x(6)) + 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) ^ 2) * cos(x(5)) ^ 2 - 0.2e1 * x(13) * x(12) * cos(x(7)) * cos(x(6)) * sin(x(5)) * cos(x(5)) - x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * ((-x(13) * cos(x(8)) * sin(x(7)) + 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4))) * cos(x(6)) - x(13) * sin(x(8)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * (-x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + x(13) * cos(x(8)) * sin(x(4)) * sin(x(6))) * cos(x(5)) ^ 2 - m0 * x(13) * L0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * cos(x(5)) + 0.2e1 * (G - n3) * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + 0.2e1 * cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3) + 0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + n3pp * (-0.2e1 * m0 * cos(x(5)) ^ 3 * L0 * x(12) * cos(x(7)) * cos(x(6)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * x(12) * L0 * (-sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + sin(x(4)) * cos(x(8)) * sin(x(6))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * x(12) * L0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2) * cos(x(4))) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + n3ppp * (-cos(x(5)) ^ 3 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * cos(x(4)) ^ 3 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 + m0 * cos(x(5)) * L0 * ((cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 2 + (-cos(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4))) * sin(x(5)) * cos(x(5))) * cos(x(4)) ^ 2) / cos(x(4)) ^ 3 / m0 / cos(x(5)) ^ 2 / L0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + (-0.8e1 * cos(x(5)) * (x(12) * (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(8)) * sin(x(6)) * sin(x(8)) * sin(x(7)) * cos(x(6)) + cos(x(8)) ^ 2) * (G - n3) * cos(x(5)) ^ 3 / 0.4e1 + ((x(12) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 / 0.2e1 - x(12) * (G - n3) * cos(x(7)) ^ 2 - sin(x(8)) * cos(x(7)) * sin(x(7)) * n3p / 0.2e1 + x(12) * (G - n3) / 0.2e1) * cos(x(6)) ^ 2 - (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(8)) * sin(x(6)) * cos(x(6)) + cos(x(8)) ^ 2 * x(12) * (G - n3) / 0.2e1) * cos(x(5)) + x(13) * cos(x(6)) * sin(x(5)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 3 + (-0.4e1 * cos(x(6)) * x(12) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(5)) ^ 4 + 0.4e1 * cos(x(6)) * x(12) * sin(x(5)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3) * cos(x(5)) ^ 3 + ((-0.2e1 * sin(x(4)) * n3p * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.4e1 * x(13) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) - 0.8e1 * sin(x(4)) * (-cos(x(7)) ^ 2 * n3p / 0.2e1 + sin(x(7)) * x(12) * sin(x(8)) * (G - n3) * cos(x(7)) + n3p / 0.4e1)) * cos(x(6)) ^ 2 - 0.8e1 * sin(x(6)) * (x(13) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 - sin(x(4)) * (x(12) * cos(x(7)) * (G - n3) + sin(x(8)) * sin(x(7)) * n3p / 0.2e1) * cos(x(8)) - x(13) * sin(x(7)) * (G - n3) / 0.2e1) * cos(x(6)) - 0.4e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * cos(x(8))) * cos(x(5)) ^ 2 + 0.4e1 * ((x(13) * sin(x(4)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 + (-sin(x(8)) * cos(x(7)) ^ 2 * n3p / 0.2e1 + x(12) * sin(x(7)) * (G - n3) * cos(x(7)) / 0.2e1 + sin(x(8)) * n3p) * cos(x(8)) - 0.2e1 * sin(x(4)) * (cos(x(7)) ^ 2 - 0.1e1 / 0.2e1) * x(13) * (G - n3)) * cos(x(6)) ^ 2 - 0.2e1 * (cos(x(8)) ^ 2 * sin(x(7)) * n3p / 0.2e1 + x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) - sin(x(8)) * x(12) * (G - n3) * cos(x(7)) / 0.4e1 - sin(x(7)) * n3p / 0.4e1) * sin(x(6)) * cos(x(6)) + cos(x(8)) * (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p / 0.2e1)) * sin(x(5)) * cos(x(5)) + 0.2e1 * (cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 + 0.2e1 * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * sin(x(6)) * cos(x(6)) + cos(x(8)) * sin(x(8))) * x(13) * (G - n3)) * cos(x(4)) ^ 2 + (0.4e1 * x(12) * ((cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(8)) * sin(x(6)) * sin(x(8)) * sin(x(7)) * cos(x(6)) + cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * (G - n3) * cos(x(5)) ^ 4 + 0.4e1 * sin(x(4)) * (cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 + 0.2e1 * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * sin(x(6)) * cos(x(6)) + cos(x(8)) * sin(x(8))) * sin(x(5)) * x(12) * (G - n3) * cos(x(5)) ^ 3 + (0.4e1 * cos(x(7)) * (x(13) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) - 0.2e1 * x(12) * cos(x(7)) * (G - n3) - sin(x(8)) * sin(x(7)) * n3p / 0.2e1) * cos(x(6)) ^ 2 + 0.4e1 * (n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * cos(x(7)) * sin(x(6)) * cos(x(6)) + 0.2e1 * x(12) * (G - n3)) * cos(x(5)) ^ 2 + 0.4e1 * sin(x(5)) * ((sin(x(4)) * (sin(x(8)) * x(12) * (G - n3) * cos(x(7)) ^ 2 + cos(x(7)) * sin(x(7)) * n3p - 0.2e1 * sin(x(8)) * x(12) * (G - n3)) * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * cos(x(7)) * sin(x(7)) * (G - n3)) * cos(x(6)) ^ 2 - (-x(12) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + x(13) * cos(x(7)) * (G - n3) * cos(x(8)) + sin(x(4)) * (-sin(x(8)) * cos(x(7)) * n3p + x(12) * sin(x(7)) * (G - n3)) / 0.2e1) * sin(x(6)) * cos(x(6)) + cos(x(8)) * sin(x(8)) * x(12) * sin(x(4)) * (G - n3) / 0.2e1) * cos(x(5)) - 0.2e1 * x(13) * cos(x(6)) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(4)) - 0.4e1 * cos(x(5)) * cos(x(7)) * x(12) * (-sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * cos(x(6)) * (G - n3)) / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / m0 / cos(x(4)) ^ 4 / cos(x(5)) ^ 3 / L0 * (-L0 * cos(x(5)) ^ 3 * cos(x(4)) * m0 * x(12) ^ 2 - L0 * cos(x(5)) * cos(x(4)) * m0 * x(13) ^ 2 + (m0 + mp0) * (G - n3)) / ((cos(x(7)) * cos(x(4)) * cos(x(6)) - (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) x(3) x(11) x(8) (sin(x(6)) * x(15) + cos(x(6)) * x(16)) / cos(x(7))];

z = -([yr(1:14), yr(19), yr(20)]-Ts)';
n1 = yr6(1) - Kv6*z(1:6);
n2 = yr6(2) - Kv6*z(7:12);
n4 = 0 - Kv2*z(15:16);
t1 = x(13);
t2 = -G + n3;
t3 = x(8);
t4 = sin(t3);
t5 = x(7);
t6 = sin(t5);
t5 = cos(t5);
t7 = 4;
t8 = t5 ^ 2;
t9 = t5 * t8;
t3 = cos(t3);
t10 = t3 ^ 2;
t11 = t3 * t10;
t12 = (-t7 + t8) * t10;
t13 = 0.1e1 + t12;
t14 = t7 * t8;
t15 = x(6);
t16 = cos(t15);
t15 = sin(t15);
t17 = -0.4e1 / 0.3e1 + t8;
t18 = t17 * t10;
t19 = 0.1e1 + t18;
t20 = 0.2e1 * t8;
t21 = t16 ^ 2;
t22 = t16 * t21;
t23 = t6 * t4;
t24 = t11 * t15;
t25 = t16 * t15;
t26 = t23 * t3;
t27 = t16 * t3;
t28 = -0.3e1 * t27 * (t25 * (-t20 + t19) - t26) + t23 * (-t14 + t13) * t22 - t24;
t29 = x(4);
t30 = cos(t29);
t31 = x(12);
t32 = -0.2e1 + t5;
t33 = 0.2e1 + t5;
t29 = sin(t29);
t34 = -0.2e1 + t8;
t35 = 5;
t36 = 0.3e1 * t8;
t37 = t5 * t4;
t38 = t37 * n3p;
t39 = t38 * (-t36 + 0.6e1);
t40 = t31 * t6;
t41 = -0.3e1 / 0.4e1 + t8;
t42 = 0.5e1 / 0.2e1 * t10;
t43 = t34 * t10;
t44 = t5 * t29;
t45 = t44 * t2;
t46 = t5 * n3p;
t47 = t46 * t6;
t48 = t31 * t2;
t49 = t45 * t23 * t1;
t50 = 0.5e1 / 0.6e1;
t51 = 0.1e1 / 0.2e1;
t52 = t8 * t50;
t53 = t47 * t51;
t54 = t4 * n3p;
t55 = t1 * t29;
t56 = t55 * t2;
t57 = t56 * t3;
t58 = t40 * t2;
t59 = t15 * t4;
t60 = t59 * t48;
t61 = 0.3e1 / 0.5e1;
t62 = 0.2e1 - t8;
t63 = t8 * t61;
t64 = t48 * t37;
t65 = t64 * t62;
t66 = t6 * n3p;
t67 = (0.1e1 - t5) * (0.1e1 + t5);
t68 = t10 * t32 * t33;
t69 = 0.3e1 / 0.2e1 * t66;
t70 = t58 * t5;
t71 = t1 * t2;
t72 = t71 * t3;
t73 = 0.1e1 / 0.3e1;
t74 = t71 * t23;
t75 = t29 * t3;
t76 = t40 * t32 * t33;
t77 = t76 * t3;
t78 = t44 * t1;
t79 = t78 * t34;
t80 = t2 * t10;
t81 = 0.3e1 / 0.2e1 * t8;
t82 = -t81 + 0.2e1;
t83 = t48 * t82 * t4;
t84 = 0.1e1 / 0.4e1;
t85 = 0.19e2 / 0.24e2;
t86 = 0.18e2 * t10;
t87 = 0.6e1 * t10;
t88 = t48 * t4;
t89 = 0.3e1 / 0.14e2 * t8;
t90 = t65 + t66 * (-0.6e1 / 0.7e1 + t89);
t91 = t10 * t7;
t92 = n3p * t11;
t93 = t92 * t29;
t94 = 0.7e1 / 0.6e1;
t95 = 0.7e1 / 0.12e2;
t96 = 0.3e1 / 0.4e1 - t10;
t97 = t94 * (-t70 + t54 * (-0.3e1 / 0.7e1 * t8 + 0.4e1 / 0.7e1));
t98 = t72 * t96;
t99 = -t64 + 0.9e1 / 0.14e2 * t66;
t100 = t10 * t51;
t101 = t54 * (-t100 + 0.1e1 / 0.8e1);
t102 = -0.3e1 / 0.4e1 + t10;
t103 = -t51 + t3;
t104 = t51 + t3;
t105 = t59 * t3;
t106 = t3 * t102;
t102 = t3 * (t102 * t33 * t6 * t32 * t22 + t105) + 0.3e1 * t16 * (t25 * t17 * t4 * t103 * t104 + t106 * t6) - t59 * t84;
t42 = t30 * (t16 * (t16 * (t16 * (t3 * (t39 + t40 * (-t35 * t8 + 0.15e2 / 0.2e1) * t2 + t42 * t40 * t32 * t33 * t2) + t45 * (t41 * t7 - 0.3e1 * t43) * t1) - 0.6e1 * t15 * (-t53 - t3 * (-t3 * (t47 + t48 * (-0.5e1 / 0.4e1 * t8 + 0.5e1 / 0.3e1) * t4) + t49) + t48 * (-0.5e1 / 0.12e2 + t52) * t4)) + 0.3e1 * t3 * (-t5 * (t57 + t54) + t58 * (-0.5e1 / 0.3e1 + t42))) + t60 * t42 - t71 * t28 * t30) + t15 * (t3 * (-0.3e1 / 0.10e2 * t75 * t54 + t71 * (t61 - t10)) * t35 + 0.15e2 * t21 * (t29 * (-(-t70 + t54 * (-t63 + 0.3e1 / 0.10e2)) * t73 + 0.2e1 / 0.3e1 * t10 * (-t70 + t54 * (t61 - 0.9e1 / 0.20e2 * t8))) - t72 * (t18 + t67))) + t16 * (t21 * (t35 * (t29 * (t65 + t66 * (t63 - 0.9e1 / 0.10e2)) * t3 + t23 * (t68 + t67) * t2 * t1) - t69 * t29 * t32 * t33 * t11) + t75 * (t35 * (t66 * t61 - t64) - 0.9e1 / 0.2e1 * t66 * t10) + t74 * (0.15e2 * t10 - 0.3e1));
t63 = t48 * t7;
t65 = x(5);
t67 = cos(t65);
t107 = 0.1e1 / 0.6e1;
t108 = t107 * t8;
t109 = t48 * t5;
t110 = t109 * t62;
t111 = t23 * (t108 - 0.2e1 / 0.3e1) * n3p;
t112 = 0.2e1 / 0.3e1 * t8;
t113 = 0.4e1 / 0.3e1 * t48;
t114 = t113 * t9;
t115 = t84 * t8;
t116 = n3p * (t115 - t73);
t117 = t109 * t23;
t118 = t8 * t51;
t119 = t51 * n3p;
t120 = t119 * t23;
t121 = t107 * n3p;
t122 = t15 * t3;
t123 = t7 - t8;
t124 = t48 * t23;
t125 = t124 * t123;
t126 = t46 * (-t81 + 0.3e1);
t127 = t72 * t37;
t128 = 0.2e1 * t127;
t129 = t46 * t23;
t130 = t48 * t8;
t131 = t71 * t5;
t132 = t131 * t6;
t133 = t1 * t5 * t6;
t134 = t46 * t51;
t135 = t71 * t37;
t136 = t75 * t51;
t137 = t24 * t48;
t138 = -0.3e1 / 0.2e1 + t8;
t139 = 0.1e1 - t8;
t140 = n3p * t139;
t141 = t57 * t6;
t142 = t141 * t32 * t33;
t143 = 0.8e1 / 0.3e1 * t8;
t144 = t31 * t5;
t145 = 0.2e1 * t55;
t146 = -t51 + t8;
t147 = t56 * t17 * t4;
t148 = 0.2e1 / 0.3e1 * t56 * t4 * t146;
t149 = 0.3e1 * t10;
t150 = -t149 + 0.2e1;
t151 = t141 * t150;
t152 = 0.2e1 / 0.3e1 * t109;
t153 = t56 * t4;
t154 = n3p * t3;
t155 = 0.3e1 / 0.4e1 * t8;
t156 = (t46 * (0.3e1 / 0.2e1 - t155) + t125) * t10;
t157 = t75 * t17 * t31;
t158 = t75 * t94;
t159 = t46 * t84;
t160 = -t124 - t159;
t161 = -t51 + t10;
t162 = t23 * (0.2e1 / 0.7e1 * t8 - 0.8e1 / 0.7e1) * n3p + t110;
t163 = t56 * t6;
t164 = 0.4e1 / 0.3e1 * t55;
t165 = t5 * (-t124 - 0.9e1 / 0.28e2 * t46) + 0.3e1 / 0.7e1 * n3p;
t166 = -t109 + 0.6e1 / 0.7e1 * t23 * n3p;
t100 = t100 - 0.3e1 / 0.8e1;
t167 = t84 - t10;
t168 = t23 * (t149 - 0.3e1 / 0.4e1);
t169 = t23 * t32 * t33;
t106 = t106 * t15;
t103 = -t16 * (-t169 * t103 * t104 * t21 - t168) - t106 - 0.3e1 * t106 * t17 * t21;
t104 = t30 * (-t122 * (t121 * t10 + (0.2e1 * (-t118 + t84) * n3p + 0.2e1 * t10 * t116 - 0.2e1 * t117) * t21) + t16 * (t10 * (t120 - t109) + t21 * (t23 * (-t112 + t107) * n3p + t10 * (t111 + t110) - t109 + t114))) + t16 * (t16 * (t16 * (t29 * (0.4e1 / 0.3e1 * t124 * (t84 - t8) + 0.4e1 / 0.3e1 * t46 * (-t118 + 0.3e1 / 0.8e1) - t10 * (t126 + t125) * t73) - t128 * t34) + t15 * (-t51 * (t75 * (t51 * (t48 + t129) - t130) - t132) - t80 * (t75 * t84 * t17 * t31 + t133)) * t7) + 0.2e1 * t3 * (-t135 - t136 * (-t124 - t134))) - t137 * t73 * t29;
t52 = t30 * (t30 * t104 + t16 * (t21 * (-t140 * t23 * t50 + t2 * (t145 * t138 * t6 * t3 + t144 * (-t143 + 0.17e2 / 0.6e1)) - t10 * (-t23 * (-t52 + 0.10e2 / 0.3e1) * n3p - t109 * (0.17e2 / 0.6e1 * t8 - 0.17e2 / 0.3e1) + t142)) + t10 * (-0.5e1 / 0.2e1 * t23 * n3p + 0.17e2 / 0.6e1 * t109) + t120 + t151 - t152) + t122 * (t3 * (t154 * t50 - t153) - t119) + (0.3e1 * (t3 * (0.10e2 / 0.3e1 * t116 * t3 - t147) + t140 * t50 - 0.17e2 / 0.9e1 * t117) * t3 + 0.3e1 * t148) * t15 * t21) + t15 * (-t21 * (t132 * t51 - t158 * (t48 * (0.6e1 / 0.7e1 - t8) + 0.3e1 / 0.7e1 * t129) - t80 * (t157 + t133)) * t7 + t113 * t75 * t161) + t16 * (t21 * (-0.2e1 * t29 * (t46 * (-t115 + t51) + t124 * (0.2e1 / 0.3e1 - t8)) + 0.2e1 * t127 * t34 + 0.4e1 / 0.3e1 * t156 * t29) + t29 * (0.2e1 / 0.3e1 * t124 + t46 / 0.2e1 + t91 * t160) + t128);
t65 = sin(t65);
t104 = t9 * n3p;
t106 = t63 * t23;
t127 = t48 * t19;
t128 = 0.2e1 * t109;
t132 = t1 ^ 2;
t133 = t132 * t2;
t140 = 0.1e1 / 0.20e2;
t170 = t31 ^ 2;
t140 = n3pp * t140 - 0.9e1 / 0.10e2 * t2 * t170 - t133;
t171 = t8 / 0.12e2;
t172 = t5 * t140 * t6;
t173 = t54 * t31;
t174 = 45;
t175 = 30;
t176 = 0.15e2 * t173;
t177 = t174 * t140 * t6;
t178 = t109 * (0.3e1 / 0.4e1 - t8);
t179 = 24;
t180 = t4 * t140;
t181 = t46 * t40;
t182 = x(15);
t183 = 36;
t184 = 9;
t185 = t46 * t184;
t186 = 0.9e1 / 0.2e1 * n3p;
t187 = t124 * t182;
t188 = t154 * t55;
t189 = t188 * t17;
t190 = x(14);
t191 = t190 * t6;
t192 = t55 * t183;
t193 = t182 * t5;
t194 = t193 * t15;
t195 = t48 * t182;
t196 = t195 * t15;
t197 = t175 * t140;
t198 = t197 * t6;
t199 = t51 * t15;
t200 = t199 * t182;
t201 = -t5 * (-t191 + t194) + t200;
t202 = t5 * t190;
t203 = t182 * t6;
t204 = t202 * t15 + t203;
t205 = t88 * t204;
t206 = t51 * t3;
t207 = t68 * t40 * n3p;
t208 = 0.45e2 / 0.2e1;
t209 = t8 * t208;
t210 = t203 * t71;
t211 = 0.2e1 * t210;
t212 = t195 * t29;
t213 = t23 * t179;
t214 = t213 * t1;
t215 = 0.15e2 * t8;
t216 = t215 - 0.15e2 / 0.2e1;
t217 = t173 * t29;
t218 = t191 * t71;
t219 = t131 * t15 * t182;
t220 = 0.2e1 * t71 * t59 * t182;
t221 = 0.15e2 * t40;
t222 = t187 * t15;
t223 = t222 * t29;
t224 = 0.81e2 * t1;
t225 = t190 * t29;
t226 = t225 * t64;
t227 = t2 * t4;
t228 = t66 * t11;
t229 = t71 * t204;
t230 = t191 * t29;
t231 = t44 * t182;
t232 = -0.105e3 / 0.2e1 * t137 * t1;
t224 = -t51 * t2 * (t1 * t204 + (-t15 * (t230 + t224) + t231) * t31 * t3) + t10 * (t229 - 0.15e2 / 0.2e1 * t59 * t31 * t29 * n3p) + t16 * (t16 * (t16 * (t1 * (0.3e1 * t46 * (t118 + t7) + 0.3e1 * t124 * (0.35e2 / 0.2e1 - t8) - 0.105e3 / 0.2e1 * t10 * (t125 + t46 * (-0.8e1 / 0.35e2 * t8 + 0.16e2 / 0.35e2))) + t75 * (t175 * (t40 * (t118 - 0.3e1 / 0.4e1) * n3p - t37 * t140 * t62) - 0.15e2 / 0.2e1 * t207)) + t15 * (-0.315e3 / 0.2e1 * t48 * t17 * t1 * t11 - t198 * t44 + t217 * t216) + t3 * (t3 * ((t173 * (-t209 + t175) + 0.60e2 * t172) * t29 * t15 - t211) + t5 * (-t214 * t15 * n3p + t212) + t48 * (0.108e3 * t8 - 0.315e3 / 0.2e1) * t15 * t1) + t210) + t31 * (-t227 * (t224 * t6 + t225) * t51 - t228 * t29 * t208) + t3 * (t37 * (t197 * t29 - t218 + t219) - t220 + t221 * t29 * n3p) + t5 * (-0.21e2 / 0.2e1 * t1 * n3p + t223 + t226) - 0.315e3 / 0.2e1 * t1 * (-0.8e1 / 0.105e3 * t46 - t124) * t10) + t232;
t232 = n3pp / 0.16e2;
t233 = t232 - 0.19e2 / 0.16e2 * t2 * t170 - t133;
t234 = 0.4e1 / 0.15e2 * t8;
t235 = 0.6e1 * t8;
t236 = t235 - 0.12e2;
t237 = t36 * (-n3pp * t84 - 0.19e2 / 0.2e1 * t2 * t170 - t133);
t238 = 0.72e2 * t233;
t239 = t233 * t179;
t240 = n3p * t183;
t241 = t153 * t182;
t242 = t163 * t182 * t15;
t243 = t45 * t190 * t1;
t244 = t51 * t190;
t245 = t54 * t55;
t246 = t196 * t51;
t247 = -0.27e2 / 0.2e1;
t248 = t191 * t55;
t249 = 0.3e1 / 0.2e1 * n3pp;
t247 = (t170 * t247 - t248) * t2;
t250 = t45 * t182 * t1;
t251 = t51 * t4;
t252 = t251 * (t15 * (-0.18e2 * t133 + t249 + t247) + t250);
t253 = 0.1e1 / 0.7e1;
t254 = t8 * t253;
t255 = t46 * (t254 - 0.2e1 / 0.7e1);
t256 = n3pp / 0.8e1;
t257 = t256 + 0.5e1 / 0.4e1 * t2 * t170 - t133;
t258 = t8 / 0.8e1;
t259 = 42;
t260 = 0.33e2 / 0.2e1;
t261 = t259 * t10;
t262 = 0.63e2 / 0.2e1;
t263 = t6 * t5;
t264 = 0.1e1 / 0.21e2;
t265 = t46 * t264;
t266 = 0.12e2 * t29;
t267 = 0.3e1 * t1 * n3p;
t225 = t118 * t225;
t268 = t1 * t6;
t269 = t15 * t31;
t125 = t229 * t51 + t10 * (-t229 + 0.21e2 / 0.2e1 * t59 * t31 * t29 * n3p) + t16 * (t16 * (t16 * (t1 * ((t124 * (-0.28e2 / 0.11e2 - t8) + t46 * (-0.2e1 / 0.11e2 * t8 + 0.4e1 / 0.11e2)) * t260 + t261 * (t255 + t125)) + t75 * (0.12e2 * t40 * (t258 + 0.21e2 / 0.8e1) * n3p - 0.12e2 * t37 * t257 * t62 + 0.21e2 / 0.2e1 * t207)) + t15 * (0.126e3 * t48 * t17 * t1 * t11 - 0.12e2 * t44 * t257 * t6 + t217 * (t81 + 0.21e2 / 0.2e1)) + t3 * (t3 * ((t173 * (t262 * t8 - t259) + t263 * t257 * t179) * t29 * t15 + t211) + t5 * (-0.12e2 * t23 * t1 * t15 * n3p - t212 * t51) + t48 * (-0.135e3 / 0.2e1 * t8 + 0.126e3) * t15 * t1) - t210) + t10 * (t75 * t40 * t262 * n3p + (-0.126e3 * t124 + 0.126e3 * t265) * t1) + t3 * (-t37 * (-t266 * t257 - t218 + t219) + t220 - 0.51e2 / 0.2e1 * t40 * t29 * n3p) + t5 * (-t199 * t187 * t29 - t267) + t88 * (t268 * t183 - t225)) + t269 * (-0.9e1 / 0.2e1 * t54 * t29 + t72 * (t261 - t183));
t199 = t8 * t73;
t211 = t2 * t3;
t257 = t171 + t51;
t261 = t45 * t1;
t270 = t78 * t51;
t271 = t40 * t11;
t272 = t34 * t21;
t273 = 0.2e1 * t25;
t274 = t273 * t6;
t275 = t3 * t4 * (0.1e1 + t272) + t274 * t161;
t276 = t30 ^ 2;
t277 = t276 ^ 2;
t278 = t276 * t277;
t279 = t30 * t277;
t280 = t30 * t276;
t115 = t30 * ((t16 * (t16 * (t3 * (t175 * t5 * (t173 + t172) - t176 * t9 - t177 - 0.15e2 * t68 * t140 * t6) + t55 * (-(t178 + t23 * (t115 - 0.1e1 / 0.16e2) * n3p) * t179 + t86 * (t110 + t23 * (t171 - t73) * n3p))) + t15 * (t10 * (-t174 * (t180 * t17 + 0.2e1 / 0.3e1 * t181) - 0.9e1 / 0.2e1 * t189) + t175 * (-t51 * (-t181 + t180) + t180 * t8)) + t3 * (t187 + t55 * (t5 * (t124 * t183 + t185) - t186) * t15)) - t177 * t11 + t3 * (t3 * (t51 * t109 * (-t191 - t192 + t194) - t196 + t186 * t55 * t23) - 0.15e2 * t38 * t31 + t198) + t48 * t201) * t16 + t206 * (-t149 * t55 * t15 * n3p - t197 * t105 - t205)) + t224;
t92 = t30 * (t30 * t115 + t239 * t59 * t10 + t16 * (t16 * (t16 * (t3 * (t239 * t68 * t6 + t6 * (-t237 + t238) + t38 * t236 * t31) + t55 * (-t184 * (-t109 * (t35 + t8) + t23 * (0.4e1 / 0.3e1 + t118) * n3p) - t10 * (t23 * (t234 - 0.16e2 / 0.15e2) * n3p + t110) * t174)) + t15 * (t10 * (0.72e2 * t17 * t233 * t4 + 0.72e2 * t181 * t107 + t189 * t183) + t4 * (-t237 + t239)) + t3 * (-t187 + t55 * (t5 * (-0.39e2 / 0.2e1 * t46 - 0.90e2 * t124) + t240) * t15) + t5 * (-0.6e1 * t40 * t15 * n3p + t241)) + t6 * (t238 * t11 + 0.21e2 / 0.2e1 * t245) + t3 * (t3 * (-t51 * t109 * (-t191 - 0.90e2 * t55 + t194) + t196 - t192 * t23 * n3p) - t5 * (t242 - 0.6e1 * t173 + t243) + t6 * (-0.15e2 / 0.4e1 * n3pp + 0.57e2 * t133 + 0.255e3 / 0.4e1 * t2 * t170) + t244 * t56) + t109 * (-t191 - 0.81e2 / 0.2e1 * t55 + t194) - t246) + t3 * (-0.21e2 / 0.2e1 * t55 * t15 * n3p + t205 * t51) - t252 + 0.12e2 * t92 * t55 * t15) + t125;
t115 = t45 * t16;
t125 = 0.6e1 * t1;
t140 = 0.1e1 + t43;
t171 = 0.4e1 / 0.3e1 * t8;
t172 = t27 * t23;
t177 = 0.2e1 * t172 * t15;
t180 = t21 * (-t171 + t140) + t10 - t177;
t197 = 0.15e2 / 0.2e1 * t8;
t198 = t66 * (t197 - t175);
t224 = 0.54e2 * t8;
t233 = t51 + t5;
t237 = -t51 + t5;
t238 = t56 * t23;
t239 = 0.18e2 * t8;
t252 = t239 - t184;
t281 = 0.5e1 / 0.18e2 * t8;
t282 = t57 * t17;
t202 = t5 * (t203 * t15 + t202);
t203 = t227 * (t202 - t244);
t283 = t10 * t6;
t284 = t191 * t15 - t193;
t285 = t284 * t2;
t286 = m0 + mp0;
t287 = t286 * t2;
t288 = 0.12e2 * t55;
t289 = t288 * t31 * L0 * t65 * m0 - t287;
t290 = 0.1e1 / 0.32e2;
t290 = n3pp * t290 - 0.3e1 / 0.16e2 * t2 * t170 - t133;
t291 = 0.3e1 / 0.8e1 * t8;
t292 = t23 * t31;
t293 = t292 * n3p;
t294 = t55 * t38;
t295 = t2 * t6;
t296 = t295 * t289;
t297 = 0.6e1 * t2;
t298 = 0.1e1 + t8;
t299 = t293 * t298;
t300 = t78 * t66;
t301 = t227 * t17;
t302 = 48;
t303 = t56 * t182;
t304 = t5 * t15;
t305 = t184 * t8;
t306 = t269 * n3p;
t307 = t88 * t182;
t308 = t66 * t55;
t309 = t18 * t306;
t310 = t170 * t184;
t311 = t250 * t15;
t312 = 0.2e1 * t303;
t313 = t312 * t15;
t314 = t58 * t182;
t315 = t314 * t15;
t316 = t109 * t190;
t317 = t65 * m0 * L0;
t318 = t317 * t5;
t319 = 21;
t320 = t293 * t184;
t321 = 0.27e2 * t80 * t6;
t322 = 0.2e1 * t10;
t323 = t153 * t204;
t324 = t184 * (-t105 * t2 * t289 + t317 * (0.2e1 / 0.9e1 * t323 - 0.4e1 * t306 + t306 * t91)) * t3;
t232 = t232 - t133 - 0.9e1 / 0.16e2 * t2 * t170;
t325 = 0.3e1 / 0.16e2 * t8;
t326 = t46 * t31;
t123 = t23 * t123;
t327 = t287 * t29;
t328 = t317 * t125 * t31 - t327;
t329 = t37 * t2;
t330 = 0.2e1 * t170;
t331 = t134 * t31;
t332 = t314 * t29;
t333 = t59 * n3p;
t334 = t333 * t1;
t335 = 0.1e1 / 0.26e2;
t336 = t306 * t23;
t337 = t71 * t182;
t338 = t334 * t179;
t339 = t125 * t54;
t340 = t17 * t11;
t341 = t340 * t29;
t342 = 0.1e1 / 0.9e1;
t343 = t60 * t182;
t344 = t343 * t29;
t345 = n3p * t184;
t346 = t74 * t182;
t347 = n3pp / 0.14e2;
t348 = t347 - t133 - 0.9e1 / 0.14e2 * t2 * t170;
t349 = t29 * t6;
t350 = t54 * t1;
t328 = t16 * (t3 * (t329 * t328 * (-t239 + t183) + t317 * t66 * (t235 - 0.144e3) * t1) + t317 * (t29 * (-t183 * (-t331 - t8 * (-t23 * (n3pp * t107 - t330 * t2 - t133) + t326) + 0.8e1 / 0.3e1 * t23 * t232) - 0.96e2 * t10 * (-t123 * t232 + t326 * (-t325 + 0.3e1 / 0.8e1))) - t228 * t1 * t32 * t33 * t302)) + t10 * (-t263 * t183 * t2 * t15 * t328 + t317 * (t7 * (t59 * t302 * t1 * n3p - t332) - 0.144e3 * t334 * t8)) + t317 * (t15 * (0.288e3 * t341 * t232 + t339 * t8) + 0.2e1 * t332 - 0.2e1 * t338 - t3 * (t5 * (t336 * t184 * t29 - t337) + (-0.72e2 * t232 + 0.39e2 * t8 * (n3pp * t335 - 0.3e1 / 0.13e2 * t2 * t170 - t133)) * t29 * t15) * t7) + 0.18e2 * t263 * t2 * t15 * t328;
t332 = 0.2e1 * t317;
t135 = (t16 * t328 + t3 * (-0.18e2 * t329 * (-t327 + t317 * t342 * t31 * (0.54e2 * t1 + t230)) + t317 * (t7 * (0.57e2 / 0.2e1 * t66 * t1 - t344) + t20 * t344)) + t317 * (t10 * (-0.144e3 * t66 * t1 * t3 - 0.288e3 * t29 * (t23 * t232 - t326 / 0.16e2)) - t7 * (-t5 * (-t345 * t31 * t29 + t135 * t190 + t346 * t15) - t251 * (t349 * t259 * t348 - t71 * t190)))) * t16 - t332 * (-t15 * (t11 * t29 * t232 * t302 + t350 * t184) + t3 * (t3 * (-t48 * t29 * t204 + t338) + t15 * (t259 * t29 * t348 - t218) + t131 * t182));
t232 = t317 * t55;
t328 = 0.8e1 * t232;
t334 = t328 * t31 - t287;
t335 = t256 - t133;
t338 = -0.2e1 * t335;
t344 = t8 * t179;
t348 = -t344 + t302;
t351 = t305 * t287;
t352 = 0.54e2 * t334;
t353 = t317 * t294;
t354 = 0.18e2 * t334;
t355 = t317 * t300;
t356 = t288 * t66;
t357 = 0.12e2 * t133;
t358 = 0.6e1 * t232 * t31 - t287;
t359 = t317 * t3;
t360 = t59 * t2;
t361 = t360 * (t184 * t358 - t86 * t334);
t174 = ((t16 * (t16 * (t3 * (t353 * t348 + t295 * (t351 - t352) - t354 * t295 * t68) + t317 * (-t179 * (0.5e1 / 0.4e1 * t299 + t5 * (t8 * (t256 - t133 - 0.15e2 / 0.4e1 * t2 * t170) + t338)) + t10 * (t5 * (t335 * t8 + t338) + t293 * (-0.5e1 / 0.8e1 * t8 + 0.5e1 / 0.2e1)) * t302)) + t15 * (t227 * (t351 - t354) + (-0.54e2 * t301 * t334 - 0.48e2 * t355) * t10) + t317 * (t3 * (0.8e1 * t306 * (-0.15e2 / 0.4e1 * t8 + 0.45e2 / 0.4e1) + 0.8e1 * t23 * (-0.12e2 * t304 * t335 - t303) + 0.90e2 * t309) - 0.2e1 * t5 * (-t356 * t15 - t307))) + t3 * (0.2e1 * t318 * (-t316 - t315 - 0.12e2 * t245) + t295 * t174 * (-t287 + 0.38e2 / 0.5e1 * t232 * t31) - t352 * t80 * t6) + t317 * (0.2e1 * t5 * (-t2 * (t170 * t208 + t248) - t249 + t357 + t311) - 0.2e1 * t313 + 0.30e2 * t293 - t91 * (t5 * (-t163 * t190 - t249 + t311 + t357) - t313 + t293 * t208))) * t16 + t361 + t359 * (-t7 * (-t323 + 0.15e2 / 0.2e1 * t306) + t306 * t10 * t175));
t323 = t119 * t9;
t334 = t1 * t7;
t335 = t334 * t317;
t338 = t335 * t31 - t327;
t351 = t211 * t37;
t352 = 0.18e2 * t351;
t354 = t352 * t34;
t361 = t263 * t2;
t362 = t46 * t107;
t363 = 0.1e1 - t3;
t364 = 0.1e1 + t3;
t365 = t317 * t75;
t272 = t272 * t161 + t10 - t177 - t51;
t135 = t30 * (t30 * ((t16 * (t16 * (t3 * (t294 * (-0.60e2 * t8 + 0.120e3) * t65 * m0 * L0 + t296 * (-t239 + 0.27e2) + t296 * t68 * t184) + (0.36e2 * t299 + 0.12e2 * t5 * (t8 * (n3pp * t51 - t297 * t170 - t133) + 0.8e1 * t290) + 0.96e2 * t10 * (t5 * (t290 * t8 - 0.2e1 * t290) + t293 * (t291 - 0.3e1 / 0.2e1))) * t65 * m0 * L0) + t15 * (-t227 * t289 * t252 - (0.120e3 * t300 * L0 * t65 * m0 - 0.27e2 * t301 * t289) * t10) + (t3 * (-t7 * (t23 * (t304 * t290 * t302 - t303) + t306 * (-t305 + 0.27e2)) - 0.108e3 * t309) + 0.2e1 * t5 * (t308 * t175 * t15 - t307)) * t65 * m0 * L0) + t3 * (-0.2e1 * t318 * (t245 * t175 - t315 - t316) - 0.18e2 * t296 + t321 * t289) + t317 * (-t7 * (t5 * (-t133 * t319 + t247 + t249 + t311) + t320 - t200 * t56) + t322 * (t5 * (-t133 * t302 - t2 * (t310 + t248) + t249 + t311) - t313 + 0.54e2 * t293))) * t16 - t324) + t135) + t174;
t174 = (t335 * (t206 * (t87 * t56 * t15 + 0.15e2 * t105 * n3p - t285) + (t16 * (t16 * (t3 * (t10 * t198 + t64 * (t224 - 0.108e3) + t66 * (-t215 + t208)) + t238 * (0.12e2 * t233 * t237 - 0.3e1 * t68)) + t15 * (t10 * (0.108e3 * t70 - 0.108e3 * t54 * (-0.5e1 / 0.24e2 * t8 + 0.5e1 / 0.18e2) + t282 * t184) - 0.54e2 * t70 + 0.54e2 * t54 * (-t281 + 0.5e1 / 0.36e2)) - t211 * (t55 * t252 * t15 + t193)) + t3 * (0.54e2 * t64 - 0.15e2 * t66) - t203 + t283 * (-t153 * t184 + t154 * t208)) * t16) * t279);
t247 = t3 * t6;
t252 = t305 - 0.18e2;
t289 = t227 * (-t79 * t3 + t40);
t290 = 0.18e2 * t46;
t296 = t129 * t51;
t299 = t191 + 0.54e2 * t55;
t300 = 0.2e1 * t15;
t309 = t300 * t182;
t315 = -0.1e1 + t10;
t316 = t204 * t3;
t324 = 0.1e1 / 0.34e2;
t324 = n3pp * t324 - 0.3e1 / 0.17e2 * t2 * t170 - t133;
t335 = t287 * t65;
t366 = t55 * t7 * t31 * L0 * m0 - t335;
t367 = t8 * t183;
t368 = t2 * t366;
t369 = t55 * t23;
t370 = (n3pp * t342 - 0.8e1 / 0.9e1 * t2 * t170 - t133) * t8;
t371 = 0.8e1 * t55 * t31 * L0 * m0 - t335;
t372 = 0.27e2 * t55;
t373 = -0.51e2 * t324;
t374 = t15 * t10;
t375 = 0.18e2 * t55;
t376 = 0.3e1 / 0.83e2;
t377 = -0.249e3 / 0.2e1;
t378 = 0.18e2 * t369 * n3p;
t379 = L0 * m0;
t380 = t379 * t247;
t381 = 0.1e1 / 0.15e2;
t189 = t16 * (-L0 * m0 * n3p * t183 * t298 * t369 + t2 * (t366 * t184 * t5 + 0.18e2 * t371 * t9) + t3 * (t3 * (t368 * t5 * t252 + t369 * (-t367 + 0.144e3) * n3p * m0 * L0) + (0.54e2 * t6 * (0.17e2 / 0.3e1 * t324 + t370) + 0.54e2 * t38 * (-0.5e1 / 0.9e1 * t8 + 0.10e2 / 0.9e1) * t31 + 0.102e3 * t68 * t6 * t324) * m0 * L0)) + t3 * (-0.18e2 * t368 * t304 * t23 + (t7 * (t372 * t15 * n3p - t187) - t192 * n3p * t8 * t15) * m0 * L0) + (-0.2e1 * t5 * (-t221 * t15 * n3p - t241) - 0.2e1 * t59 * (t373 - 0.27e2 * t370) + t374 * (0.306e3 * t17 * t324 * t4 - 0.60e2 * t181 + 0.108e3 * t189)) * m0 * L0;
t192 = 0.2e1 * t379;
t221 = t327 * t65;
t241 = -t221 + 0.17e2 / 0.3e1 * t379 * t1 * t31;
t298 = t259 * t8;
t366 = t379 * t46 * t1;
t368 = t23 * (-t239 + 0.72e2);
t370 = 0.1e1 / 0.18e2;
t370 = n3pp * t370 - 0.4e1 / 0.9e1 * t2 * t170 - t133;
t382 = 0.20e2 / 0.3e1 * t379;
t383 = 0.27e2 * t263 * t370;
t384 = 0.54e2 * t241;
t385 = t345 * t40 * t29;
t386 = 0.12e2 * t1;
t387 = t379 * t5;
t388 = t379 * t3;
t389 = 0.18e2 * t23;
t390 = 0.3e1 * t31;
t391 = t390 * t333;
t392 = t379 * (-0.12e2 * t333 * t31 * t29 + 0.2e1 * t229 + t91 * (t391 * t29 - t229));
t76 = (t16 * (t16 * (t10 * (t368 * t241 * t2 + t366 * (-0.84e2 + t298)) - 0.18e2 * t104 * t379 * t1 - 0.18e2 * t23 * (t8 * (t382 * t1 * t31 - t221) + t241) * t2 + t379 * (0.12e2 * t93 * t76 + 0.108e3 * t75 * (-t37 * t370 * t62 + t40 * (t281 + t73) * n3p) + t46 * t1 * t259)) + t3 * (t192 * (-t23 * t259 * t1 * t15 * n3p - t212) * t5 + (t384 - t239 * (-t221 + 0.14e2 / 0.3e1 * t379 * t1 * t31)) * t15 * t2 + t384 * t80 * t17 * t15) + t379 * (t7 * (-t210 + (-t383 + t173 * (t197 + 0.3e1)) * t29 * t15) - 0.8e1 * t10 * (-t210 + (-t383 + t173 * (-0.9e1 / 0.2e1 * t8 + 0.6e1)) * t29 * t15))) + t10 * (-t384 * t23 * t2 + t366 * t259) + 0.2e1 * t387 * (-t386 * n3p - t223 - t226) + t388 * (-t7 * (t37 * (-0.27e2 * t29 * t370 - t218 + t219) - t220 + t385) + t240 * t40 * t10 * t29) + t389 * t241 * t2) * t16 + 0.18e2 * t122 * t241 * t2 * t315 + t392;
t212 = t382 * t55 * t31 - t335;
t220 = t8 * (-t390 + t1) * (t390 + t1);
t223 = t38 * t31;
t226 = t379 * t55;
t240 = t212 * t5;
t241 = t88 * t17;
t281 = 0.3e1 * t170;
t366 = t10 * t31;
t370 = t388 * t31;
t382 = t2 * t5;
t76 = t30 * ((t16 * t189 + t10 * (t2 * (-t20 * t269 * L0 * m0 * t182 + (-t335 + 0.2e1 / 0.9e1 * L0 * t31 * m0 * (t191 + t375)) * t184 * t5) - t7 * m0 * L0 * (0.27e2 * t369 * n3p - t196) + 0.306e3 * t380 * t324) + 0.2e1 * t379 * (t3 * (-t5 * (t242 + t176 + t243) + t377 * (n3pp * t376 - 0.18e2 / 0.83e2 * t2 * t170 - t133) * t6) - t196 + t378 + t130 * t182 * t15) - (0.18e2 * t342 * L0 * t31 * m0 * t299 - 0.18e2 * t335) * t2 * t5) * t16 - t192 * (t15 * (t10 * (t373 * t4 - 0.18e2 * t188) + t4 * (n3pp * t381 - 0.2e1 / 0.5e1 * t2 * t170 - t133) * t208) + t3 * (t375 * t15 * n3p - t205))) + t76;
t150 = t379 * (t115 * t183 * t170 * t275 + 0.54e2 * t133 * (t16 * (-t247 * t150 + t247 * t21 * (-t20 + t12 + 0.3e1)) + t59 * t10 + 0.3e1 * t59 * (-t112 + t73 + t18) * t21) * t279 + (0.2e1 * t16 * (t16 * (t16 * (t10 * (t46 * t252 + t124 * (t224 - 0.216e3)) + t5 * (t5 * (t290 + 0.72e2 * t124) + t345) + 0.54e2 * t289) + t295 * (0.1e1 - t322) * (0.54e2 * t78 * t15 + t182) - t122 * (t183 * (t296 + t48 * (0.9e1 / 0.2e1 - t8)) + 0.162e3 * t18 * t48)) + t3 * (t3 * (t185 + 0.162e3 * t124) - t227 * (-t5 * (-t299 + t194) + t309)) - t290 - 0.54e2 * t124) + 0.2e1 * t211 * (-0.54e2 * t269 * t315 + t316)) * t1 * t277);
t76 = (t30 * t76 + t15 * (-0.18e2 * t379 * t227 * t170 * t363 * t364 + t21 * (-t240 * t26 * t2 + t379 * (t107 * (-t181 * t7 + t227 * (-t220 + t281)) - 0.3e1 / 0.2e1 * t366 * (-t241 - 0.8e1 / 0.9e1 * t47))) * t183) + t16 * (t21 * (0.18e2 * t80 * (t380 * t170 * t32 * t33 + t240 * t34) - t184 * (t8 * (-t335 + 0.16e2 / 0.3e1 * t226 * t31) + 0.2e1 * t335 - 0.40e2 / 0.3e1 * t226 * t31) * t2 * t5 + 0.6e1 * t388 * (t295 * (-t220 + t310) + t223 * (t14 - 0.8e1))) + 0.54e2 * t370 * (-t58 + 0.4e1 / 0.9e1 * t38 + t58 * t10) + t382 * (-t184 * t371 + t86 * t212))) * t30 + t150;
t150 = t232 * t7 * t31 - t287;
t176 = 0.1e1 / 0.28e2;
t176 = n3pp * t176 - 0.3e1 / 0.14e2 * t2 * t170 - t133;
t181 = 0.25e2;
t185 = t8 * (0.96e2 / 0.25e2 * t232 * t31 - t287);
t188 = 0.27e2 * t150;
t189 = t132 * t8;
t212 = t295 * t68;
t220 = -0.9e1 / 0.25e2;
t224 = (t310 - t248) * t2;
t240 = -t327 + 0.84e2 / 0.25e2 * t317 * t1 * t31;
t242 = t382 * t23;
t243 = t227 * t240;
t252 = t382 * t132;
t279 = n3p * t315;
t290 = t317 * t170;
t299 = 0.18e2 / 0.7e1;
t310 = t211 * t263;
t324 = 0.36e2 / 0.7e1;
t345 = t287 * t5;
t369 = t252 * t16;
t14 = t379 * (0.18e2 * t369 * t277 * t65 * (t21 * (t14 + t140) + t10 - t177 - 0.3e1) + 0.2e1 * t280 * t65 * ((t16 * (t16 * (-t238 * (t183 * (0.3e1 / 0.4e1 + t8) + 0.27e2 * t68) + t3 * (0.4e1 / 0.5e1 * t10 * t198 + t66 * (t215 + 0.18e2) + t64 * (-t302 * t8 + 0.96e2))) + t15 * (t10 * (0.96e2 * t54 * (t325 - t84) - 0.96e2 * t70 + 0.81e2 * t282) - t302 * (t54 * (-0.5e1 / 0.16e2 * t8 - 0.1e1 / 0.8e1) - t70)) - t211 * (t55 * (t239 - 0.81e2) * t15 + t193)) + t283 * (0.18e2 * t154 - 0.81e2 * t153) + t3 * (-t64 * t302 - 0.18e2 * t66) - t227 * (-t372 * t6 + t202)) * t16 + 0.27e2 * t363 * (-0.2e1 / 0.9e1 * t54 - t57) * t15 * t364) * t1);
t193 = (0.7e1 * t2 * (t290 * t299 * t363 * t364 + t16 * (t16 * (-t140 * t290 * t299 - t310 * t286) + t59 * (t359 * t324 * t170 * t6 - t345))) - t30 * (0.12e2 / 0.25e2 * t279 * t317 * t31 * t29 + t21 * (-t243 * t34 * t3 + t317 * (0.12e2 / 0.25e2 * t31 * n3p + 0.6e1 / 0.25e2 * t242 * t132 + 0.12e2 / 0.25e2 * t43 * n3p * t31) * t29) - t243 * t3 + t273 * (-t295 * t161 * t240 + 0.3e1 / 0.25e2 * t365 * (-t293 * t7 - t252))) * t181) * t16 * t5;
t202 = t57 * t4;
t215 = 0.9e1 / 0.4e1 * t226 * t31;
t240 = -t335 + t215;
t243 = t273 * t4;
t252 = -t23 * t16 + t122;
t325 = t2 ^ 2;
t371 = t379 * t1;
t373 = t5 * t30;
t376 = t140 * t21;
t377 = -0.1e1 + t376 + t10 - t177;
t380 = t27 * t6 + t59;
t345 = t345 * t16;
t76 = t67 * (t183 * t318 * t2 * t16 * (t180 * t132 * t278 + t170 * t272) + (t30 * t135 + t15 * (-t365 * t2 * t170 * t363 * t364 * t302 + t21 * (-t361 * t338 * t161 + (t341 * t2 * t65 * t7 * t170 + t158 * t65 * (t48 * (0.24e2 / 0.7e1 - t8) - 0.8e1 / 0.7e1 * t129) * t31) * m0 * L0) * t183) + t16 * (t21 * (-t354 * t338 + t317 * (0.54e2 * t46 * (-0.2e1 / 0.9e1 * t8 + 0.4e1 / 0.9e1) + 0.54e2 * t124 * (-0.8e1 / 0.9e1 - t8) + t10 * (t323 - t5 * (t117 + n3p) + t106) * t302) * t29 * t31) - t352 * t338 + t317 * (-t302 * (-t124 + t159) + 0.144e3 * t10 * (-t124 + t362)) * t29 * t31)) * t30 + t174) + t76;
t14 = t67 * t76 + t276 * ((t16 * (t16 * (t3 * (t295 * (t185 * t181 + t188) + t353 * (t175 * t8 - 0.60e2) + t212 * t184 * t150) + t318 * (t175 * (0.14e2 / 0.5e1 * t133 + t2 * (t170 * t61 - t189) - n3pp / 0.10e2) - 0.84e2 * t43 * t176)) + t15 * (-t181 * (t227 * (t150 * t220 - t185) + 0.6e1 / 0.5e1 * t355) - 0.27e2 * t10 * (-0.20e2 / 0.9e1 * t355 - t301 * t150)) - t317 * t26 * t7 * (-t304 * t259 * t176 - t303)) + t3 * (t353 * t175 - t295 * t179 * (-t287 + 0.9e1 / 0.2e1 * t232 * t31) + t321 * t150) + 0.2e1 * t317 * (t10 * (t5 * (t133 * t259 + t224 - t249 + t311) - t313) - t5 * (t133 * t208 + t224 - t249) + t303 * t139 * t15)) * t16 + t227 * t184 * (t15 * (t10 * t150 - 0.2e1 / 0.3e1 * t358) - 0.2e1 / 0.9e1 * t316 * t232)) + t14 + t193;
t61 = t67 ^ 2;
t76 = t61 ^ 2;
t135 = t67 * t76;
t158 = t67 * t61;
t39 = (0.12e2 * (t30 * (t30 * t42 + t15 * (-0.6e1 * t88 * (-0.1e1 / 0.12e2 + t10) + 0.12e2 * t21 * (-t3 * (-t3 * (t53 + t83) + t49) - t47 * t84 + t48 * (t8 * t85 - t51) * t4)) + t16 * (t21 * (t3 * (-t39 + t58 * (0.19e2 / 0.2e1 * t8 - 0.18e2)) - 0.6e1 * t80 * (t77 - t79) - 0.3e1 * t45 * t1 * t34) + t3 * (0.25e2 / 0.2e1 * t58 + 0.3e1 * t38 - t86 * t58) + t45 * (-0.3e1 + t87) * t1)) - t15 * (t7 * (t101 * t29 + t98) + 0.12e2 * t21 * (t29 * (-t95 * (-t70 + t54 * (-t89 + 0.2e1 / 0.7e1)) + t97 * t10) + t98 * t17)) + t16 * (t21 * ((t71 * (0.1e1 - t91) * t4 + 0.2e1 * t93) * t33 * t32 * t6 - 0.7e1 * t75 * t90) + t74 * (-0.12e2 * t10 + 0.3e1) + t75 * (t87 * t66 - 0.7e1 * t99))) * t30 + 0.12e2 * t63 * t102) * t67;
t39 = t30 * t31 * t67 * (t39 + t183 * ((t30 * t52 - t15 * (0.4e1 / 0.3e1 * t154 * t100 + 0.4e1 / 0.3e1 * t153 * t167 + t21 * ((t94 * t165 + t3 * (0.2e1 * t116 * t3 - t147)) * t3 + t147 * t84) * t7) + t16 * (t21 * (t2 * (t164 * t6 * t32 * t33 * t11 + t144 * (t8 * t94 - 0.7e1 / 0.3e1)) - t111 - t3 * (-0.7e1 / 0.3e1 * t162 * t3 + t163 * t32 * t33)) + 0.7e1 / 0.3e1 * t10 * t166 - t120 + t109 * t94 + t141 * (t91 - 0.3e1))) * t30 + t113 * t29 * t103) * t65);
t42 = t379 * t135;
t39 = t42 * (-t7 * (t92 * t276 + t31 * (t115 * t31 * t275 * t184 - 0.18e2 * t30 * (-(-0.2e1 * t3 * (-t3 * (t47 * t73 - t83) + t49) - 0.2e1 * t47 * t107 + 0.2e1 * t88 * t257) * t15 * t21 - t16 * (-t21 * (t3 * (-t211 * (t79 + t77) + t58 * (-t108 - 0.3e1) + t38 * (-t199 + 0.2e1 / 0.3e1)) + t45 * t51 * t1 * t34) - t2 * (-0.3e1 * t271 + t270) - t3 * (-t38 * t73 + 0.29e2 / 0.12e2 * t58 - t261 * t3)) - t60 * (-0.5e1 / 0.12e2 + t10))) + t125 * (0.3e1 * t27 * (t160 * t3 - t25 * (t5 * (-t120 + t128) - t127)) + t22 * (t5 * (-0.3e1 / 0.4e1 * n3p + t106 * t5) + t104 - t124 + t156) + t137) * t278) + t39);
t49 = 0.7e1 * t382 * t16;
t52 = (t21 * (-t20 + t140) + t10 - t177) * t276;
t63 = t34 * t161;
t77 = t44 * t30;
t79 = t373 * t16;
t83 = t172 * t15;
t85 = t61 * (0.1e1 + t52 - 0.2e1 * t16 * (t63 * t16 + t77 * t252) - 0.2e1 * t10 + t172 * t7 * t15) + t10 + t376 - 0.1e1 - 0.2e1 * t83 - 0.2e1 * (t275 * t29 + t79 * t380) * t65 * t67;
t89 = 0.1e1 - t276;
t92 = t379 * t67;
t108 = t92 * t30;
t120 = t287 + t108 * (t170 * t61 + t132);
t141 = -0.2e1 + t276;
t144 = t4 * t29;
t141 = t61 * (t10 * t141 + t21 * (t43 * t141 - 0.2e1 * t146 * t276 + 0.2e1 * t77 * t23 + t8 - 0.2e1) + 0.1e1 - t300 * t27 * (t30 * (t23 * t30 + t44) - 0.2e1 * t23)) + t10 + t376 - 0.1e1 - 0.2e1 * t83 - 0.2e1 * (t3 * (t21 * (t144 * t34 + t263 * t30) + t144) + t273 * (-t51 * (-t37 * t30 + t349) + t283 * t29)) * t65 * t67;
t153 = -t122 * t6 + t16 * t4;
t156 = t65 * t29;
t85 = 0.1e1 / t85;
t160 = 0.1e1 / t30;
t163 = 0.1e1 / t67;
t172 = 0.1e1 / J__2;
t174 = 1 / L0;
t175 = 1 / J__1;
t176 = 0.1e1 / m0;
t141 = 0.1e1 / t141;
t177 = t176 ^ 2;
t181 = t163 ^ 2;
t163 = t163 * t181;
t185 = (t174 ^ 2);
t193 = t160 ^ 2;
t220 = t193 ^ 2;
t160 = t160 * t193;
t12 = ((t67 * t14 + t373 * (-t371 * t30 * (t84 * t279 + t21 * (n3p * t140 * t84 - t202 * t34) - t202 + t274 * (-t54 * t84 * t3 - t56 * t161)) * t302 - 0.16e2 * t2 * (t10 * t240 + t21 * (t43 * t240 - t335 + t379 * (0.9e1 / 0.4e1 * t55 * t31 - 0.3e1 / 0.8e1 * t263 * t3 * t132) - 0.7e1 / 0.16e2 * t335 * t8) - t215 - t243 * (0.3e1 / 0.16e2 * t387 * t132 + t247 * t240) + 0.13e2 / 0.16e2 * t335)) * t16 + 0.7e1 * t21 * t65 * t8 * t29 * t325 * t286 * t252 + 0.18e2 * t133 * t379 * (0.3e1 * t16 * (t247 * t315 + t25 * (t18 + t73 + 0.8e1 / 0.9e1 * t8) * t4) - t59 * t363 * t364 + t247 * (t143 + t12 + 0.3e1) * t22) * t280) * t67 - t49 * (t317 * t299 * t377 * t132 * t276 - t345 * t380) + t39) * t220 * t85 * t181 ^ 2 * t177 * t185;
t14 = t124 + t46;
t39 = 0.2e1 * t46;
t85 = t46 * t73;
t140 = -t124 - t85;
t143 = 0.3e1 / 0.4e1 * t2 * t170;
t193 = t256 - t143 - t133;
t215 = t23 * t193;
t224 = -0.2e1 * t193;
t240 = t110 + t23 * (t342 * t8 - 0.4e1 / 0.9e1) * n3p;
t273 = t73 * n3p;
t274 = t273 * t23;
t276 = t274 - t109;
t278 = t72 * t6;
t280 = t71 * t4;
t36 = -t36 + 0.9e1 / 0.2e1;
t169 = t169 * t56;
t283 = t40 * t5;
t69 = t69 * t10;
t313 = t193 * t8;
t111 = t111 * t31;
t316 = 0.3e1 / 0.2e1 - t8;
t321 = t58 * t316;
t341 = t68 * t58;
t352 = 0.2e1 * t346;
t353 = t88 * t146;
t355 = t300 * t337;
t383 = t58 * t1;
t201 = 0.2e1 * t201;
t384 = t122 * t31;
t387 = t23 * t2;
t392 = t387 * t150;
t242 = t242 * t150;
t393 = 0.3e1 / 0.8e1 * t2 * t170;
t394 = t256 - t393 - t133;
t395 = t37 * t394;
t396 = t232 * n3p;
t397 = 0.32e2 / 0.3e1;
t398 = t263 * t394;
t399 = t317 * t78;
t400 = 0.2e1 / 0.3e1 * t47;
t401 = 0.18e2 * t38;
t41 = t16 * (t16 * (t16 * (t3 * (-t183 * t5 * (-t70 + t54) - 0.54e2 * t58 + 0.18e2 * t54 * t9 - 0.18e2 * t341) + t261 * (-t183 * t41 + 0.27e2 * t43)) + t15 * (-t183 * (t51 * (t47 + t88) - t88 * t8) + 0.54e2 * t10 * (t400 - t241)) + 0.2e1 * t26 * (-0.27e2 * t78 * t15 + t182) * t2) + t2 * (t201 - 0.54e2 * t271) + t3 * (t58 * t183 + t401 - t211 * (-t5 * (-t191 + t372 + t194) + t309))) - t227 * t3 * (t204 + 0.18e2 * t384);
t261 = t65 * t275;
t72 = t379 * (-t261 * t369 + t31 * (t22 * (t10 * (-t278 * t32 * t33 - 0.3e1 / 0.2e1 * t29 * t240) + 0.2e1 * t29 * (t178 + t23 * (t199 - 0.1e1 / 0.12e2) * n3p) + 0.2e1 * t72 * t138 * t6) + t374 * (t121 * t75 - t280) + 0.3e1 * t16 * (t3 * (t71 * (0.2e1 / 0.3e1 - t10) * t6 - t136 * t276) + t25 * (-t3 * (-t29 * (t5 * t140 + t121) + t72 * t4 * t17) + t93 * t107 * t17 + 0.2e1 / 0.3e1 * t71 * t4 * t146))) * t135);
t121 = t317 * t31;
t82 = 0.4e1 / 0.3e1 * t121 * (t22 * ((t3 * (t198 * t3 / 0.5e1 - t169) + t66 * t36 + t64 * (0.8e1 * t8 - 0.16e2)) * t3 + t238 * t7 * t233 * t237) - t374 * (-t57 - 0.3e1 / 0.2e1 * t54) + 0.3e1 * t16 * (t3 * (-t6 * (t202 + n3p) + 0.8e1 / 0.3e1 * t64 + t69) - t25 * (t2 * (t145 * t3 * t146 + 0.8e1 / 0.3e1 * t283) + t10 * (-t282 + t54 * t82 - 0.16e2 / 0.3e1 * t70) + t54 * t8 - t54 * t51))) * t61;
t82 = t16 * (t16 * (t16 * (-t7 * t5 * (-t242 + t396) + t10 * (t5 * (t328 * n3p - t242) - t7 * (t104 * t232 - t392)) - t392 + t317 * (t3 * (-(t40 * (t291 - 0.9e1 / 0.16e2) * n3p - t395 * t62) * t397 + 0.2e1 * t207) + 0.16e2 / 0.3e1 * t104 * t55)) + t3 * (0.3e1 * t80 * t17 * t150 * t15 + (-t235 + 0.3e1) * t150 * t15 * t2 - 0.4e1 / 0.9e1 * t318 * (-t378 * t15 - t195)) + t317 * t15 * (t397 * (t173 * (-t291 + 0.3e1 / 0.16e2) + t398) - 0.64e2 / 0.3e1 * t10 * (t398 + t173 * (-0.9e1 / 0.32e2 * t8 + 0.3e1 / 0.8e1)))) + t10 * (-t399 * t7 * n3p - 0.3e1 * t392) + t317 * (t31 * (0.4e1 / 0.9e1 * t203 + 0.6e1 * t228) - t3 * (0.3e1 / 0.8e1 * t40 * n3p + t395) * t397)) - t3 * (-t80 * t150 * t15 + t317 * (-0.2e1 * t105 * n3p - 0.2e1 / 0.9e1 * t285) * t31) + t82;
t45 = t268 * t45 * t3;
t105 = t340 * t31;
t135 = t56 * t37;
t136 = -t291 + 0.3e1 / 0.4e1;
t146 = 0.2e1 / 0.3e1 * t29;
t150 = t256 + t393 - t133;
t173 = 0.12e2 * t8;
t178 = 0.4e1 / 0.3e1 * t66;
t203 = t55 * t3;
t233 = t150 * t183;
t237 = t55 * t15;
t182 = t238 * t182 * t15;
t238 = t256 - t133 + 0.11e2 / 0.8e1 * t2 * t170;
t242 = t56 * t190;
t271 = t135 * t190;
t150 = (t16 * (t16 * (t10 * (t326 * (t197 - 0.15e2) + t23 * (-t173 + t302) * t150) + t203 * (t184 * (t8 * (-t64 + t178) + 0.2e1 * t64 - 0.2e1 * t66) - 0.6e1 * t68 * t66) + t23 * (-0.12e2 * t150 + t239 * (t256 - t133 - 0.23e2 / 0.12e2 * t2 * t170)) - t326 * t216) + t3 * (t3 * (-0.18e2 * t78 * t15 * (t58 + t38) + t314 + t333 * t55 * t179) + t15 * (t233 - t298 * (t256 - t133 - 0.17e2 / 0.28e2 * t2 * t170)) + t5 * (-t303 - 0.15e2 * t336)) - t314 * t51 + t237 * (t70 * t184 + t54 * (t173 - 0.6e1)) + t233 * t24 * t17) + t3 * (t3 * (-t233 * t23 + 0.15e2 / 0.2e1 * t326) + t51 * t64 * (t191 - t375 - t194) + t343 + t356) + t5 * (t390 * n3p - t182 - t271) - t251 * (-0.12e2 * t238 * t6 - t242) - t375 * t228) * t16 + t206 * (t15 * (-t2 * (t170 * t260 + t248) - t249 + t357) + t3 * (-t48 * t204 - t333 * t288) + t250 + t374 * t179 * t150);
t173 = t382 * t338;
t191 = t317 * t23;
t194 = t394 * t6;
t197 = 0.18e2 * t1;
t206 = t1 * n3p;
t125 = t125 * t15;
t35 = (t16 * (t10 * (t191 * (-t344 + 0.96e2) * t1 * n3p + t173 * (0.27e2 * t8 - 0.54e2)) + t183 * t8 * (t191 * t1 * n3p - t382 * (t121 * t35 * t1 - t327)) + t317 * (t349 * t11 * t32 * t33 * t394 * t302 - t214 * n3p - 0.96e2 * t75 * (t223 * t136 - t194 * t316)) + 0.27e2 * t173) + t3 * (-0.54e2 * t387 * t304 * t338 + t317 * (-t7 * (-t197 * t15 * n3p - t187 * t29) - 0.84e2 * t206 * t8 * t15)) + t317 * (t7 * (t5 * (-t385 * t15 - t337 * t4) + t59 * (-t344 + 0.12e2) * t394 * t29) + t374 * (0.72e2 * t154 * t1 * t17 + 0.144e3 * t29 * (t17 * t394 * t4 + t134 * t40))));
t187 = -t253 * t2 * t170 - t133 + t347;
t191 = t379 * t145 * t31 - t335;
t214 = t329 * t191;
t216 = t379 * t308;
t223 = t216 - t214;
t228 = t133 * t8;
t233 = t379 * t245;
t239 = t18 * t15;
t260 = 0.3e1 / 0.2e1 * t31;
t285 = n3pp * t253 - 0.2e1 / 0.7e1 * t2 * t170 - t133;
t68 = (t16 * (t16 * (t259 * t379 * (t10 * (-t123 * t187 - t255 * t31) + t23 * (t228 + t187) - t326 * t253) + t3 * (-t183 * t223 * t8 + 0.18e2 * t216 * t68 - 0.72e2 * t214 + 0.54e2 * t216)) + t15 * (t183 * (-t5 * (t295 * t191 + t379 * t294) + t233 * t51) - (-0.72e2 * t155 * t233 - 0.72e2 * t361 * t191 + 0.72e2 * t233) * t10) - t388 * (t7 * (t262 * t15 * (-t8 * (n3pp * t264 - 0.2e1 / 0.21e2 * t2 * t170 - t133) + t187) + t5 * (-t303 - 0.3e1 * t336)) + 0.126e3 * t239 * t187)) - t183 * t223 * t3 + t379 * (t10 * (0.126e3 * t23 * t187 - 0.126e3 * t265 * t31 + 0.54e2 * t308 * t3) - t7 * (t5 * (-t260 * n3p - t182 - t271) - t251 * (-0.21e2 / 0.2e1 * t285 * t6 - t242)))) * t16 - t192 * t3 * (t15 * (t2 * (t281 - t248) + 0.21e2 / 0.2e1 * t133 - t249) + t250 + t122 * (t3 * t319 * t187 - t245 * t184));
t155 = t23 * n3p;
t182 = 0.3e1 * t15;
t187 = t42 * t31;
t53 = t187 * (-t65 * (t15 * (t88 * t146 * t10 - 0.2e1 * t21 * (-t3 * (t74 * t5 - t75 * (t53 - t241)) - t146 * (-t353 + 0.3e1 / 0.8e1 * t47))) + t16 * (t21 * (t75 * (0.4e1 / 0.3e1 * t38 * t136 + 0.4e1 / 0.3e1 * t321 + 0.2e1 / 0.3e1 * t341) - t63 * t131) - t131 * t161 + t75 * (-0.4e1 / 0.3e1 * t58 - t38 / 0.2e1 + t322 * t58))) + t67 * (t16 * (t21 * (t5 * (t5 * (-t159 - 0.13e2 / 0.12e2 * t124) + t119) + t10 * (t323 - t106 + t5 * (t117 - n3p)) + t289) - t159 + t3 * (t3 * (t134 + 0.3e1 * t124) - t135) - t124 * t95) - t122 * t48 * (-t95 + t10) + t300 * (t2 * (t270 * t6 - 0.3e1 / 0.2e1 * t105) + t3 * (-t45 - t296 + t48 * (0.37e2 / 0.24e2 * t8 - 0.3e1 / 0.2e1))) * t21));
t13 = t379 * (t67 * (t158 * t150 * t7 - t197 * t65 * (t16 * (t21 * (t6 * (0.2e1 * t57 * t138 - t54 * t73) + t152 - t10 * (-t8 * (t152 - t274) + 0.4e1 / 0.3e1 * t109 - 0.4e1 / 0.3e1 * t155 + t142)) + t10 * (t152 - t155) + t151 - t152 + t274) + t122 * (t279 * t73 - t202) + t182 * ((t3 * (0.4e1 / 0.3e1 * t116 * t3 - t147) + t5 * (-0.4e1 / 0.9e1 * t124 - 0.2e1 / 0.9e1 * t46) + t273) * t3 + t148) * t21)) + t297 * t132 * (t23 * t13 * t22 - t122 * t315 - 0.3e1 * t16 * (t27 * t15 * (-t112 + t19) - t23 * (-t73 + t10))));
t19 = 0.7e1 / 0.8e1;
t74 = -t51 * t2 * t170 - t133 + t256;
t112 = -0.2e1 * t74;
t134 = t337 * t15;
t4 = t229 * t4;
t136 = 0.3e1 * t306 * t29;
t11 = t16 * (t16 * (t16 * (t3 * (-t1 * (t58 * (-0.4e1 / 0.5e1 - t8) + t38 * (-t234 + 0.8e1 / 0.15e2)) * t208 - 0.12e2 * t75 * (t5 * (t74 * t8 + t112) + t293 * (-t258 + t51))) + 0.6e1 * t29 * (t5 * (t8 * (t256 - t133 - 0.17e2 / 0.4e1 * t2 * t170) + t112) + t293 * (t81 + t84)) + 0.6e1 * t383 * t32 * t33 * t11) + t15 * (-t10 * (t186 * t157 + t197 * (-t400 - t241)) + t88 * t1 * (t209 + 0.6e1)) + t3 * (t352 + (t213 * t5 * t74 + (-t235 - 0.9e1 / 0.2e1) * t31 * n3p) * t29 * t15) + t5 * (-t307 * t51 * t29 - t125 * t66)) + t3 * (t3 * (t5 * (-t266 * t74 - t218 + t219) - t355 + t292 * t186 * t29) + t5 * (t200 * t58 * t29 + t339) + t48 * (t225 - 0.18e2 * t268)) + t5 * (t218 * t51 + 0.6e1 * t29 * t238) + t134 - t200 * t71 * t8 + t40 * (0.18e2 * t71 * t11 - 0.3e1 * t54 * t29)) + t3 * (-t4 + t136);
t74 = t256 - t133 - 0.7e1 / 0.4e1 * t2 * t170;
t81 = t6 * (0.12e2 * t304 * t74 + t303);
t88 = t121 * t145;
t112 = t184 * (-t88 - t287);
t138 = t56 * t204;
t142 = 0.18e2 * t80;
t91 = t317 * (-0.2e1 * t138 + 0.2e1 * t391 - t91 * (-t260 * t333 - t138));
t40 = (t16 * (t16 * (t10 * (t399 * t348 * n3p - t368 * t325 * t286) + t317 * (t1 * (-t44 * n3p * t179 + t104 * t266) + t3 * (-t302 * (-t37 * t74 * t62 + t40 * (t8 * t19 - 0.3e1 / 0.8e1) * n3p) + 0.6e1 * t207)) + t387 * (t188 * t8 + 0.18e2 * t287)) + t3 * (-0.63e2 * t2 * (-t287 + 0.12e2 / 0.7e1 * t232 * t31) * t15 * t8 - 0.54e2 * t15 * t325 * t286 - 0.2e1 * t318 * (-t237 * t213 * n3p - t195) - 0.54e2 * t239 * t286 * t325) + t317 * (-t7 * (-t81 + t333 * (0.21e2 / 0.2e1 * t8 - 0.3e1 / 0.2e1) * t31) + 0.8e1 * t10 * (-t81 + t333 * (0.9e1 / 0.4e1 * t8 - 0.3e1) * t31))) + t10 * (-t399 * t179 * n3p + 0.54e2 * t23 * t325 * t286) + 0.2e1 * t318 * (0.6e1 * t55 * n3p + t64 * t190 + t222) + t359 * (t7 * (t37 * (t2 * (t170 * t319 - t248) - t249 + t357 + t311) - t312 * t59 - 0.3e1 / 0.2e1 * t40 * n3p) + t86 * t40 * n3p) + t112 * t387) * t16 + t91 - t122 * t2 * (t142 * t286 + t112);
t55 = t371 * t31;
t62 = t221 - t55;
t74 = n3pp / 0.12e2 - t133 - t107 * t2 * t170;
t81 = -t221 + 0.8e1 / 0.3e1 * t55;
t91 = t379 * t350;
t104 = t121 * t164;
t112 = t104 - t287;
t138 = t112 * t387;
t4 = t40 * t67 + (t16 * (t16 * (t3 * (t183 * t5 * (-t361 * t81 + t91) - 0.18e2 * t91 * t9 - 0.54e2 * t295 * t62 - 0.18e2 * t212 * t62) + t379 * (-0.6e1 * t5 * (-t228 - 0.6e1 * t74) + 0.6e1 * t293 + t10 * (t111 + t5 * (t74 * t8 - 0.2e1 * t74)) * t183) * t29) + t15 * (t183 * (-t51 * (t227 * t62 - t371 * t47) - t227 * t81 * t8) - (0.54e2 * t301 * t62 + 0.54e2 * t400 * t371) * t10) + t388 * (t7 * ((-t36 * t31 * n3p - t389 * t5 * t74) * t29 * t15 - t346) - t306 * t86 * t17 * t29)) + t3 * (-t401 * t371 - t295 * t183 * (-t221 + 0.2e1 / 0.3e1 * t55) - 0.54e2 * t80 * t62 * t6) + 0.2e1 * t379 * (-t10 * (-t355 + t5 * (-0.18e2 * t29 * t74 - t218 + t219) - t320 * t29) + t5 * (-t218 - 0.21e2 / 0.2e1 * t29 * t285) - t134 * t139 - 0.3e1 * t293 * t29)) * t16 - t142 * t59 * t62 + t379 * (t269 * (0.12e2 * t280 - 0.6e1 * t93) - 0.2e1 * t3 * (-t4 - t136));
t4 = (t67 * t4 + t15 * (-t211 * (t10 * t112 - t104 + 0.2e1 / 0.3e1 * t287) * t184 + 0.27e2 * t21 * (t3 * (-t112 * t2 + t5 * (-0.4e1 / 0.9e1 * t396 * t23 + 0.4e1 / 0.27e2 * t382 * t358) - t80 * t112 * t17) + t361 * t317 * t132 * (-0.8e1 / 0.9e1 * t10 + 0.4e1 / 0.9e1))) + t16 * (t21 * (t10 * (t399 * t236 * n3p + t138 * (t305 - t183)) + t379 * (-0.12e2 * t351 * t34 * t65 * t132 + 0.6e1 * t78 * n3p * t65) + t387 * (t112 * t184 - 0.14e2 * t287 * t8)) + t3 * (t3 * (0.6e1 * t399 * n3p + 0.27e2 * t138) - 0.12e2 * t329 * t317 * t132) - 0.6e1 * t399 * n3p - 0.6e1 * t387 * (t88 - t287))) * t67;
t4 = t302 * t187 * (t65 * (-t15 * (t57 * t96 + t101) + t16 * (t21 * ((t3 * (t198 * t3 * t381 - t169) - 0.7e1 / 0.4e1 * t90) * t3 + t169 * t84) + t3 * (-0.7e1 / 0.4e1 * t99 + t69) - t168 * t56) - t182 * (t2 * (0.3e1 / 0.4e1 * t203 * t17 + t283 * t95) + t10 * (t97 - t282) + t54 * (t258 - t107)) * t21) + t67 * (t15 * (t75 * n3p * t100 + t280 * t167) + t16 * (t21 * (t29 * (t19 * (t110 + t155 * (t254 - 0.4e1 / 0.7e1)) - 0.7e1 / 0.4e1 * t162 * t10) + t98 * t33 * t32 * t6) + t29 * (t19 * (-t109 + 0.3e1 / 0.7e1 * t155) - 0.7e1 / 0.4e1 * t10 * t166) + t278 * (-t149 + 0.9e1 / 0.4e1)) + t182 * (t280 * t17 * t167 + t75 * (t18 * t119 + t94 * t165)) * t21)) + t4 + t379 * (0.6e1 * t115 * t377 * t132 + t7 * (0.6e1 * t60 * t1 * t315 - 0.3e1 / 0.2e1 * t269 * t93 + t11) * t76);
t9 = t124 - t46;
t11 = 0.2e1 / 0.3e1 * t46;
t19 = t16 * t5;
t32 = -t124 - t39;
t33 = -t335 + 0.10e2 / 0.3e1 * t226 * t31;
t36 = 0.6e1 * t379;
t40 = t121 * t386;
t55 = -t327 + t40;
t40 = 0.2e1 * t382 * (-t40 + t10 * t55 + t21 * (t43 * t55 - t327 + t379 * (-0.3e1 * t247 * t44 * t65 * t132 + t386 * t31 * t65) - 0.7e1 * t327 * t8) - t243 * (t247 * t55 + 0.3e1 / 0.2e1 * t317 * t44 * t132) + 0.3e1 * t327) * t16 * t67;
t9 = 0.72e2 * t379 * t31 * (t15 * (t48 * t3 * (-0.5e1 / 0.4e1 + t10) * t73 + 0.2e1 * t21 * (t51 * t2 * (t78 * t6 + t105) + t3 * (-t129 * t73 + t48 * t257 - t45))) + t16 * (t21 * (-t73 * t9 + t8 * (-t124 * t50 - t362) + t3 * (t3 * (-t73 * t8 * t9 + t113 * t23 - t11) - t135 * t34)) - t362 + t3 * (t3 * (-t124 + t85) - t135) + 0.5e1 / 0.12e2 * t124)) * t76;
t9 = t302 * t42 * t2 * t170 * (t156 * t102 - t103 * t67) + t61 * (t67 * (t16 * (t16 * (-t304 * (-t26 * t2 * t338 + t121 * (0.11e2 / 0.6e1 * t64 - 0.2e1 / 0.3e1 * t66 + t178 * t10) * t29) * t183 + 0.18e2 * t19 * (-t63 * t338 * t2 + 0.11e2 / 0.3e1 * t365 * t31 * (-t70 + t54 * (-0.4e1 / 0.11e2 * t8 + 0.8e1 / 0.11e2)))) - 0.12e2 * t365 * (-t58 + 0.2e1 * t38) * t31 + t173 * (t184 - t86)) + t290 * t360 * t266) + t15 * (t36 * t211 * t170 * t363 * t364 + t21 * (t3 * (-t310 * t33 + t379 * (t31 * (-t129 * t7 - 0.3e1 * t48) - (t132 - t330) * t2 * t8) * t107) - t51 * t2 * (t379 * t340 * t170 - t263 * t33)) * t183) + t16 * (t21 * (-0.6e1 * t379 * (-t387 * (t189 + t170) - 0.2e1 * t326 + t366 * (t14 * t7 + t32 * t8)) - t354 * t33) - 0.18e2 * t3 * (t329 * t33 + t370 * (-t124 - t11)) + t36 * t32 * t31)) + 0.7e1 * t19 * t261 * t286 * t325 + t40 - t9;
t11 = t252 * t67;
t19 = t379 * t170;
t8 = t108 * t179 * (t67 * (t67 * (t22 * (t5 * (-t215 * t7 * t5 + (t20 - 0.3e1 / 0.2e1) * t31 * n3p) + t10 * (-t123 * t193 + t126 * t31) + t215) - t24 * t193 - 0.3e1 * t27 * (-t3 * (-t331 + t215) + t25 * (t256 - t143 + t5 * (t224 * t5 - t293) - t133 + t18 * t193))) + (0.9e1 / 0.2e1 * t16 * (t10 * t276 + t21 * (t10 * t240 - t109 + t114 + t23 * (t342 - 0.4e1 / 0.9e1 * t8) * n3p)) - 0.9e1 / 0.2e1 * t122 * (t342 * t10 * n3p + (0.2e1 * (-t199 + t107) * n3p + 0.4e1 / 0.3e1 * t10 * t116 - 0.2e1 * t117) * t21) - 0.3e1 / 0.2e1 * t109 * t16 * t61 * t180) * t65 * t1) + 0.3e1 / 0.4e1 * (t22 * (t8 * (0.4e1 / 0.3e1 * t46 + t106) + t10 * (-t8 * t14 + t106 + t39) - t124 - t46) + t137 - 0.3e1 * t27 * (-t140 * t3 + t25 * (t5 * (t128 - 0.2e1 / 0.3e1 * t23 * n3p) - t127))) * t31 * t76 + 0.3e1 / 0.4e1 * t133 * t28);
t8 = t67 * t277 * (-t184 * (t7 * t72 + t82 * t61 - 0.2e1 / 0.9e1 * t92 * (t1 * t41 - t61 * (t16 * (t16 * (t16 * (t29 * (t302 * (t5 * (t313 - 0.3e1 / 0.4e1 * t193) + t293 * (t118 - 0.1e1 / 0.8e1)) - t10 * (t111 + t5 * (t313 + t224)) * t183) - t3 * (0.18e2 * t38 * (-t171 + 0.8e1 / 0.3e1) + 0.18e2 * t321 + t341 * t184) * t1) + t3 * (0.27e2 * t122 * t1 * (0.16e2 / 0.9e1 * t47 - t241) + ((-t367 + 0.18e2) * t31 * n3p + 0.72e2 * t215 * t5) * t29 * t15 + t352) + 0.18e2 * t15 * (-t1 * (0.4e1 / 0.3e1 * t47 - t353) + t93 * t31 * t17)) + t3 * (t3 * (-0.27e2 * t383 * t3 + t5 * (-t183 * t29 * t193 - t218 + t219) - 0.18e2 * t293 * t29 - t355) - 0.18e2 * t1 * (-t58 - 0.4e1 / 0.3e1 * t38)) + t201 * t71) + t3 * (t306 * t87 * t29 + t280 * (-t384 * t184 - t204))))) + t8);
t14 = t11 * t29 + t380 * t65;
t17 = t61 * (t52 - 0.2e1 * t272) + t10 + t376 - 0.1e1 - 0.2e1 * t67 * (t79 * t14 + t156 * t275) - 0.2e1 * t83;
t17 = 0.1e1 / t17;
t1 = ((t30 * (t30 * (t61 * (t67 * ((t16 * t35 + t10 * (0.27e2 * t382 * (-t327 + t121 * (-0.2e1 / 0.27e2 * t230 + t334)) + t317 * (t7 * (-t196 * t29 - t206 * t389) + t309 * t130 * t29) + 0.144e3 * t194 * t365) - t7 * t317 * (t3 * (t5 * (-t131 * t190 - t210 * t15 - t217 * t184) + t244 * t71 + t349 * t179 * t394) + t109 * (-0.9e1 / 0.2e1 * t1 - t230 + t231 * t15) - t267 * t23 - t246 * t29)) * t16 + t332 * (t3 * (-t125 * n3p - t205 * t29) - t280 * t284 + t374 * (t144 * t179 * t394 + t386 * t154))) + t68) + 0.72e2 * t53 + t13) + t4) + t9) * t30 + t49 * (-t324 * t19 * t158 * (t29 * t272 * t67 + t261) - t345 * (t156 * t380 + t11) + t19 * t299 * t29 * t377 * t61) + t8) * t220 * t17 * t163 * t177 * t185;
t4 = 0.1e1 / t286;
t7 = 1 / t5;
NonA = [-t12 -t2 * (t67 * (-t67 * (t349 * t30 + t37 * t89) + t44 * t3 * t65) + t37) * t120 * t176 * t175 * t141 * t160 * t163 * t174 (t67 * (t67 * (t15 * (t23 * t89 - t77) + t27 * t89) + t156 * t153) - t27 - t23 * t15) * t2 * t120 * t176 * t172 * t141 * t160 * t163 * t174 0; -t1 (t65 * (t37 * t29 + t30 * t6) + t67 * t3 * t5) * t2 * t120 * t176 * t175 * t141 * t160 * t181 * t174 -t2 * (t153 * t67 + t65 * (t15 * (-t23 * t29 + t373) - t27 * t29)) * t120 * t176 * t172 * t141 * t160 * t181 * t174 0; t30 * t67 * (t79 * t67 + t14) * t4 0 0 0; 0 0 -t172 * t7 * t15 -0.1e1 / J__3 * t16 * t7;];

t1 = x(12);
t2 = x(13);
t3 = x(6);
t4 = cos(t3);
t5 = x(7);
t6 = sin(t5);
t7 = x(8);
t8 = sin(t7);
t3 = sin(t3);
t7 = cos(t7);
t9 = t4 * t8;
t10 = t9 * t6;
t11 = t3 * t7;
t12 = -t11 + t10;
t13 = -G + n3;
t14 = x(4);
t15 = cos(t14);
t14 = sin(t14);
t5 = cos(t5);
t16 = t1 ^ 2;
t17 = t13 * t16;
t18 = n3pp - t17;
t19 = 0.1e1 / 0.2e1;
t20 = t19 * t7;
t21 = t20 * t18;
t22 = t2 * t5;
t23 = t22 * t1;
t24 = t23 * t14;
t25 = t24 * t13;
t26 = -t21 * t6 - t25;
t27 = 2;
t28 = t27 * t26;
t29 = t3 * t8;
t30 = t29 * t18;
t31 = -t28 * t4 + t30;
t32 = t4 * t7;
t33 = t32 * t6;
t34 = t33 + t29;
t35 = t14 * t34;
t36 = t35 * n3p;
t37 = t15 * t34;
t38 = t37 * n3p;
t39 = t8 * t13;
t40 = t39 * t2;
t41 = n3p * t7;
t42 = t41 * t14;
t43 = -t40 + t42;
t44 = t2 * t13;
t45 = t44 * t7;
t46 = t8 * n3p;
t47 = t46 * t14;
t48 = t45 + t47;
t49 = t48 * t3;
t50 = t43 * t4;
t51 = t50 * t6 + t49;
t52 = t15 ^ 2;
t53 = t52 ^ 2;
t54 = t15 * t52;
t55 = t14 ^ 2;
t56 = -t55 + t52;
t57 = 6;
t58 = t14 * t5;
t59 = t58 * t4;
t60 = 0.3e1 * t12;
t61 = t15 * t12;
t62 = t55 * t57;
t63 = x(5);
t64 = cos(t63);
t65 = n3pp * t19 - t17;
t66 = t46 * t1;
t67 = t5 * t65;
t68 = t6 * t66 + t67;
t69 = t41 * t3;
t70 = t69 * t1;
t71 = -t4 * t68 + t70;
t72 = t5 * n3p;
t73 = t72 * t1;
t74 = t6 * t65;
t75 = t74 * t8 - t73;
t76 = t11 * t65;
t77 = -t4 * t75 + t76;
t78 = t44 * t37;
t79 = t45 * t14;
t80 = t79 + t46;
t81 = 0.3e1 / 0.2e1 * t1;
t82 = t81 * t5;
t83 = t82 * t13;
t84 = t80 * t6;
t85 = -t84 + t83;
t86 = t40 * t14;
t87 = t86 - t41;
t88 = t87 * t3;
t89 = t4 * t85 - t88;
t90 = t1 * t12;
t91 = t90 * t14;
t92 = 0.3e1 * t52;
t93 = t14 * t77;
t63 = sin(t63);
t94 = t39 * t1;
t95 = t94 * t6;
t96 = t72 * t19;
t97 = -t95 - t96;
t98 = t11 * t1 * t13;
t99 = t4 * t97 + t98;
t100 = 0.4e1 / 0.3e1 * t1;
t101 = -t100 * t5 * t13 + 0.2e1 / 0.3e1 * t46 * t6;
t102 = t2 * t14;
t103 = t42 * t27;
t104 = t15 * t101;
t105 = -t104 * t2;
t106 = 0.3e1 * t105;
t107 = t69 * t27;
t108 = t107 * t15 * t2 + t106 * t4;
t109 = t2 ^ 2;
t110 = 0.2e1 / 0.3e1 * t16;
t111 = n3pp / 0.3e1;
t112 = -t13 * (t109 + t110) + t111;
t113 = 0.2e1 / 0.3e1 * t47;
t114 = t112 * t7 - t113 * t2;
t25 = t114 * t6 + 0.4e1 / 0.3e1 * t25;
t115 = 0.2e1 / 0.3e1 * t42;
t112 = t112 * t8 + t115 * t2;
t116 = t112 * t3;
t117 = t25 * t4 + t116;
t118 = t20 * t14;
t119 = n3p * t118 - t40;
t47 = -t19 * t47 - t45;
t120 = t3 * t47;
t121 = t119 * t6;
t122 = t121 * t4 - t120;
t123 = 4;
t124 = t2 * t99;
t125 = t80 * t3;
t126 = t87 * t6;
t127 = t126 * t4 - t125;
t128 = m0 + mp0;
t129 = t128 * t13;
t130 = t102 * t123;
t131 = t130 * t1 * L0;
t132 = t131 * t63 * m0;
t133 = t132 - t129;
t134 = t109 * L0;
t135 = t134 * t63;
t136 = t7 * t133;
t137 = m0 * t135 * t5 + t136 * t6;
t138 = t29 * t133;
t139 = t137 * t4;
t140 = t22 * t13;
t141 = t140 * t15;
t142 = t141 * t4;
t143 = t142 - t127;
t144 = m0 * t2;
t145 = t144 * t63 * L0;
t146 = t145 * t15;
t147 = t27 * t146 * t143;
t148 = -t13 * (t138 + t139) - t147;
t149 = t61 * t44;
t150 = -t149;
t151 = t145 * t37;
t152 = t150 * t15;
t153 = t127 * t14 + t152;
t154 = t123 * t13 * (m0 * t135 * t15 * t59 - t1 * t151) - t27 * t145 * t153;
t155 = t12 * t14;
t156 = -t155 * t44;
t157 = t145 * t35;
t158 = t63 * t150;
t159 = t5 * t13;
t160 = t159 * t4;
t161 = t64 ^ 2;
t162 = t161 ^ 2;
t163 = t64 * t161;
t164 = m0 * L0;
t165 = t164 * t161;
t166 = t13 * t34;
t167 = t166 * t134 * m0;
t168 = t5 * t15;
t169 = t168 * t4;
t170 = t12 * t14;
t171 = t169 - t170;
t172 = t171 * t64;
t173 = t63 * t34;
t174 = t172 + t173;
t175 = t23 * t4;
t176 = t1 * t51;
t177 = t60 * t44;
t178 = t177 * t1;
t179 = t90 * t13;
t180 = t1 * t89;
t181 = t15 * t71;
t182 = t15 * t14;
t183 = t182 * (-t27 * t93 + 0.3e1 * t181) - t15 * (t1 * (t78 + t179) - t52 * t77) - t180 * t14;
t184 = t27 * t1;
t185 = t1 * t122;
t186 = t15 * (t15 * (0.12e2 * t102 * t99 + t108) - t14 * t117 * t57 + t184 * t38) - t185 * t123 * t14;
t187 = t183 * t63;
t188 = (t178 * t52 * t14 - t15 * (t13 * t175 * t52 + t1 * t38 - t14 * t31) + t176 * t14) * t64;
t189 = t164 * t163;
t190 = t15 * t154;
t191 = t14 * t148;
t192 = t182 * t167 * t123;
t193 = t27 * t189 * (t188 + t187) + (t164 * t186 * t64 - t190 + t191) * t64 - t192;
t194 = t15 * t12;
t195 = t194 + t59;
t196 = -t19 * t31;
t197 = t140 * t4;
t198 = t197 * t52;
t199 = t51 * t14;
t178 = (t182 * (t15 * t178 - t196 * t27) - t1 * (t15 * (t198 + t38) - t199)) * t64;
t192 = -t27 * t189 * (t183 * t63 + t178) + t192 - (t164 * t186 * t64 - t190 + t191) * t64;
t200 = -0.3e1 * t192;
t201 = t166 * t16;
t176 = t15 * (t15 * (t1 * t149 - t196) + t176) + t201;
t180 = t15 * (t15 * (-t181 + t93) + t180) - t17 * t155;
t181 = -t123 * t15 * (t124 * t52 - t185) + t92 * t117 + t201 * t27;
t185 = t160 * t63;
t196 = t185 * t128;
t202 = t34 * t27;
t203 = t176 * t64;
t204 = t180 * t63;
t205 = t15 * t148;
t206 = -t27 * t189 * (-t203 + t204) + t13 * (-m0 * t134 * t202 * t52 - t196) + t64 * (-t164 * t181 * t64 + t205);
t207 = -0.3e1 * t206;
t208 = 0.1e1 / t15;
t209 = 0.1e1 / L0;
t210 = 0.1e1 / t64;
t174 = 0.1e1 / t174;
t211 = 0.1e1 / m0;
t212 = t208 ^ 2;
t213 = t212 ^ 2;
t214 = t208 * t213;
t215 = t208 * t212;
t216 = t210 ^ 2;
t217 = t216 ^ 2;
t218 = t210 * t216;
t219 = t195 * t207;
t31 = -t123 * t167 * t56 + t27 * t64 * (t14 * t154 + t165 * ((t1 * (t27 * t38 * t14 + t44 * (0.5e1 * t52 * t59 + t54 * t60 - t61 * t62)) + t31 * t56 + t15 * (t36 + t51) * t1) * t64 + (t15 * (t71 * (t92 - t62) - 0.7e1 * t93 * t15) + t27 * t14 * (t1 * t78 + t55 * t77) + t1 * (t15 * (t35 * t44 - t89) + t91 * t13)) * t63)) - t64 * (t15 * (-t148 + t123 * (t1 * t13 * t157 + (t109 * t160 * t56 * t63 + t102 * t158) * m0 * L0) + t27 * t146 * (t156 - t127)) - t164 * (-t27 * t15 * (t1 * t36 + t108 * t14) - t57 * t117 * t56 - t123 * t1 * (t122 * t15 + t14 * t38) + t15 * (-t14 * t27 * t108 + t15 * (0.3e1 * t101 * t102 * t4 - t103 * t2 * t3)) + t124 * t15 * (0.12e2 * t52 - 0.24e2 * t55)) * t64) + t207;
t36 = t211 * t174;
t71 = t36 * t216;
t77 = t71 * t209;
t93 = t77 * t215;
t101 = t206 * t174;
t108 = t210 * t193;
t117 = t77 * t213 * t14;
t124 = t174 ^ 2;
t167 = t174 * t124;
t220 = t124 * t27 * t206;
t221 = t123 * t207;
t222 = t36 * t215;
t223 = t1 * t7;
t224 = t14 * t6;
t225 = t224 * t223;
t226 = t225 * t123;
t227 = t226 + t22;
t144 = t144 * L0;
t228 = t144 * t64;
t229 = t228 * t227;
t230 = t131 * t29 * t64 * m0;
t231 = t229 * t4;
t232 = t228 * t15;
t143 = -t13 * (t230 + t231) - t27 * t232 * t143;
t233 = t134 * t59 * t64 * m0;
t153 = t123 * t13 * (-t1 * t228 * t37 + t15 * t233) - t27 * t228 * t153;
t234 = 8;
t235 = t63 ^ 2;
t236 = t27 * t161;
t237 = t235 * t57;
t238 = t236 - t237;
t239 = -t27 * t181;
t240 = t13 ^ 2;
t241 = t15 * t143;
t242 = t4 * t240;
t243 = t242 * t5 * t128;
t244 = t164 * t63;
t205 = t205 * t63;
t203 = t203 * t234;
t245 = t165 * (t180 * t238 + t203 * t63) + t64 * (t239 * t244 - t241 + t243) + t205;
t246 = t64 * t34;
t247 = t171 * t63 - t246;
t248 = t101 * t247;
t249 = t210 * t63;
t250 = t36 * t213 * t218 * t209;
t251 = t250 * t14;
t252 = t27 * t206 * t215 * t211;
t253 = t252 * t216 * t209 * t167;
t254 = x(15);
t255 = x(16);
t256 = x(14);
t257 = t254 * t3 + t255 * t4;
t258 = t256 * t5 + t257 * t6;
t259 = t29 * t6;
t260 = t32 + t259;
t261 = t9 * t19;
t262 = t261 * t18;
t263 = -t26 * t3 - t262;
t264 = t11 * t6 - t9;
t265 = t15 * n3p;
t266 = t265 * t264;
t267 = t43 * t3;
t268 = t267 * t6;
t269 = t48 * t4;
t270 = t268 - t269;
t271 = t140 * t3;
t272 = t1 * t260;
t273 = t272 * t44;
t274 = t32 * t1;
t275 = t274 * n3p;
t276 = t32 * t65;
t277 = t3 * t75 + t276;
t278 = t44 * t15;
t279 = t87 * t4;
t280 = -t3 * t85 - t279;
t281 = t1 * (t13 * t272 + t264 * t278);
t282 = t1 * t280;
t283 = t14 * t277;
t284 = t15 * (t3 * t68 + t275);
t285 = -t97;
t274 = t274 * t13;
t286 = t285 * t3 + t274;
t287 = t265 * t32;
t288 = t287 * t27 * t2;
t289 = t112 * t4;
t290 = -t25 * t3 + t289;
t291 = -t119;
t292 = t4 * t47;
t293 = t3 * t291;
t294 = t293 * t6 - t292;
t295 = t184 * t266;
t296 = t1 * t294;
t297 = t87 * t3;
t298 = t297 * t6;
t299 = t80 * t4;
t300 = t298 + t299;
t301 = t9 * t133;
t302 = t137 * t3;
t303 = t141 * t3;
t304 = -t303 + t300;
t305 = -t13 * (t301 - t302) - t27 * t146 * t304;
t306 = t278 * t260;
t307 = t306 * t15;
t308 = t123 * t13 * (m0 * t135 * t15 * t3 * t58 - t1 * t146 * t264);
t309 = t182 * t134 * t123;
t310 = t309 * t13 * m0;
t311 = t310 * t264;
t312 = t273 * t15;
t313 = t17 * t264;
t314 = t14 * t260;
t315 = t314 * t17;
t316 = t15 * (t15 * (-t284 + t283) + t282) + t315;
t317 = t286 * t52;
t318 = t313 * t27;
t319 = -t123 * t15 * (t2 * t317 - t296) - t318 + t92 * t290;
t320 = t159 * t3;
t321 = t320 * t63 * t128;
t322 = t134 * t27 * m0;
t323 = t316 * t63;
t324 = (t15 * (t1 * t270 + t15 * (t312 + t263)) + t313) * t64;
t325 = t15 * t305;
t326 = t13 * (t264 * t322 * t52 + t321);
t327 = t27 * t189 * (t324 + t323) + t64 * (t164 * t319 * t64 - t325) - t326;
t328 = t168 * t3;
t329 = -t14 * t260 + t328;
t330 = t63 * t264;
t331 = t329 * t64 + t330;
t332 = t58 * t3;
t333 = -t101 * t331 + t327;
t334 = t206 * (t15 * t260 + t332);
t335 = t253 * t331 * t195;
t336 = t254 * t4 - t255 * t3;
t337 = t224 * t44;
t21 = t1 * t337 - t21 * t5;
t338 = t41 * t52;
t339 = t44 * t6;
t340 = t4 * t1;
t341 = t182 * t4;
t66 = t5 * t66 - t74;
t74 = t6 * n3p;
t67 = t1 * t74 + t67 * t8;
t342 = t81 * t6;
t343 = t342 * t13;
t344 = -t5 * t80 - t343;
t345 = t2 * t7;
t346 = t8 * t1;
t347 = t159 * t1;
t348 = t1 * t344;
t349 = t14 * t67;
t350 = t15 * t66;
t351 = t94 * t5;
t352 = t19 * t74 - t351;
t353 = t123 * t1;
t354 = t46 * t27;
t355 = t2 * t15;
t356 = -t355 * (t13 * t353 * t6 + t354 * t5);
t357 = t100 * t337 - t114 * t5;
t358 = -0.3e1 * t357;
t359 = t4 * t15;
t360 = t52 * t352;
t361 = t360 * t2;
t136 = m0 * t135 * t6 - t136 * t5;
t362 = t278 * t6;
t363 = t87 * t5;
t364 = t362 + t363;
t365 = t146 * t4;
t366 = t13 * t136 * t4 + t27 * t364 * t365;
t367 = t102 * t6;
t368 = t223 * t5;
t369 = t367 + t368;
t370 = t40 * t52;
t371 = t244 * t22;
t372 = t371 * t4;
t373 = t15 * (-t123 * t244 * t278 * t369 * t4 + t27 * t372 * (-t14 * t87 + t370));
t374 = t14 * t366;
t375 = t27 * t189 * (t63 * (t341 * (t27 * t349 - 0.3e1 * t350) - t4 * (t54 * t67 + t347 * t15 * (t15 * t345 + t346) + t348 * t14)) + t64 * (t340 * (t5 * (t14 * t43 - t338) + t339 * t54) + t341 * (0.3e1 * t15 * t23 * t39 - t21 * t27)));
t376 = t134 * t58 * t32 * t123 * t13 * m0 * t15;
t377 = t370 + t43;
t378 = t159 * t16 * t7;
t379 = t1 * t168 * t377 - t21 * t52 + t378;
t380 = t58 * t39 * t16;
t348 = t15 * (t15 * (-t350 + t349) - t348) + t380;
t349 = t4 * t348;
t350 = t1 * t119 * t5 - t361;
t381 = t378 * t27;
t382 = t358 * t52 + t381;
t383 = t123 * t359 * t350;
t384 = t382 * t4 + t383;
t385 = t129 * t63 * t6;
t386 = -t322 * t5 * t52 * t7 + t385;
t387 = t349 * t63;
t388 = t4 * t379 * t64;
t366 = t15 * t366;
t389 = t13 * t4 * t386;
t390 = t27 * t189 * (t388 + t387);
t391 = -t390 + t64 * (t164 * t384 * t64 - t366) - t389;
t392 = t58 * t8;
t393 = t6 * t15;
t394 = t393 + t392;
t395 = t4 * t394;
t396 = t32 * t63;
t397 = -t395 * t64 + t396 * t5;
t398 = t168 * t8;
t399 = t398 - t224;
t400 = t4 * t399;
t401 = t206 * t400;
t402 = t101 * t397 + t391;
t403 = t253 * t397 * t195;
t358 = t93 * (t174 * (t192 * t210 * t397 + t195 * t391 - t401) + t210 * (t375 + (t164 * (t27 * t359 * (t1 * t168 * t41 - t14 * t358) + t4 * (t14 * (-t119 * t353 * t5 + 0.12e2 * t361) + t356 * t52)) * t64 - t373 + t374) * t64 - t376)) + 0.3e1 * t251 * t402 + t403;
t361 = t18 * t12;
t404 = t43 * t3;
t405 = t48 * t6;
t406 = t4 * t405 - t404;
t407 = t1 * t61 * n3p;
t408 = t1 * t34;
t409 = t408 * t92 * t44 * t14 - t14 * (t1 * t406 + t15 * t361) + t407 * t15;
t410 = t1 * t34;
t411 = t410 * n3p;
t412 = t65 * t34;
t413 = t87 * t6 * t4;
t414 = -t80 * t3 + t413;
t415 = t166 * t1;
t416 = t1 * t414;
t417 = t15 * (t1 * (t415 + t150) + t412 * t52) + t416 * t14;
t412 = t14 * t412;
t418 = t412 * t27;
t419 = t15 * t411;
t420 = t410 * t13;
t112 = -t112;
t421 = t112 * t6;
t422 = t114 * t3 + t4 * t421;
t293 = t292 * t6 - t293;
t407 = t14 * (t15 * (-0.12e2 * t355 * t420 - t422 * t57) - t353 * t293) - t27 * t15 * (t15 * t2 * t38 + t407);
t423 = t4 * t84 + t88;
t424 = t133 * t12;
t425 = t146 * t27;
t426 = t13 * t424 + t423 * t425;
t427 = t15 * (t27 * t145 * (-t14 * t423 + t15 * t78) + t123 * t145 * t61 * t1 * t13);
t428 = t14 * t426;
t310 = t310 * t12;
t429 = t34 * t52;
t430 = t429 * t44;
t431 = t1 * t12;
t432 = t431 * t13;
t433 = t52 * t19;
t201 = t15 * (t15 * (-t419 + t412) - t416) + t201 * t14;
t412 = t420 * t52;
t416 = t17 * t27;
t422 = t123 * t15 * (t1 * t293 + t2 * t412) + t92 * t422 - t416 * t12;
t434 = t15 * t426;
t435 = t63 * t201;
t361 = (t433 * t361 + t1 * (t15 * (-t430 + t406) + t432)) * t64;
t436 = t13 * t109;
t437 = t436 * t12;
t438 = -t27 * t164 * (t163 * (-t361 + t435) + t437 * t52) - t64 * (-t164 * t422 * t64 + t434);
t439 = t63 * t12;
t440 = t64 * t34;
t441 = t440 * t14;
t442 = t441 + t439;
t77 = t77 * t212;
t443 = -t101 * t442 + t438;
t444 = t253 * t442 * t195;
t445 = t223 * t6;
t446 = t22 * t14;
t447 = -t446 + t445;
t448 = t13 * t447;
t449 = t29 * t1;
t450 = t449 * t13;
t451 = t4 * t448 + t450;
t177 = t177 * t15;
t452 = t46 * t6;
t453 = t184 * t159;
t454 = -t453 + t452;
t455 = -t4 * t454 + t69;
t456 = t27 * t97;
t457 = t27 * t98 + t4 * t456;
t458 = t14 * (-t4 * t83 + t455 * t92) + t27 * t15 * (t457 * t55 - t179) - t14 * t89 - t15 * (t457 * t52 + t78);
t459 = t12 * t13;
t460 = -t459;
t450 = t4 * t448 + t450;
t461 = t197 * t54;
t462 = t355 * t460;
t463 = t15 * (t14 * (t234 * t450 + 0.12e2 * t462) + t27 * t38);
t464 = t13 * t64;
t151 = t123 * t464 * (t14 * t157 - t15 * t151);
t149 = (-t451 + t149) * t15;
t465 = t184 * t166;
t466 = -t465 - (t51 + t149) * t15;
t467 = t1 * t13;
t89 = t467 * (-t155 * t27 + 0.3e1 / 0.2e1 * t169) - (t15 * (t14 * t457 + t15 * t455) - t89) * t15;
t450 = (-t462 - t450) * t15;
t455 = t15 * (t122 + t450) + t415;
t457 = t89 * t63;
t462 = t15 * t157;
t468 = t462 * t13;
t469 = t123 * t64 * (t164 * t455 * t64 + t468) + t27 * t189 * (t466 * t64 + t457);
t470 = t160 * t54;
t471 = t59 * t27;
t472 = t35 * t13;
t113 = -t27 * t45 - t113;
t473 = t100 * t58;
t474 = t113 * t6 + t13 * t473;
t475 = t40 * t27;
t115 = t115 - t475;
t476 = t115 * t3 + t4 * t474;
t477 = t476 * t57;
t478 = t353 * t460;
t104 = (-0.3e1 * t104 * t4 + t107 * t15) * t52;
t107 = t155 * t13;
t479 = t22 * t27;
t226 = t226 + t479;
t480 = t244 * t226;
t481 = t480 * t4;
t482 = t353 * t244;
t483 = t107 * t2;
t484 = t483 + t127;
t485 = t244 * t15;
t372 = t27 * t484 * t485 - t13 * (t123 * t372 * t52 + t14 * t29 * t482 + t481);
t486 = t61 * t13;
t483 = t15 * (t13 * (-t1 * t123 * t244 * t37 + t234 * t341 * t371) - t27 * t244 * (t14 * (t483 + t127) + t15 * (-t2 * t486 + t150)));
t487 = t14 * t372;
t488 = t37 * t13 * t15;
t489 = t472 * t14;
t490 = (t467 * t182 * (t15 * t60 + t471) + t1 * (t14 * t460 - t470)) * t64;
t491 = t1 * t63;
t492 = t182 * t164;
t493 = t492 * t44 * t234 * t34;
t494 = t61 + t59;
t495 = t13 * t15;
t496 = t495 * t494;
t497 = t15 * (t496 + t460);
t498 = t1 * t460;
t476 = t92 * t476;
t499 = t123 * t15 * (-t52 * t99 + t498) + t476;
t500 = t15 * t372;
t501 = t491 * t472 * t15;
t502 = t64 * t497 * t1;
t503 = t27 * t189 * (t501 + t502);
t430 = t430 * t164 * t123;
t504 = -t503 - t64 * (-t164 * t499 * t64 + t500) + t430;
t505 = t20 * t1;
t506 = t505 * t6;
t507 = t1 * (-t446 + t506);
t508 = t16 * t19 * t29 + t4 * t507;
t509 = t2 * t12;
t510 = -t509;
t511 = t22 * t4;
t512 = t1 * (t14 * t510 - t511 * t54);
t513 = t27 * t508;
t514 = -t16 * t12;
t515 = t367 * t7;
t516 = t82 - t515;
t517 = t102 * t29;
t518 = -t4 * t516 + t517;
t519 = t1 * t518;
t520 = t14 * t514;
t521 = -t90;
t110 = -t109 - t110;
t522 = t110 * t7;
t24 = t522 * t6 + 0.4e1 / 0.3e1 * t24;
t523 = t110 * t29 + t24 * t4;
t524 = 0.12e2 * t355;
t525 = -t123 * t512 + t182 * (t521 * t524 - t523 * t57);
t526 = t102 * t12;
t527 = t128 * t34;
t528 = t359 * t22;
t529 = t528 - t526;
t530 = t527 * t13;
t531 = t137 * t4;
t532 = t27 * t146 * t529;
t533 = -t532 + t530 - t138 - t531;
t534 = t61 * t2;
t535 = t534 * t15;
t536 = t15 * (-t123 * t146 * (t4 * (-t446 + t445) + t449) + t27 * t145 * (-t14 * t526 + t535));
t537 = (t182 * (0.3e1 * t16 * t169 + t27 * t520) - t15 * (t1 * (t2 * t37 + t90) + t514 * t52) + t519 * t14) * t63;
t309 = t309 * m0 * t34;
t538 = t1 * t510;
t539 = t16 * t34;
t519 = t15 * (t15 * (t16 * t169 + t520) + t519) + t155 * t16;
t520 = t521 * t52;
t540 = t202 * t16;
t523 = t123 * t15 * (-t2 * t520 + t538) + t92 * t523 + t540;
t541 = t164 * t523 * t64;
t542 = t63 * t519;
t508 = (t15 * (t15 * (t1 * t534 - t508) + t538) + t539) * t64;
t543 = t27 * (-t196 + t164 * (t163 * (t508 + t542) - t429 * t109));
t544 = -t543 - t64 * (t15 * t533 - t541);
t545 = t4 * t5;
t546 = t15 * t521;
t547 = t182 * (-t184 * t59 + 0.3e1 * t546) + t1 * (t54 * t545 + t170);
t548 = t1 * t35;
t535 = t27 * (t15 * (t1 * t37 - t535) - t548 * t14) + t182 * (t123 * t526 - t528 * t57);
t549 = t37 * t15;
t550 = t35 * t14;
t551 = t1 * t64;
t130 = t173 * t130 * t15;
t552 = t164 * t64;
t553 = t59 * t1;
t546 = t15 * (t15 * (-t553 + t546) + t431);
t548 = (t15 * t529 + t548) * t15;
t554 = t551 * t15;
t555 = t554 * t35;
t556 = t63 * t546;
t557 = t429 * t2;
t558 = t552 * (t64 * (t64 * (t556 + t555) - t548) - t557 * t63);
t559 = t161 * t34;
t560 = t15 * (t12 * (-t433 + t55) - 0.3e1 / 0.2e1 * t59 * t15) * t63 * t64;
t561 = t52 * t171;
t562 = t165 * (t64 * (t440 * t52 - t561 * t63) - t429);
t563 = t5 ^ 2;
t564 = t563 - t27;
t565 = t7 ^ 2;
t566 = t565 - t19;
t567 = t4 ^ 2;
t568 = t564 * t567;
t569 = 0.1e1 + t568;
t570 = t7 * t8;
t571 = t570 * t569;
t572 = t6 * t566;
t573 = t27 * t3 * t4 * t572 + t571;
t574 = t545 * t34;
t575 = t59 * t34;
t576 = t123 * (t15 * (-t15 * t573 + t575) + t571) + t572 * t234 * t3 * t4;
t577 = t564 * t565;
t578 = 0.1e1 + t577;
t579 = -t27 * t563 + t578;
t580 = t11 * t10;
t581 = t580 * t27;
t582 = t567 * t579 + t565 - t581;
t581 = t566 * t568 - t19 + t565 - t581;
t583 = t52 - 0.1e1;
t584 = -t27 * (t545 * t583 * t61 + t14 * t581) + t14 * t582 * t52;
t585 = t545 * t12;
t586 = t59 * t12;
t587 = 16;
t588 = t563 * t234;
t589 = t72 * t27;
t590 = t589 * t6;
t591 = t590 + t94 * (t587 - t588);
t592 = t224 * t39;
t593 = t592 * t22 * t123;
t594 = t46 * t19;
t595 = t79 + t594;
t596 = t123 * t565;
t597 = t596 - t27;
t598 = t5 * t595;
t599 = t467 * t597 * t6 - t598;
t600 = (t591 * t7 - t593) * t4;
t601 = t234 * t7;
t602 = t4 * (-t123 * t3 * t599 + t600) - t601 * t94;
t603 = 0.1e1 / 0.4e1;
t604 = t347 * t6;
t605 = -t604 + t46 * (-t563 * t603 + t19);
t606 = t74 * t603;
t607 = t596 * t74;
t608 = t234 * (-t351 + t606);
t609 = t27 * (t563 + t123);
t610 = t40 * t587 * t7;
t596 = t596 * n3p;
t611 = t6 * (t14 * t596 - t610) - t608 * t14;
t612 = (-t234 * t7 * (t14 * t605 - t45 * t564) + t609 * t44) * t4;
t613 = t234 * t565 - t57;
t103 = t4 * (t3 * t611 + t612) + t44 * t613 + t103 * t8;
t590 = t590 + t94 * (t563 * t57 - 0.12e2);
t614 = 0.3e1 / 0.2e1 - 0.3e1 * t565;
t615 = t467 * t6 * t614 - t598;
t593 = (t590 * t7 - t593) * t4;
t616 = t4 * (-t123 * t3 * t615 + t593) + t94 * t57 * t7;
t617 = t408 * t160;
t618 = t27 * t565;
t619 = 0.1e1 - t618;
t620 = 0.1e1 + t563 + t577;
t621 = 0.3e1 / 0.4e1;
t622 = t1 * t5 * t6 * t621 - t102 * t564 * t7;
t623 = -t452 * t603 - 0.3e1 / 0.8e1 * t347;
t337 = -t27 * t7 * (t6 * t79 - t623) + t337;
t624 = (n3p * t603 * t620 + t39 * t622) * t4;
t625 = t86 * t7;
t626 = -t603 * n3p * (0.1e1 - t565) + t4 * (t3 * t337 + t624) - t625;
t627 = -t563 - 0.2e1 / 0.3e1;
t628 = t621 * (t467 * t627 + t452 * t5 / 0.3e1);
t629 = t72 * t603;
t630 = -t95 + t629;
t631 = 0.1e1 - t7;
t632 = 0.1e1 + t7;
t633 = t467 * t19;
t634 = t223 * t14 * t564;
t635 = t22 * t6;
t636 = t7 * (-t635 + t634);
t637 = t39 * t22;
t638 = t14 * t630 * t7 - t19 * t637;
t639 = (t13 * t19 * t636 - t14 * t628) * t4;
t640 = -t633 * t14 * t631 * t632 + t4 * (t3 * t638 + t639);
t641 = t578 + 0.3e1 / 0.2e1 * t563;
t642 = t580 * t234;
t643 = -t123 * (-t567 * t641 - t565 + 0.1e1) - t642;
t644 = -t86 + t41 / 0.3e1;
t645 = t79 + t46 / 0.3e1;
t646 = t644 * t6;
t647 = t3 * t645 + t4 * t646;
t648 = t340 * t123 * t5;
t649 = t467 * t161;
t650 = t197 * t14;
t628 = t650 * t34 * t123 - t161 * (t182 * (0.3e1 * t142 * t34 - t27 * t626) - t14 * t640 + t15 * (t15 * (-t15 * t40 * t569 * t7 + t3 * t362 * t4 * t619) - t633 * t15 * t631 * t632 + t4 * (t4 * t15 * (t19 * t467 * t577 - t628) + t11 * t15 * t630))) * t234;
t651 = t161 * t16;
t652 = t109 + t651;
t653 = t552 * t15;
t654 = t652 * t653 + t129;
t575 = t575 * t353;
t655 = t27 * t2;
t656 = t655 * t582 * t53;
t657 = t13 * (t575 - t656) + (t15 * (t15 * t602 + t103) + t616) * t15;
t658 = t160 * t90;
t626 = -(t15 * (t142 * t34 - t626) - t640) * t15 - t658 * t19;
t640 = t353 * t166;
t659 = -t44 * t643 * t52 + t545 * (-t15 * t57 * t647 - t14 * t640);
t660 = t649 * t15;
t661 = t511 * t34 * t123;
t662 = t184 * t162;
t663 = t63 * (-t234 * t626 * t161 + t495 * (-t584 * t662 - t661)) - (t161 * (t576 * t660 - t657) - t659) * t64;
t664 = t552 * t14;
t665 = t664 * t652;
t666 = 0.1e1 / t5;
t667 = n3p * t544;
t668 = n3ppp * t562;
t669 = t668 - t667;
t670 = t36 * t16;
t671 = t670 * t63;
t672 = t249 * t16;
t105 = -t258 * (0.3e1 * t251 * t333 + t93 * (t174 * (-t192 * t210 * t331 + t195 * t327 + t334) + t210 * (t27 * t189 * (t63 * (t182 * (-t27 * t283 + 0.3e1 * t284) + t15 * (t277 * t52 + t281) - t282 * t14) + t64 * (-t182 * (0.3e1 * t273 * t15 + t263 * t27) + t1 * (-t14 * t270 + t15 * (t271 * t52 + t266)))) + (t14 * t305 - t15 * (-t27 * t145 * (-t14 * t300 + t307) - t308) + t164 * (t15 * (t15 * (0.12e2 * t102 * t286 - 0.3e1 * t105 * t3 + t288) - t295 - t14 * t290 * t57) - t296 * t123 * t14) * t64) * t64 + t311)) - t335) - t257 * (-t77 * (t174 * (t206 * t34 + t208 * (t192 * t210 * t442 - t195 * t438)) - (t27 * t189 * (t409 * t64 + t63 * (t182 * (t418 - 0.3e1 * t419) - t417)) - (-t164 * t407 * t64 + t427 - t428) * t64 + t310) * t208 * t210) + 0.3e1 * t251 * t443 - t444);
t263 = (t216 * (t195 * t669 * t211 * t124 + t671 * (-t27 * t189 * (t491 * (-t489 + t488) - t490) + (t164 * (t14 * (t15 * (0.12e2 * t15 * t99 - t477) - t478) + t104) * t64 - t483 + t487) * t64 - t493)) + t36 * (-n3p * (t27 * t189 * (t64 * (t182 * (t1 * t355 * t60 - t513) + t512) + t537) + (t164 * t525 * t64 + t14 * t533 - t536) * t64 - t309) - n3pp * (t27 * t189 * (t547 * t63 + t551 * (t550 - t549)) + t552 * (t535 * t64 - t130))) * t218 + t672 * t195 * t504 * t124 * t211) * t209 * t215;
t103 = ((t27 * t467 * t63 * t162 * (t14 * t584 - t15 * (-t27 * (t14 * (t182 * t582 + t585) + t15 * t581) + t52 * (t15 * t582 + t57 * t586))) + t63 * t628 - t64 * (t161 * (t649 * (-t14 * t576 + t15 * (t123 * t56 * t574 + t182 * t234 * t573)) - t123 * t15 * (-t197 * t61 * (t52 + 0.1e1) + t617) + t14 * t616 - t52 * (t15 * (-t608 + t607) * t3 * t4 + (-t234 * t567 * t605 + t354) * t15 * t7) - t182 * (-t103 * t27 + t15 * (t234 * t278 * t582 - 0.3e1 * t602))) + t57 * t545 * (-t14 * t647 + t152) - t495 * (t102 * t27 * t643 - t34 * t648))) * t654 - t663 * t665) * t211 * t124 * t217 * t209 * t213;
t152 = t2 * t469;
t277 = t152 * t249 * t1;
t282 = n3pp * t558;
t283 = t654 * t663;
t284 = t283 * t208;
t286 = t284 * t210 * t124;
t290 = t174 * (-t282 + t277) - t286;
t296 = t249 * t2;
t305 = t296 * t1;
t354 = t93 * (t195 * t290 + t210 * (n3ppp * t165 * (t182 * (t559 - t34) + t560) + t305 * (t27 * t189 * (t63 * t458 + t64 * (t182 * (-t27 * t451 + t177) + t51 * t14 - t15 * (t198 + t38))) - t151 + t165 * (t123 * (-t122 * t14 + t461) + t463))));
t419 = t16 * t63;
t512 = t419 * t504;
t131 = t131 * t9 * t64 * m0;
t602 = t3 * t240 * t5 * t128;
t608 = t165 * t63;
t616 = t171 * t63 - t246;
t181 = t27 * t552 * (-t163 * t180 + t181 * t63) - t64 * (-t241 + t243) - t205 + t608 * (t204 * t57 - t203);
t203 = t64 * t264;
t205 = t222 * t217 * t209 * t63;
t628 = t222 * t218 * t209;
t167 = t252 * t218 * t209 * t167;
t252 = t167 * t331;
t673 = t123 * t13 * t228 * t91 + t232 * t27 * t423;
t361 = t361 * t234;
t674 = t12 * t64;
t675 = t63 * t34;
t676 = t14 * t675 - t674;
t677 = t206 * t676;
t678 = t167 * t442;
t226 = t27 * t484 * t653 - t13 * (t123 * t511 * t52 * t552 + t226 * t4 * t552 + t29 * t353 * t664);
t484 = t1 * t472 * t15;
t502 = t502 * t234;
t664 = t1 * t163;
t529 = t27 * t232 * t529;
t679 = t160 * t128;
t508 = t608 * (t234 * t508 + t542 * t57);
t542 = 0.3e1 * t651;
t651 = t485 * (t109 + t542);
t680 = t244 * t64;
t546 = t27 * t164 * (-t162 * t546 + t557 * (t161 - t235)) + t680 * (-t123 * t548 + t64 * (t234 * t555 + t556 * t57));
t548 = t552 * (t64 * (-0.3e1 * t235 + t161) * t561 + t63 * (t123 * t559 - t202) * t52);
t555 = t223 * t58;
t556 = t555 * t123;
t559 = t2 * t6;
t561 = t15 * (t232 * t27 * t364 * t4 - t228 * (t556 - t559) * t4 * t13);
t242 = t242 * t6 * t128;
t681 = t366 * t63;
t388 = t388 * t234;
t682 = t32 * t64 * t5;
t683 = t167 * t397;
t684 = t235 - t161;
t685 = t15 * t64;
t686 = t174 * t616;
t687 = t207 * t686 - 0.3e1 * t181;
t187 = -t27 * t206 * t215 * t211 * t216 * t209 * t124 * t195 * (t249 + t686) + 0.3e1 * t205 * (t14 * t207 * t208 + t193) + t93 * (t174 * (t108 * t616 - t181 * t195) + t210 * (-t27 * t552 * (-t163 * t183 + t186 * t63) + t63 * (-t191 + t190) + t64 * (t14 * t143 - t15 * t153) - t608 * (t187 * t57 + t188 * t234)) + t210 * t687 * t208 * t14);
t157 = t123 * t495 * (t228 * t35 * t64 - t157 * t63);
t89 = t165 * t89 * t238;
t188 = t257 * (0.3e1 * t205 * t443 + t628 * (t174 * (-t181 * t442 + t438 * t616 + t677) - t27 * t552 * (t163 * t201 + t422 * t63) - t15 * (-t426 * t63 + t64 * t673) + t608 * (t435 * t57 - t361)) - t678 * t616) + t258 * (0.3e1 * t205 * t333 + t628 * (t174 * (-t181 * t331 + t206 * (t329 * t63 - t203) + t327 * t616) - t27 * t552 * (-t163 * t316 + t319 * t63) - t64 * (t15 * (-t13 * (-t229 * t3 + t131) - t27 * t232 * t304) + t602) + t325 * t63 - t608 * (t234 * t324 + t323 * t57)) - t252 * t616);
t190 = (t216 * (-t512 * t616 * t211 * t124 - t671 * (-t27 * t552 * (t163 * t484 + t499 * t63) - t15 * (t226 * t64 - t372 * t63) + t608 * (t501 * t57 + t502))) + t218 * (-t616 * t669 * t211 * t124 + t36 * (n3p * (-t27 * t64 * (t164 * (t163 * t519 + t523 * t63) - t679) - t15 * (-t533 * t63 + t64 * (-t229 * t4 - t230 - t529)) + t508) + n3pp * t546 + n3ppp * t548)) - t670 * t504 * t210) * t209 * t215;
t191 = (-t654 * (t234 * t163 * (t15 * t235 * t467 * t584 - t626) + t63 * (t64 * (t587 * t626 * t63 - 0.3e1 * t64 * t657) - t659) + t464 * (-t661 + t664 * (-t27 * t584 * t64 + 0.5e1 * t576 * t63)) * t15) + t663 * t651) * t211 * t124 * t217 * t209 * t213;
t290 = t628 * (t1 * (t63 * (-t491 * t504 + t2 * (-t234 * t680 * (t161 * t466 + t455) + t157 + t89) * t210) + t152) + t290 * t616);
t152 = t205 * (t210 * (-t123 * t174 * t284 + t152 * t234 * t491) - t282 * t57);
t132 = t27 * t290 + t1 * t187 + t2 * (t628 * (t174 * (-t181 * t247 - t206 * (t171 * t64 + t173) + t245 * t616) + t207 - t164 * t684 * t239 - t243 * t63 - t685 * (-t13 * (-t145 * t227 * t4 - t132 * t29) + t147 - t148) + t241 * t27 * t63 + t164 * (0.12e2 * t180 * t235 * t63 * t64 - 0.24e2 * t161 * t176 * t235 + t162 * t176 * t234 - 0.20e2 * t163 * t204) + t249 * t687) + 0.3e1 * t205 * (t245 - t248) + t628 * (t216 * t221 * t235 - t220 * t247 * t616)) + t336 * (0.3e1 * t205 * t402 + t628 * (t174 * (t181 * t397 + t206 * (t395 * t63 + t682) + t391 * t616) - t27 * t552 * (t163 * t349 + t384 * t63) - t64 * (t242 + t561) + t681 + t608 * (t387 * t57 + t388)) + t683 * t616) + t666 * t188 + t190 + t191 - 0.3e1 * t205 * t669 + t152;
t28 = t18 * t9 + t28 * t3;
t147 = t404 * t6 - t269;
t152 = t23 * t3;
t176 = t1 * t147;
t180 = t3 * t75 + t276;
t181 = t3 * t85 + t279;
t187 = t1 * t181;
t188 = t180 * t14;
t190 = t15 * (t3 * t68 + t275);
t191 = -t3 * t97 + t274;
t204 = t25 * t3 - t289;
t227 = t121 * t3 + t292;
t239 = t126 * t3 + t299;
t241 = -t303 + t239;
t137 = -t13 * (-t137 * t3 + t301) - t27 * t146 * t241;
t243 = t15 * (t15 * (-t190 + t188) - t187) + t315;
t275 = -t123 * t15 * (t191 * t2 * t52 + t1 * t227) - t318 - t92 * t204;
t276 = (t15 * (t15 * (-t19 * t28 + t312) + t176) + t313) * t64;
t284 = t15 * t137;
t289 = -t27 * t189 * (t243 * t63 + t276) - t64 * (t275 * t552 - t284) + t326;
t290 = t174 * t207 * t331 - 0.3e1 * t289;
t131 = t628 * (t174 * (t206 * (t329 * t63 - t203) + t245 * t331 - t247 * t289) + t64 * (-t15 * (-t13 * (-t229 * t3 + t131) - t27 * t232 * t241) - t602 - t244 * t27 * t275) + t284 * t63 + t165 * (-t234 * t276 * t63 + t238 * t243) + t249 * t290) - t252 * t247;
t229 = t6 * t336;
t232 = -t628 * t333;
t241 = t43 * t6 * t4;
t243 = t170 * t17;
t275 = t4 * t291;
t276 = t275 * t6;
t284 = t416 * t34;
t292 = t413 - t125;
t303 = t169 - t155;
t304 = t303 * t64;
t312 = t628 * t402;
t315 = t3 * t15;
t316 = t146 * t3;
t318 = -t13 * t3 * t386;
t319 = t206 * (t11 * t5 * t63 - t3 * t394 * t64);
t323 = t252 * t397;
t324 = t323 + t628 * (t174 * (t289 * t397 + t331 * t391 - t319) + t27 * t189 * (t3 * t348 * t63 + t3 * t379 * t64) + t64 * (-t15 * (-t136 * t3 * t13 - t27 * t316 * t364) + t552 * (-t123 * t315 * t350 - t3 * t382)) - t318);
t325 = -t628 * t443;
t326 = t44 * t52;
t329 = t326 * t264;
t333 = t467 * t260;
t348 = t433 * t18 * t260;
t350 = t2 * t467 * t264 * t52;
t364 = t416 * t260;
t372 = t92 * (-t114 * t4 + t3 * t421);
t84 = t3 * t84 - t279;
t379 = t133 * t260 * t13;
t298 = t63 * (t15 * (-t1 * (t80 * t4 + t298) + t15 * (-n3p * t1 * t15 * t264 + t14 * t264 * t65)) + t313 * t14);
t313 = t436 * t260 * t52;
t382 = t63 * t260;
t384 = t206 * (t14 * t264 * t64 + t382);
t252 = t252 * t442;
t386 = -t252 + t628 * (t174 * (-t289 * t442 + t331 * t438 + t384) + t27 * t164 * (t163 * (t64 * (t1 * (t15 * (-t3 * t405 + t329 - t50) - t333) - t348) + t298) + t313) + t64 * (-t15 * (-t425 * t84 - t379) + t552 * (-t123 * t15 * (t1 * (t120 * t6 + t275) + t350) + t364 - t372)));
t387 = t467 * t9;
t402 = t184 * t264 * t13;
t413 = t32 * n3p;
t421 = t184 * t32 * t13;
t426 = t467 * (t314 * t27 - 0.3e1 / 0.2e1 * t328);
t435 = t13 * t260;
t443 = -t3 * t448 + t387;
t455 = (t355 * t435 + t443) * t15;
t466 = t467 * t264;
t499 = -t495 * t244 * t102 * t264;
t501 = t15 * t260;
t533 = t501 + t332;
t602 = t1 * t15;
t616 = t14 * t264;
t626 = t115 * t4;
t657 = t1 * t435;
t659 = t314 * t13;
t482 = t482 * t9 * t14;
t661 = t2 * t659;
t371 = t371 * t3 * t52 * t123;
t435 = t27 * t189 * (t64 * t602 * (t495 * t533 - t435) + t491 * t616 * t13 * t15);
t670 = t329 * t164 * t123;
t261 = t261 * t16;
t687 = t2 * t260;
t688 = t355 * t272;
t689 = t1 * t687;
t690 = t16 * t264;
t691 = t16 * t260;
t692 = t102 * t9;
t693 = (-t14 * t691 + t16 * t328) * t15;
t694 = t314 * t16;
t695 = t9 * t110;
t696 = t123 * t15 * (-t2 * t272 * t52 + t689);
t697 = t690 * t27;
t698 = t102 * t260;
t699 = t315 * t22;
t700 = t109 * t52;
t701 = t700 * t264;
t301 = t15 * (t27 * t146 * (t699 - t698) - t128 * t13 * t264 - t301 + t302);
t302 = t552 * (t64 * (t64 * (t63 * t15 * (-t1 * t260 + t15 * (t1 * t332 + t15 * t272)) - t554 * t616) + (t1 * t616 + t15 * (t699 - t698)) * t15) + t330 * t52 * t2);
t699 = t328 - t314;
t702 = t161 - 0.1e1;
t703 = t165 * (-t52 * t63 * t64 * t699 + t264 * t52 * t702);
t704 = t3 ^ 2 - t567;
t705 = t11 * t9 * t564;
t706 = t572 * t704;
t707 = t705 + t706;
t708 = t4 * t264;
t709 = t3 * t34;
t710 = t709 + t708;
t711 = t58 * t15;
t712 = t570 * t704 * t6;
t579 = t3 * t4 * t579 - t712;
t566 = t566 * t3;
t713 = t4 * t564 * t566 - t712;
t714 = t52 - 0.1e1;
t715 = t3 * t12;
t716 = t14 * t123;
t708 = t709 + t708;
t709 = t58 * t1;
t717 = t4 * t260;
t718 = t715 + t717;
t719 = t326 * t234;
t720 = t495 * t184;
t721 = t63 * t161;
t30 = t229 * t232 - t257 * t386 - t258 * (t628 * (t174 * (-t206 * (t304 + t675) + t331 * (t327 - t289)) + t27 * t189 * (t63 * (t15 * (t1 * (-t4 * t85 + t88) + t15 * (-t14 * (-t4 * t75 + t76) + t15 * (-t4 * t68 + t70))) + t243) + t64 * (t15 * (t1 * (t241 + t49) + t15 * (t19 * t30 - t26 * t4 + t278 * t431)) + t17 * t34)) - t13 * (t322 * t34 * t52 + t196) + t64 * (-t15 * (t13 * (t138 + t531) + t27 * t146 * (t142 - t292)) + t552 * (t123 * t15 * (t1 * (t276 + t120) + t2 * (-t285 * t4 + t98) * t52) - t284 + t92 * (-t25 * t4 - t116)))) - t167 * t331 ^ 2) + t336 * t325;
t70 = (t123 * t141 * t63 * t710 - (t161 * (t123 * t13 * (-t2 * t53 * t579 + t708 * t709) - (t123 * t615 * t704 - t593 * t27 * t3 + t15 * (t15 * (t123 * t599 * t704 - t27 * t3 * t600) - t612 * t27 * t3 - t611 * t704)) * t15 + t660 * (-t123 * t711 * t710 - t234 * (-t52 * t707 + t705 + t706))) - t123 * t467 * t58 * t710 - t57 * t168 * (t3 * t647 + t4 * (t3 * t646 - t4 * t645)) - t719 * (t3 * t4 * t641 - t712)) * t64 - t721 * (t234 * (t19 * t347 * t718 + t15 * (-t639 * t27 * t3 + t15 * (-t27 * t3 * t624 + t141 * t708 - t337 * t704) - t638 * t704)) + t720 * (t27 * t15 * (t260 * t545 * t714 + t5 * t714 * t715 - t182 * t579) + t716 * t713) * t161)) * t124 * t211 * t213 * t217 * t209 * t654;
t76 = (t216 * (t512 * t331 * t211 * t124 + t671 * (t435 + t64 * (-t15 * (t13 * (t3 * t480 + t371 - t482) - t27 * t485 * (t239 + t661)) + t552 * (t123 * t15 * (-t191 * t52 + t657) - t92 * (t3 * t474 - t626))) - t670)) + t218 * (t331 * t669 * t211 * t124 + t36 * (-n3p * (-t27 * (t321 + t164 * (t163 * (-t63 * (t15 * (-t1 * (t3 * t516 + t692) + t693) + t694) - t64 * (t15 * (t15 * (-t3 * t507 + t261 + t688) - t689) + t690)) + t701)) + t64 * (-t301 + t552 * (t696 - t697 + t92 * (-t24 * t3 + t695)))) - n3ppp * t703))) * t209 * t215;
t88 = t174 * (t282 - t277) + t286;
t116 = t628 * (n3pp * t302 + t331 * t88 - t305 * (-t123 * t64 * (-t499 + t552 * (t15 * (t227 + t455) + t466)) + t27 * t189 * (t63 * (-(t15 * (t14 * (-t3 * t456 + t421) + t15 * (t3 * t454 + t413)) + t181) * t15 + t426) + t64 * (t402 + (t15 * (-t3 * t448 + t306 + t387) + t147) * t15))));
t120 = t4 * (-t357 * t92 + t381) + t383;
t146 = t390 - t64 * (t120 * t552 - t366) + t389;
t147 = t174 * t207 * t397 + 0.3e1 * t146;
t181 = -t256 * t6 + t257 * t5;
t196 = -t352;
t286 = t87 * t5;
t337 = t224 * t8;
t25 = -t167 * t397 ^ 2 - t628 * (t174 * (t206 * (t64 * t4 * (t168 - t337) + t33 * t63) + t397 * (t391 - t146)) - t27 * t189 * (t63 * t4 * (t15 * (-t1 * t85 + t15 * (t14 * t75 - t15 * t68)) + t592 * t16) + t64 * t4 * (t17 * t6 * t7 + t377 * t6 * t602 - t26 * t52)) + t13 * t4 * (t322 * t52 * t6 * t7 + t128 * t159 * t63) - t64 * (-t15 * (t27 * t365 * (t141 - t126) + t531 * t13) + t552 * (-t123 * t359 * (t2 * t285 * t52 + t1 * t121) + t4 * (-t416 * t6 * t7 - 0.3e1 * t25 * t52))));
t26 = t45 * t52;
t33 = t340 * t5;
t68 = t7 * t14;
t75 = t169 * t1;
t26 = t27 * t164 * (t163 * (t63 * t545 * (t15 * (t1 * t87 + t15 * (t41 * t602 - t65 * t68)) - t68 * t17) + t64 * (t262 * t5 * t52 + t33 * (t15 * (-t26 + t48) + t94))) - t700 * t159 * t9) + t64 * (-t15 * t545 * (t133 * t39 + t425 * t80) + t552 * (t123 * t75 * (t47 + t26) + t545 * (-t16 * t27 * t39 + t112 * t92)));
t85 = t63 * t8;
t121 = t545 * (t64 * t68 + t85);
t262 = t206 * t121;
t322 = t678 * t397;
t365 = t13 * t369;
t366 = t46 * t5;
t369 = t184 * t6;
t383 = t13 * t369;
t386 = t366 + t383;
t387 = t340 * t13;
t389 = t223 * t13;
t141 = t123 * t552 * (t64 * t4 * (-t365 * t52 + t5 * (t15 * (t370 + t119) + t389)) + t396 * t141 * t14) + t27 * t189 * (t63 * (-t387 * (t392 * t27 + 0.3e1 / 0.2e1 * t393) - t359 * (t15 * (t14 * t27 * t352 - t15 * t386) - t344)) + t64 * (-t453 * t32 - t359 * (-t15 * t365 + t377 * t5)));
t365 = t5 * t714 * t8 - t182 * t6;
t377 = -t100 * t13 * t224 + t113 * t5;
t360 = t123 * t359 * (t351 + t360);
t390 = t13 * t4;
t87 = t15 * (t27 * t244 * t169 * (t86 + t87) + t390 * (t145 * t123 * t6 * t52 - t244 * (-t6 * t655 + t556)));
t396 = t164 * t140 * t32 * t123 * t52;
t416 = t27 * t189 * (t340 * t365 * t495 * t64 + t274 * t63 * t711);
t448 = t7 * t16 * t5;
t531 = t446 * t7;
t556 = -t52 + 0.1e1;
t593 = t1 * t6;
t100 = -t100 * t367 + t5 * t522;
t522 = t448 * t27;
t583 = t123 * t23 * t9 * t15 * t583;
t159 = t159 * t7 * t128;
t135 = t27 * t359 * t135 * m0 * t394;
t342 = t27 * (t385 * t4 + t164 * (t163 * (t63 * t340 * (-t15 * (t52 * t593 - t342 - t531) + t392 * t1 * t556) + t64 * t4 * (-t52 * t1 * (t5 * t505 + t367) + t23 * t8 * t15 * t714 + t448)) - t700 * t32 * t5));
t365 = t552 * (t64 * (t340 * t15 * t365 * t63 * t64 - t359 * (t559 * t52 + t58 * (t355 * t8 - t223))) + t32 * (t22 * t52 * t63 - t664 * t711));
t385 = t165 * (t32 * t5 * t52 * t702 + t395 * t52 * t63 * t64);
t394 = t545 * (t10 * t7 - t566);
t448 = t32 * t563;
t505 = t6 * t34;
t566 = t505 - t448;
t599 = t123 - t618;
t600 = t5 * t6;
t611 = t4 * (-t27 * t29 * t5 * t7 + t4 * t599 * t600);
t612 = t29 * t7;
t615 = t545 * (t4 * t572 + t612);
t624 = t6 * t12;
t638 = t6 ^ 2 - t563;
t639 = n3p * t638;
t641 = t639 * t27;
t646 = t123 * t86 * t638;
t655 = t6 * t595;
t705 = t123 * t3;
t706 = -t467 * t638;
t711 = t452 * t19;
t712 = t234 * t14;
t722 = t123 * t387 * t14 * t566;
t723 = t44 * t27;
t724 = t72 * t6;
t725 = t94 * t638;
t726 = t140 * t14;
t727 = -t46 * t638;
t728 = -t563 * t9 + t624;
t729 = t278 * t4;
t730 = t4 * t123;
t448 = t721 * (t234 * (t19 * t387 * t728 + t15 * (t15 * (t729 * (t505 - t448) + t4 * (t3 * (-t27 * t7 * (t68 * t140 - 0.3e1 / 0.8e1 * t467 * t6 + t366 * t603) + t726) + t4 * (-t19 * t724 * (0.1e1 + t565) - t621 * t725 + t592 * t479 * t7))) + t4 * (t3 * (t40 * t19 * t6 + t68 * (-t351 - t606)) + t4 * (t19 * t45 * t638 - t14 * (t621 * (t727 / 0.3e1 + t453 * t6) + t604 * t565))))) + t720 * (t14 * (t123 * t615 + t52 * t611) + t27 * t359 * (t556 * t563 * t9 + t624 * t714)) * t161);
t21 = t181 * t232 - t257 * (t322 - t628 * (t174 * (t146 * t442 + t397 * t438 + t262) - t26)) - t258 * (t323 - t628 * (t174 * (t146 * t331 + t327 * t397 + t319) - t27 * t189 * (t63 * t3 * (t15 * (-t1 * t344 + t15 * (t14 * t67 - t15 * t66)) + t380) + t64 * t3 * (-t21 * t52 + t378 + t168 * (t370 + t43) * t1)) - t64 * (-t15 * (-t27 * t316 * (t362 + t286) - t136 * t3 * t13) + t552 * (t123 * t315 * (t1 * t291 * t5 - t196 * t2 * t52) + t3 * (t357 * t92 - t381))) + t318)) + (t232 * t258 + t257 * t325) * t666 * t6;
t66 = (t123 * t729 * t63 * t566 - (t161 * (t660 * (-t123 * t341 * t566 - t234 * (-t394 * t52 + t394)) + t723 * t611 * t53 + t722 - (t15 * (t15 * t4 * (t4 * (t7 * (t5 * t587 * t95 - t641) + t646) - t705 * (t347 * t597 + t655)) + t4 * (t3 * (t596 * t58 - t637 * t587 * t7 - t712 * (t95 + t629)) + t4 * (t140 * (-t565 * t587 - t123) * t6 - t601 * t14 * (t5 * t711 - t706)))) + t4 * (t4 * (t7 * (-0.12e2 * t5 * t95 - t641) + t646) - t705 * (t347 * t614 + t655))) * t15) - t57 * t359 * (-t4 * t563 * t644 + t6 * t647) - t722 + t326 * t4 * (-t730 * t600 * (0.3e1 + t618) - t601 * t29 * t5)) * t64 - t448) * t124 * t211 * t213 * t217 * t209 * t654;
t67 = (t216 * (-t512 * t397 * t211 * t124 + t671 * (-t416 + t396 + t64 * (t552 * (t377 * t4 * t92 - t360) - t87))) + t218 * (-t397 * t669 * t211 * t124 + t36 * (-n3p * (-t342 + t64 * (-t15 * (t135 + t4 * (t136 + t159)) + t552 * (t4 * (t100 * t92 + t522) + t583))) + n3ppp * t385))) * t209 * t215;
t291 = 0.3e1 * t438;
t316 = t207 * t442 * t174;
t318 = t14 * t210;
t319 = -t3 * t47;
t125 = t125 * t6 - t279;
t241 = t48 * t3 + t241;
t279 = t326 * t12;
t323 = t155 * t64;
t18 = -t167 * t442 ^ 2 + t628 * (t174 * (t206 * (t323 - t675) + 0.2e1 * t442 * t438) - t27 * t164 * (t163 * (t63 * (t15 * (-t1 * (t299 * t6 + t297) + t15 * (n3p * t15 * t90 - t12 * t14 * t65)) - t243) - t64 * (t433 * t18 * t34 + t1 * (t15 * (t279 + t241) + t467 * t34))) + t436 * t34 * t52) - t64 * (t15 * (t13 * t133 * t34 - t414 * t425) - t552 * (-t123 * t15 * (-t1 * (t276 - t319) + t2 * t179 * t52) - t284 + t92 * (-t114 * t4 * t6 + t112 * t3))));
t65 = t278 * t34;
t112 = (t65 + t179) * t15;
t114 = t184 * t12 * t13;
t133 = t13 * t34;
t167 = (-t133 * t355 - t179) * t15;
t179 = (t27 * t14 * (-t415 + t412) + t15 * (n3p * t34 * t52 + t414)) * t63;
t243 = -t495 * t526 * t244;
t113 = -t123 * t15 * (t1 * t133 - t412) + t92 * (-t115 * t4 * t6 + t113 * t3);
t91 = t15 * (t27 * t485 * (t2 * t472 + t423) + t123 * t244 * t91 * t13);
t115 = t27 * t189 * (t64 * t602 * (-t166 * t52 + t133) + t491 * t107 * t15);
t276 = t279 * t164 * t123;
t279 = t2 * t34;
t284 = t16 * t34;
t297 = t35 * t2;
t110 = -t27 * t164 * (t163 * (-t63 * (t14 * (t284 * t52 - t539) + t602 * t526) - t64 * (t433 * t514 + t1 * (t15 * (-t557 + t279) + t431))) + t700 * t12) - t64 * (t15 * (-t12 * t128 * t13 + t297 * t425 + t424) - t552 * (t123 * t15 * (t2 * t410 * t52 - t1 * t279) - t92 * t110 * t12 - t27 * t16 * t12));
t279 = -t155;
t299 = t552 * (t64 * (t64 * (t63 * t15 * (t1 * t34 - t410 * t52) + t554 * t279) - t15 * (t1 * t279 - t15 * t297)) + t439 * t52 * t2);
t326 = t165 * t52;
t341 = t326 * (t12 * t702 - t441 * t63);
t344 = t8 ^ 2;
t362 = -t565 + t344;
t370 = t568 * t362;
t378 = -t123 * t580 - t344 - t370 + t565;
t380 = t3 * t362 * t4 * t6 - t571;
t381 = -t389 * t564;
t389 = t224 * t140;
t412 = t389 * t123 * t7;
t424 = t445 * t234;
t433 = t72 * t20;
t441 = t467 * t362;
t448 = -t19 * t563 + 0.1e1;
t453 = t41 * t448;
t505 = t452 - t347;
t554 = t14 * n3p;
t557 = t44 * t14;
t568 = t8 * t27;
t571 = t467 * t6;
t592 = t571 * t565;
t556 = t495 * (t511 * t12 * t123 - t662 * (t27 * t15 * (t182 * t380 + t556 * t574) - t716 * t380)) - t234 * (-t617 * t19 + (t15 * (t142 * t12 - t46 * t20 + t4 * (t3 * (t6 * (-n3p * t19 * t565 + t123 * t625) - t568 * t623) + t4 * (t557 * t564 * t362 + t7 * (-t564 * t594 + t604 * t621))) + t557 * t362) - t19 * t94 * t14 * (-t631 + t632) + t4 * (t3 * (-t140 * t20 - t14 * (t630 * t8 + t592)) + t4 * (t39 * (t19 * t635 - t634) - t600 * t42 * t603))) * t15) * t161;
t18 = t257 * t18 + t258 * (-t252 + t628 * (t174 * (t327 * t442 + t331 * t438 + t384) + t27 * t164 * (t163 * (t64 * (t1 * (t15 * (-t49 * t6 + t329 - t50) - t333) - t348) + t298) + t313) - t64 * (t15 * (-t125 * t425 - t379) - t552 * (t123 * t15 * (t1 * (t319 * t6 - t275) - t350) + t364 - t372))));
t49 = (t63 * t556 - (t161 * (t660 * (-t123 * (t194 * t59 + t378 * t52 + t344 + t370 - t565) - t580 * t587) + t123 * t13 * (t2 * t380 * t53 + t431 * t59) - (t15 * (t15 * (t234 * t441 + t4 * (t4 * (t234 * t381 * t7 - t591 * t8 - t412) - t705 * (t39 * (-t424 + t446) - t433))) - t27 * t554 * t362 - t610 + t4 * (t3 * (-t234 * t505 * t68 + t339 * t362 * t587) + t4 * (-t234 * t14 * (t19 * t453 * t7 - t605 * t8) - t610 * t564))) + t4 * (t4 * (-t381 * t57 * t7 - t590 * t8 - t412) - t705 * (-t433 + t39 * (t445 * t57 + t446))) - t441 * t57) * t15) + t719 * t380 - t545 * (t170 * t353 * t13 - t15 * (-t4 * t6 * t645 + t3 * t644) * t57)) * t64) * t124 * t211 * t213 * t217 * t209 * t654;
t18 = t1 * (-t444 + t77 * (t208 * (t174 * (t108 * t442 + t195 * t438) + t210 * (t27 * t189 * (t409 * t64 + t63 * (t182 * (-0.3e1 * t15 * t411 + t418) - t417)) + t310 - (-t407 * t552 + t427 - t428) * t64) + t318 * (t316 + t291) * t208) - t101 * t34)) + t2 * (-t678 * t247 - t628 * (t174 * (-t245 * t442 - t247 * t438 - t677) + t63 * (t27 * t422 * t552 - t434) + t685 * t673 - t165 * (-t201 * t238 - t361 * t63) + t249 * (-t316 - t291))) + t336 * (t322 + t628 * (t174 * (t391 * t442 - t397 * t438 - t262) + t26)) + t666 * t18 - t49 + (t216 * (-t512 * t442 * t211 * t124 - t671 * (t115 - t64 * (-t113 * t552 + t91) - t276)) + t218 * (-t442 * t669 * t211 * t124 + t36 * (n3p * t110 + n3ppp * t341))) * t209 * t215;
t18 = -t27 * t628 * (n3pp * t299 + t442 * t88 - t305 * (-t123 * t64 * (t552 * (t15 * (-t293 + t167) + t432) - t243) + t27 * t189 * (t64 * (t114 - (-t406 + t112) * t15) + t179))) + t18;
t26 = -t465 - (t51 + t149) * t15;
t49 = t15 * (t122 + t450) + t415;
t51 = t57 * t189 * (t26 * t64 + t457) + 0.12e2 * t64 * (t49 * t552 + t468);
t77 = -t51 * t174 / 0.3e1;
t149 = 0.3e1 * t160;
t194 = t59 * t13;
t201 = (-t15 * t460 + t194) * t15;
t252 = t63 * t472;
t262 = t252 * t15;
t275 = t495 * t244 * t35;
t291 = (-t4 * t447 - t449 + t534) * t15;
t298 = t184 * t34;
t310 = t521 * t52;
t313 = (t12 * t355 - t4 * t447 - t449) * t15;
t82 = (t15 * (t4 * t82 - t518) - t27 * (t14 * (t90 + t310) + t33 * t54)) * t63;
t316 = t61 + t59;
t319 = t316 * t15;
t322 = t63 * (t319 - t12) * t15;
t327 = t35 * t15;
t329 = -t39 * t564;
t333 = -t572 * t13;
t348 = t160 * t35;
t350 = t166 * t59 * t123;
t355 = t160 * t12;
t361 = t19 * t14;
t362 = t361 * t631 * t632;
t364 = t234 * t63;
t112 = t257 * t628 * (t77 * t442 + t123 * t64 * (t552 * (t15 * (-t293 + t167) + t432) - t243) - t27 * t189 * (t64 * (t114 - (-t406 + t112) * t15) + t179)) + t258 * t628 * (t77 * t331 + t123 * t64 * (t552 * (t15 * (-t294 + t455) + t466) - t499) - t27 * t189 * (t63 * (-(t15 * (t14 * (-t3 * t456 + t421) + t15 * (t3 * t454 + t413)) - t280) * t15 + t426) + t64 * (t402 + (t15 * (t443 + t306) + t270) * t15)));
t114 = (-t36 * t14 * t207 * t218 + t654 * (t64 * (-t364 * (t15 * (t355 * t621 * t15 - t362 * t13 - t4 * (-t4 * t14 * (t13 * t19 * t577 - t13 * t621 * t627) + t612 * t224 * t13)) - t355 * t19) * t64 - t350 - t495 * t27 * t584 * t63 * t163) - t163 * (t495 * t576 * t161 - t234 * t348 * t52 - t350 - t15 * (t52 * (t7 * (t234 * t329 * t567 - t234 * t39) + t705 * t123 * t333 * t4) + t7 * (-t329 * t567 * t57 + t39 * t57) - 0.3e1 * t705 * t333 * t4))) * t124 * t211 * t217) * t209 * t213;
t167 = t2 * t63;
t179 = t249 * t1;
t243 = t663 * t174;
t270 = t174 * t210;
t280 = t270 * t215 * (t209 * (n3pp * t165 * (t64 * (t35 * t685 - t322) - t327) * t211 * t216 - t167 * (t1 * (t27 * t189 * (t63 * (-t27 * (t14 * (t460 * t52 + t459) + t470) + t149 * t15) + t64 * (t133 * t52 - t166 * t27)) + t165 * t123 * (-t133 * t52 + t166)) + t469) * t211 * t218 + t179 * t504 * t211) + t243 * t1);
t293 = t123 * t15 * (-t52 * t99 + t498) + t476;
t294 = t503 + t64 * (-t293 * t552 + t500) - t430;
t350 = -0.3e1 * t294;
t294 = t294 * t174;
t370 = t160 * t15;
t372 = t57 * t161;
t379 = (-t29 * t57 * t2 + (-0.3e1 * t27 * t345 * t6 + 0.3e1 * t473) * t4) * t52;
t384 = t27 * t485 * (-t2 * t279 + t526);
t391 = t123 * t244 * (t14 * t449 + t511 * t52);
t402 = t27 * t189 * (-t64 * t602 * (t15 * (-t61 - t59) + t12) + t327 * t491);
t144 = t429 * t144 * t123;
t406 = t552 * (t64 * t52 * (t169 + t279) + t429 * t63);
t407 = t586 * t13;
t409 = t10 * t3;
t411 = t52 + 0.1e1;
t412 = t13 * t582;
t413 = t224 * t13;
t415 = t413 * t619;
t417 = t160 * t34;
t418 = t370 * t34;
t418 = (-t63 * (t161 * (-t19 * t417 * t15 - t52 * (-t3 * t4 * t415 + t39 * t569 * t68 + t418)) * t234 + t418 * t123) + t64 * (t161 * (-t123 * t15 * t407 * t411 + t52 * (-t412 * t27 * t52 + t13 * (t7 * (-t409 * t587 + t601) - t57) + t567 * t13 * (t234 * t577 + t609))) + t15 * (t107 * t545 * t57 - t495 * t643))) * t124 * t211 * t213 * t217 * t209 * t654;
t71 = (t218 * (t206 * t247 * t211 * t124 + t36 * (-n3p * (-t402 - t64 * (t15 * (-t480 * t4 + t384 - t391) - t552 * (-t123 * t15 * (t431 + t520) + t379)) + t144) - t245)) - t36 * t63 * t207 * t217 + t419 * t71 * t15 * (-t64 * (t123 * t485 * (-t370 + t107) - t185 * t164 * t27) + t164 * (t123 * t166 - t133 * t372) * t15)) * t209 * t215;
t194 = t174 * t218 * t215 * (t243 * t2 + (-n3pp * t406 - t179 * (t2 * (t123 * t64 * (t552 * ((-t15 * t460 + t194) * t15 + t460) * t15 + t275) - t27 * t189 * (t64 * t15 * (t496 + t460) + t262)) + t469)) * t211 * t209);
t243 = t232 * t6 + t325;
t325 = t3 * t666;
t370 = t4 * t666;
t138 = -t532 + t530 - t138 - t139;
t139 = t15 * t138;
t421 = t543 + t64 * (t139 - t541);
t422 = -0.3e1 * t421;
t421 = t421 * t174;
t425 = -t346 * t564;
t426 = t337 * t22 * t123;
t427 = t345 * t564;
t428 = t709 * t6;
t430 = t528 * t34;
t90 = t161 * (-t234 * (-t545 * t90 * t19 - (t15 * (t430 - t4 * (t4 * t622 * t8 + t3 * (t367 * t619 - t368 * t621)) + t570 * t102) + t362 * t1 - t4 * (-t3 * t8 * (t19 * t22 + t225) + t4 * (-t1 * t14 * t621 * t627 + t19 * t636))) * t15) - t184 * t15 * t161 * t584) - t430 * t123;
t24 = t257 * t628 * (t421 * t442 - t110) + t258 * t628 * (t421 * t331 + t27 * (t321 + t164 * (t163 * (t63 * (t15 * (t1 * (t3 * t516 + t692) - t693) - t694) - t64 * (t15 * (t15 * (-t3 * t507 + t261 + t688) - t689) + t690)) + t701)) - t64 * (-t301 + t552 * (t696 - t697 + t92 * (-t24 * t3 + t695))));
t110 = t419 * t93;
t90 = (t128 * t663 + t654 * (t63 * t90 - (t161 * (t602 * t576 * t161 - t575 - (t15 * (t15 * (t4 * (t4 * (t234 * t425 * t7 - t426) - t705 * (t593 * t597 - t531)) - t223 * t234 * t8) + t2 * t613 + t4 * (t3 * t8 * (-t345 * t587 * t6 + t234 * t709) + t4 * (t234 * t7 * (t428 + t427) + t609 * t2))) + t4 * (t4 * (-t425 * t57 * t7 - t426) - t705 * (t593 * t614 - t531)) + t223 * t57 * t8) * t15 + t656) + t643 * t2 * t52 - t545 * (-t14 * t34 * t353 + t15 * t526 * t57)) * t64)) * t211 * t124 * t217 * t209 * t213;
t261 = t628 * (n3p * (-t128 * t545 * t63 + t527 * t685) - t305 * (t123 * t64 * (t552 * (t15 * (t510 + t313) + t408) + t462) + t27 * t189 * (t64 * (-(t510 + t291) * t15 - t298) + t82)));
t24 = -t27 * t261 + t1 * t93 * (t210 * (t14 * t422 * t208 + t27 * t189 * (t64 * (t14 * (-t15 * t513 + t538) - t175 * t54 + t102 * t60 * t1 * t52) + t537) - t309 - (-t138 * t14 - t525 * t552 + t536) * t64) - t421 * t195) + t2 * t628 * (t249 * t422 + t27 * t64 * (-t189 * t519 + t679) + t508 - t63 * (t27 * t523 * t552 - t139) - t685 * (-t529 - t230 - t231) - t421 * t247) + t336 * t628 * (t421 * t397 - t342 - t64 * (t15 * (t135 + t4 * (t136 + t159)) - t552 * (t4 * (0.3e1 * t100 * t52 + t522) + t583))) - t666 * t24 - t110 * (-t402 - t64 * (t15 * (t384 - t391 - t481) - t552 * (-t123 * t15 * (t431 + t310) + t379)) + t144) - t90;
t60 = t27 * t558;
t90 = t249 * t57;
t100 = t247 * t174;
t135 = t558 * t174;
t136 = t8 * t448;
t110 = -t27 * (-t336 * t628 * (t135 * t397 + t365) + t666 * (t257 * t628 * (t135 * t442 + t299) + t258 * t628 * (t135 * t331 + t302)) + t110 * t406) + t1 * t93 * (t210 * (-t14 * t558 * t208 * t57 + t27 * t189 * (t547 * t63 - t64 * t1 * (t549 - t550)) + t552 * (t535 * t64 - t130)) - t60 * t174 * t195) + t2 * t628 * (-t558 * (t100 * t27 + t90) + t546) - t628 * (-t544 + t270 * (t64 * (t64 * (t27 * t545 * t34 * t15 * t411 + t52 * (t224 * t597 * t3 * t4 + t68 * (-t136 * t19 * t234 * t567 + t568))) - t364 * t15 * (t15 * (-t603 * (-t567 * t620 - t565 + 0.1e1) - t409 * t20) - t603 * t586)) - t169 * t34 * t27) * t64 * t208 * t654) - t205 * t353 * t2 * t165 * (-t322 * t64 + t327 * t702);
t130 = t562 * t174;
t60 = t1 * t93 * (t210 * (t27 * t165 * (t182 * (t161 * t34 - t34) + t560) - 0.3e1 * t14 * t562 * t208) - t130 * t195) + t2 * (-t628 * (t100 * t562 - t548) - 0.3e1 * t205 * t562) + t336 * t628 * (t130 * t397 - t385) - t666 * (t257 * t628 * (t130 * t442 - t341) + t258 * t628 * (t130 * t331 - t703)) - t60 * t628;
t100 = 0.1e1 / J__3;
t130 = 0.1e1 / J__2;
t135 = t255 * (J__1 - J__3);
t138 = t254 * (J__1 - J__2);
t139 = -t135 * (t243 * t325 - t312 * t4) * t130 + t138 * (t243 * t370 + t3 * t312) * t100;
t144 = t491 * t64;
t71 = t144 * (-t27 * t194 + t1 * t93 * (t210 * (t14 * t350 * t208 - t27 * t189 * (t63 * t1 * (-t489 + t488) - t490) - t493 + (t552 * (t14 * (t15 * (0.12e2 * t15 * t99 - t477) - t478) + t104) - t483 + t487) * t64) - t294 * t195) + t2 * t628 * (t249 * t350 + t165 * (-t238 * t484 + t502 * t63) - t63 * (t27 * t293 * t552 - t500) - t685 * t226 - t294 * t247) + t336 * t628 * (t294 * t397 - t416 + t396 + t64 * (-t87 + t552 * (0.3e1 * t377 * t4 * t52 - t360))) - t666 * (t257 * t628 * (t294 * t442 - t115 + t64 * (-t113 * t552 + t91) + t276) + t258 * t628 * (t294 * t331 - t435 + t64 * (t15 * (t13 * (t3 * t480 + t371 - t482) - t27 * t485 * (t300 + t661)) - t552 * (t123 * t15 * (-t317 + t657) + t92 * (-t3 * t474 + t626))) + t670)) - t418 - t71);
t31 = t27 * t354 - t57 * t251 * (t282 - t277) + t1 * (t93 * (t174 * (-t171 * t206 + t195 * (t193 - t192)) + t210 * t31 + (t174 * t219 + t200 * t210) * t208 * t14) - 0.3e1 * t117 * (t101 * t195 - t108) + t222 * t210 * t209 * (t212 * t216 * t221 * t55 - t195 ^ 2 * t220)) + t2 * (0.3e1 * t251 * (t207 * t249 + t245 - t248) + t93 * (t210 * (t174 * (-t192 * t247 + t63 * (t195 * t206 + t219)) + t165 * (-t178 * t234 * t63 + t183 * t238) + t14 * (t143 * t64 - t148 * t63) + t15 * (-t153 * t64 + t154 * t63) - t164 * t27 * t186 * t64 * t63 + t249 * t200) + t245 * t174 * t195) - t253 * t247 * t195) + t336 * t358 - t105 * t666 - t263 - t103 - 0.3e1 * t117 * (t210 * (t668 - t667) + t512) - t283 * t123 * t124 * t211 * t214 * t217 * t209 * t14 - t71;
t18 = t257 * t18 + t258 * (-t27 * t116 + t1 * (-t335 + t93 * (t174 * (t108 * t331 - t195 * t289 + t334) + t210 * (t27 * t189 * (t63 * (t15 * (t180 * t52 + t281) + t187 * t14 + t182 * (-t188 * t27 + 0.3e1 * t190)) + t64 * (t15 * (t13 * t152 * t52 + t1 * t266 + t14 * t28) - t176 * t14 - t273 * t92 * t14)) + t311 + (t137 * t14 - t15 * (t27 * t145 * (t14 * t239 - t307) - t308) + t552 * (t15 * (t15 * (0.12e2 * t102 * t191 - t106 * t3 + t288) - t295 + t14 * t204 * t57) + t353 * t227 * t14)) * t64) + t290 * t210 * t208 * t14)) + t2 * t131 + t336 * t324 - t666 * t30 - t257 * t312 - t70 - t76);
t28 = t254 * t255;
t30 = t28 * (J__2 - J__3) / J__1;
t70 = t296 * t184;
t26 = t70 * (-t27 * t280 + t1 * t93 * (t210 * (t51 * t14 * t208 + t27 * t189 * (t63 * t458 + t64 * (t182 * (-t27 * t451 + t177) - t15 * (t198 + t38) + t199)) - t151 + t165 * (t123 * (-t122 * t14 + t461) + t463)) - t77 * t195) + t2 * t628 * (t249 * t51 - t234 * t680 * (t161 * t26 + t49) + t157 + t89 - t77 * t247) + t336 * t628 * (t397 * t77 + t141) - t666 * t112 - (t216 * (t195 * t206 * t211 * t124 + t671 * (t123 * t64 * (t552 * (t460 + t201) * t15 + t275) - t27 * t189 * (t497 * t64 + t262))) + t36 * (-n3p * (t123 * t64 * (t552 * (t15 * (t510 + t313) + t408) + t462) + t27 * t189 * (t64 * (-(t510 + t291) * t15 - t298) + t82)) - t193) * t218) * t209 * t215 - t114);
t49 = t12 * t64;
t51 = t64 * (t35 * t63 - t49);
t71 = t15 * t161;
t76 = t552 * t52;
t77 = t76 * (t494 * t71 + t51);
t82 = -t304 - t173;
t87 = t64 * t316;
t89 = t111 - t17;
t91 = t89 * t34;
t99 = t155 * n3pp;
t101 = t63 * t64 * t99 - t109 * t166 + 0.3e1 * t161 * t91;
t103 = t165 * t1;
t104 = t63 * t423;
t105 = t241 * t64;
t106 = t105 + t104;
t111 = t44 * t521;
t112 = t240 * t128;
t113 = t27 * t552 * (t106 * t551 - t111) - t112 * t34;
t114 = t608 * t61 * n3pp * t52;
t17 = t27 * t15 * (t552 * (-t17 * t439 * t64 + t101 * t14) - t103 * (t38 * t64 + t63 * t78));
t38 = t716 * t189 * n3pp * t34 * t54;
t78 = t170 * t63 + t246;
t115 = t165 * t16;
t116 = t115 * t78;
t117 = t429 * t161;
t122 = t15 * (t653 * (-n3pp * t117 + t101) + t113) + t27 * t116 * t13;
t131 = t37 * n3pp;
t137 = 0.3e1 * t8 * t89;
t73 = t137 * t6 - t27 * t73;
t143 = 0.3e1 * t11 * t89;
t145 = t4 * t73 - t143;
t23 = -n3pp * t224 * t7 - t13 * t23 * t27;
t148 = t29 * t14 * n3pp;
t151 = -t23 * t4 + t148;
t153 = t64 * (-t145 * t64 + t151 * t63) + t436 * t12;
t83 = -t452 + t83;
t154 = t15 * t83;
t69 = t15 * t69 + t154 * t4;
t157 = t64 * t69 + t158;
t158 = -m0 * t134 * t160 * t685 - t103 * t157 * t27;
t159 = t81 * t58;
t171 = t13 * t159 - t405;
t176 = t171 * t4 + t404;
t177 = t369 * t7 + t446;
t178 = t184 * t29;
t180 = t177 * t4 + t178;
t183 = t129 * t12;
t186 = t228 * t180;
t187 = t176 * t64;
t188 = t63 * t127;
t190 = -t27 * t103 * (-t188 + t187) - t13 * (t183 + t186);
t191 = t540 * t608 + t679;
t192 = t545 * t52 * t64;
t193 = t131 * t63;
t194 = t165 * t15;
t198 = t15 * t191 * t13;
t199 = t15 * (t194 * (n3pp * t192 + t193) - t158);
t200 = 0.3e1 * t59;
t204 = t123 * t61 + t200;
t205 = t71 * n3pp;
t207 = t492 * t64;
t219 = t207 * (-t153 * t27 - t204 * t205);
t220 = t14 * t190 + t198 + t199 + t219;
t221 = t14 * t246 + t439;
t222 = t173 * t14;
t226 = t49 - t222;
t227 = t129 * t59;
t230 = t13 * (-t115 * t226 * t27 + t227) + t15 * (t653 * (t205 * t316 + t153) - t190);
t231 = 0.1e1 / t82;
t240 = t230 * t231;
t241 = t240 * t34;
t243 = t211 * t210 * t209;
t248 = t243 * t231 * t212;
t251 = t221 * t240 + t122;
t253 = t211 * t213;
t261 = t253 * t216 * t209 * t231 * t14;
t262 = t231 ^ 2;
t263 = t27 * t230;
t266 = t263 * t215 * t211 * t216 * t209 * t231 * t262;
t273 = t266 * t221;
t275 = 0.3e1 * t32 * t89;
t276 = t9 * t14 * n3pp;
t277 = t23 * t3 + t276;
t280 = (-t3 * t73 - t275) * t64;
t281 = t436 * t260;
t282 = t64 * (t277 * t63 - t280) - t281;
t283 = t63 * t306;
t288 = t685 * t320 * t134 * m0;
t289 = -t171 * t3 + t50;
t290 = t184 * t9;
t291 = -t177 * t3 + t290;
t293 = t228 * t291;
t294 = t129 * t260;
t295 = t289 * t64;
t296 = t63 * t300;
t298 = -t27 * t103 * (t296 + t295) + t13 * (-t293 + t294);
t299 = t419 * t165 * t27;
t301 = t194 * (n3pp * t3 * t5 * t52 * t64 + n3pp * t15 * t264 * t63);
t302 = -t15 * (t128 * t320 + t264 * t299) * t13;
t306 = 0.3e1 * t332;
t307 = t205 * (t123 * t501 + t306);
t308 = t260 * t64;
t309 = t330 * t14;
t310 = t308 - t309;
t311 = t129 * t332;
t312 = t501 + t332;
t313 = t205 * t312;
t317 = (t115 * t27 * t310 - t311) * t13;
t320 = t15 * (-t298 + t653 * (t282 - t313)) + t317;
t321 = -t64 * t699 - t330;
t322 = t230 * t64 * t312;
t324 = t215 * t211;
t327 = t324 * t216 * t209;
t332 = t327 * t231;
t334 = t240 * t321 + t320;
t335 = t266 * t321;
t341 = t335 * t87;
t342 = t64 * t514;
t350 = -t109 * t12 + t64 * (-t175 * t27 * t63 + 0.3e1 * t342);
t354 = t345 * t6;
t159 = t159 - t354;
t358 = -t159 * t4 + t2 * t29;
t360 = t358 * t64;
t362 = t63 * t526;
t183 = -t27 * (-t103 * (t362 + t360) + t183) - t186;
t186 = t653 * t350;
t364 = t27 * (t164 * (t12 * t163 - t161 * t222) * t16 - t227);
t368 = t364 + t15 * (t183 + t186);
t371 = t452 * t5;
t377 = t4 * (-t19 * (t467 * t578 + t371) + t467 * t563);
t379 = -t633 * t565 + t4 * (t11 * t285 + t377);
t384 = t197 * t63;
t385 = t467 * t603;
t391 = -t163 * t385 * t582 - t12 * t384 + t379 * t64;
t97 = n3p * t603 + t5 * t97;
t396 = t577 * t27;
t402 = t19 * t454;
t405 = t563 - t19;
t406 = t27 * t405 - t577;
t408 = t353 * t160;
t409 = t123 * t40 * t564 * t7 - t396 * t554 - t712 * t97;
t411 = t14 * t402;
t416 = -t7 * (t45 * t6 + t411) + t339 * t19;
t418 = -t123 * t119;
t421 = t234 * t3;
t422 = -t4 * t416 * t421 + t409 * t567 + t418 * t7;
t426 = t571 + t366;
t46 = -t19 * t426 * t5 + t46;
t429 = t351 - t74;
t430 = t27 * t86 - t41;
t431 = t6 * t7;
t432 = -t19 * t429 + t430 * t431;
t79 = (t723 * t14 * t405 - t7 * (t564 * t79 - t46)) * t4;
t433 = t4 * (t3 * t432 + t79) - t595 * t7;
t434 = t27 * t573;
t435 = t155 * t163 - t161 * t173;
t438 = t123 * t64 * (t1 * t160 * t435 + t433 * t63) + t161 * t422 - t44 * t434;
t429 = t27 * t94 - t429 * t5;
t443 = t184 * t5;
t444 = -t515 + t443;
t445 = t13 * t444 - t711;
t86 = -n3p * t20 + t86;
t447 = -t123 * t86;
t448 = t447 * t3;
t449 = -t184 * t13 + t545 * (t445 * t730 + t448);
t450 = t635 * t39;
t225 = t7 * (t225 - t22);
t451 = -t13 * t225 + t361 * t426;
t452 = (t118 * t429 - t450) * t4;
t454 = -t118 * t94 + t4 * (t3 * t451 + t452);
t455 = t721 * t14 * t573;
t456 = t581 * t163;
t457 = t123 * t64 * (t454 * t63 + t467 * (-t456 - t455)) + t161 * t449 + t650 * t202;
t458 = t33 * t63 * t64 + t509;
t459 = t13 * t458;
t461 = t446 * t4;
t462 = t461 + t180;
t463 = t464 * t164;
t133 = t133 * t64;
t465 = t63 * t107;
t466 = t27 * t103 * (t465 + t133) - t463 * t462;
t468 = t653 * t459;
t469 = t468 * t123;
t470 = t27 * t552 * (t144 * t486 - t142) * t15;
t472 = t323 - t173;
t473 = -t64 * (t234 * t391 * t54 + t408 * t472) + t15 * (t15 * t438 + t457);
t474 = t552 * (t184 * t63 * t534 * t64 + t169 * (-t542 - t109)) * t15;
t476 = t27 * t15 * (t552 * (t16 * t173 * t64 + t14 * t350) + t679);
t477 = t279 * t64 + t173;
t478 = t103 * t477;
t75 = t15 * (t189 * t75 + t478);
t480 = t602 * t189;
t478 = -t27 * (-t14 * t478 - t480 * t61) + t353 * t189 * t59 * t15;
t192 = t207 * (t204 * t71 + t27 * t51) - t326 * (t37 * t63 + t192);
t137 = t137 * t5 + t184 * t74;
t204 = -n3pp * t58 * t7 + t184 * t339;
t481 = t39 * t109;
t482 = t481 * t5;
t483 = t64 * (t137 * t64 + t204 * t63) - t482;
t484 = t4 * t483;
t486 = t340 * t165;
t413 = -t413 * t81 - t48 * t5;
t443 = t443 * t7 - t367;
t487 = t39 * t128;
t488 = t487 * t5;
t489 = t228 * t443;
t490 = t488 + t489;
t493 = t363 * t63;
t494 = t64 * t413;
t495 = t494 - t493;
t496 = -t27 * t486 * t495 - t390 * t490;
t497 = t63 * t7;
t498 = t497 * t5;
t299 = t359 * (t299 * t5 * t7 - t129 * t6) * t13;
t134 = t15 * (t27 * t486 * (t64 * t15 * (t366 + t343) + t637 * t63 * t15) + t464 * t359 * t134 * m0 * t6 + t326 * n3pp * t4 * (t6 * t685 - t498));
t326 = 0.3e1 * t224;
t343 = t359 * t161;
t359 = t343 * n3pp;
t366 = t207 * (-t27 * t484 + t359 * (t123 * t398 - t326));
t499 = t64 * t8;
t500 = -t63 * t68 + t499;
t501 = t115 * t545;
t502 = t129 * t224;
t503 = -t13 * (-t27 * t500 * t501 - t4 * t502) + t15 * (t496 + t653 * (-t359 * t399 + t484));
t392 = t393 + t392;
t498 = t392 * t64 - t498;
t504 = t4 * t498;
t507 = t230 * t400 * t64;
t508 = t240 * t504 + t503;
t509 = t266 * t504 * t87;
t145 = t27 * t145;
t512 = -t151 * t161 + t63 * (-t145 * t64 + t151 * t63);
t513 = t123 * t235;
t69 = t164 * (t1 * (-t150 * t163 * t27 + t150 * t513 * t64 + t57 * t69 * t721) + t185 * t109 * t15);
t150 = t163 * t127;
t514 = t176 * t57;
t516 = t44 * t180;
t518 = t164 * (t1 * (-t127 * t513 * t64 + t150 * t27 + t514 * t721) + t516 * t63);
t519 = -t513 + t236;
t520 = t539 * t653 * t519 * t13;
t522 = t63 * t153;
t523 = t512 * t64 + t522;
t525 = 0.12e2 * t61 * t14;
t92 = t608 * t52 * n3pp * (t545 * (-0.9e1 * t55 + t92) - t525);
t527 = -t513 + t236;
t528 = t49 * t57 * t63;
t529 = t552 * t16;
t530 = t164 * t15;
t531 = t529 * (t14 * t34 * t527 + t528) * t13;
t532 = t608 * n3pp * t54;
t534 = 0.3e1 * t532 * t316;
t535 = t534 + t15 * (t523 * t530 + t518) - t531;
t303 = -t303 * t63 + t246;
t536 = t230 * t316 * t63;
t537 = t240 * t303;
t538 = t230 * t249 + t537;
t327 = t327 * t262;
t539 = t35 * n3pp;
t540 = 0.10e2;
t198 = -t14 * t190 - t198 - t199 - t219;
t199 = 0.2e1 * t230;
t219 = t87 * t231;
t55 = -0.3e1 * t332 * ((t219 * t199 + t198) * t208 * t14 - t230) + t332 * (t231 * (-t230 * t304 + t87 * (-t220 + t198)) - t153 * t27 * t552 * t56 - t123 * t194 * (t49 * n3pp * t54 + t193 * t14) - t13 * t14 * t191 + 0.2e1 * t14 * t158 - t15 * (t608 * t539 * t15 + t27 * t103 * (t156 * t63 + t64 * (t14 * t4 * t83 + t42 * t3)) + t233 * t13 - t190) - t189 * t182 * n3pp * (t545 * (t52 * t540 - t62) - t525) + 0.3e1 * t220 * t208 * t14) + t332 * (t263 * t262 * t87 ^ 2 + 0.12e2 * t230 * t212 * t55);
t56 = -t95 * t57 - t589;
t62 = t4 * t56 + t98 * t57;
t83 = t64 * (-t384 * t27 + t62 * t64);
t98 = t27 * t552 * (t64 * (t188 - t187) - t44 * t34) - t200 * t467 * t189;
t149 = (-t157 * t165 * t27 - t480 * t149) * t15;
t156 = t653 * (t27 * t83 * t14 + t640 * t63 * t64);
t157 = t15 * (-t468 * t27 + t466);
t158 = t123 * t103 * t226;
t187 = t15 * (t653 * t83 + t98) + t158 * t13;
t190 = n3p * t368;
t191 = n3ppp * t77;
t200 = -t191 + t190;
t233 = t36 * t473;
t263 = t233 * t262 * t218 * t209 * t654;
t10 = -t263 * t87 + (t195 * t654 * t473 * t124 * t211 * t216 + t36 * (t654 * (t15 * (t64 * (-t123 * t64 * t658 + 0.24e2 * t182 * t391) - t27 * t438 * t14) - t14 * t457 - t15 * (-t15 * (t408 * t61 * t162 + t64 * (t63 * (-t123 * (-t278 * t406 * t567 + t278 * t565) + t315 * t45 * t10 * t234) + t64 * (-t567 * t15 * (n3p * t396 + t234 * t97) - t618 * t265 + t315 * t32 * t234 * t402))) - t123 * t64 * (-t197 * t37 * t64 + t63 * (-t660 * t573 - t19 * t15 * t7 * (-t429 * t567 + t94) + t15 * (t19 * t426 - t592) * t3 * t4)) - t202 * t142)) - t665 * t473) * t218) * t209 * t231;
t37 = t257 * (t248 * ((t113 * t14 + t231 * (t122 * t87 - t220 * t221) - t114 + t17 - t38) * t210 * t208 - t241) - 0.3e1 * t261 * t251 + t273 * t87) + t258 * (t332 * (t231 * (t220 * t321 - t320 * t87 + t322) + t14 * t298 - t15 * (-t27 * t103 * (t64 * (-t154 * t3 + t287) + t283) + t288 + t301) + t302 - t207 * (t27 * t282 - t307)) + 0.3e1 * t261 * t334 - t341);
t45 = n3pp * t75;
t61 = t332 * (t45 * t219 + t305 * (-t14 * t98 - t219 * t187 + t149 - t156));
t97 = t419 * t157;
t124 = t261 * (-t305 * t187 + t45);
t142 = t233 * t716 * t231 * t214 * t218 * t209 * t654;
t182 = t513 - t236;
t214 = t529 * (t182 * t264 * t14 - t308 * t57 * t63) * t13;
t233 = 0.3e1 * t532 * t312;
t236 = -t145 * t64 * t63 + t151 * t684;
t265 = t64 * t236;
t278 = -t534 - t15 * (t518 + t530 * (t522 + t265)) + t531;
t298 = t303 * t262;
t304 = t249 * t231 + t298;
t312 = t230 * (-t63 * t699 + t203);
t91 = t57 * t91 * t64 * t63;
t104 = t27 * t164 * (t111 * t63 + t664 * t423) - t551 * t244 * (t104 * t123 + t105 * t57);
t101 = t63 * t101;
t105 = t529 * (t173 * t57 * t64 + t170 * t182) * t13;
t53 = 0.3e1 * t173 * t165 * n3pp * t53;
t111 = t230 * t304;
t384 = t230 * (t222 - t674);
t402 = t160 * t1;
t423 = t551 * t164;
t426 = t164 * t52;
t107 = t15 * (t244 * t13 * t462 + t423 * (-t133 * t57 * t63 + t107 * t519)) - t27 * t426 * (-t402 * t64 * t684 - t459 * t63);
t438 = t63 * t64;
t175 = t175 * t27 * t684 - t342 * t57 * t63;
t180 = t164 * (t1 * (t526 * t27 * t163 - t721 * t358 * t57 - t513 * t526 * t64) + t167 * t180);
t342 = t63 * t350;
t350 = t529 * (-t519 * t34 * t14 - t528);
t358 = t438 * t57;
t182 = t15 * (t423 * (t182 * t34 + t358 * t279) + t491 * t169 * t165 * t57);
t51 = t63 * t51;
t457 = 0.3e1 * t608 * t54 * t316;
t358 = -t13 * t529 * t545 * (t358 * t8 + t68 * t527) + t15 * (t164 * t4 * (t1 * (t363 * t27 * t163 - t513 * t363 * t64 + t721 * t413 * t57) + t44 * t443 * t63) + t530 * (-t484 * t63 + t64 * (-t438 * t27 * t137 * t4 - t204 * t4 * t684))) + 0.3e1 * t532 * t400;
t363 = t64 * t7;
t392 = t230 * t4 * (t363 * t5 + t392 * t63);
t372 = -0.12e2 * t235 + t372;
t400 = -0.14e2 * t161 + t513;
t459 = t164 * t16;
t468 = t303 * t231;
t480 = t230 * t262;
t484 = t261 * t230;
t90 = -t27 * t332 * (t111 * t87 + t249 * t198) - t332 * (t231 * (t198 * t303 + t278 * t87 - t536) - t27 * t530 * (t63 * (t14 * t153 - t193 * t685) + t265 * t14) + t92 - t14 * t518 - t15 * (t189 * t131 * t15 - t69) - t520 - 0.3e1 * t278 * t208 * t14) + t484 * (t90 + 0.3e1 * t468);
t193 = t197 * t684;
t59 = t27 * t164 * (t675 * t44 + t150) + t680 * (t64 * (0.9e1 * t467 * t59 + t514) - t188 * t123);
t150 = t423 * (0.12e2 * t49 * t63 + (t123 * t161 - t234 * t235) * t34 * t14) * t13;
t188 = t16 * t157;
t188 = t298 * t243 * (t200 * t210 - t97) + (t210 * (t210 * (n3p * (-t15 * (t530 * (-t175 * t64 + t342) - t180) + t350) + n3pp * t182 + n3ppp * (t457 + t426 * (t64 * (-t49 * t27 * t63 + t35 * t684) + t51)) - t188 * t235) - t419 * t107) - t188) * t211 * t209 * t231;
t36 = t36 * t218;
t155 = -t263 * t303 + t36 * (t473 * (-t686 * t654 + t651) - t654 * (t123 * t402 * (t63 * t472 + t64 * (t155 * t63 + t246)) + t234 * t54 * (t391 * t63 - t64 * (t649 * t621 * t582 * t63 - t49 * t197 - t379 * t63)) + t15 * (t15 * (-t123 * (t617 * t162 + t433 * t684) + t438 * (-t27 * t422 + t551 * t160 * (-t323 * t587 + 0.12e2 * t173))) - t123 * (t467 * t14 * t573 * t162 + t454 * t684) + t438 * (-t27 * t449 + t464 * t1 * (0.12e2 * t14 * t573 * t63 + t64 * t587 * t581))))) * t209 * t231;
t162 = -t257 * (-t27 * t332 * (t111 * t221 + t249 * t122) - t332 * (t231 * (t122 * t303 + t221 * t278 - t384) - t15 * (-t104 + t530 * (-t64 * (-t99 * t684 - t91) + t101)) - t105 + t53)) - t258 * (t27 * t332 * (t304 * t321 * t230 + t249 * t320) - t332 * (t231 * (-t278 * t321 - t303 * t320 + t312) - t233 + t15 * (t164 * (t1 * (-t300 * t27 * t163 + t721 * t289 * t57 + t513 * t300 * t64) + t44 * t291 * t63) + t530 * (t282 * t63 + t64 * (-t27 * t280 * t63 + t277 * t684))) - t214));
t243 = t1 * t2;
t243 = t332 * (-t468 * t45 + t249 * (t243 * (t468 * t187 - t15 * (t485 * t83 - t59) - t150 - t76 * t27 * (t438 * t62 - t193)) + t190 - t191) + t243 * t187);
t265 = t491 * t2;
t277 = t324 * t218 * t209 * t231;
t280 = t277 * t63;
t45 = -t27 * t243 + t1 * t90 + t2 * (t27 * t332 * (t480 * t303 ^ 2 + t230 + t249 * (t468 * t199 - t535)) - t332 * (t231 * (-t230 * t82 + t303 * (t535 - t278)) - t57 * t552 * n3pp * t54 * t235 * t316 - t13 * t459 * (t222 * t400 + t49 * t372) - t15 * (-t164 * (t491 * t400 * t127 + t551 * t372 * t176 + t516 * t64) + t530 * (t63 * (t512 + t236) + t64 * (-0.2e1 * t151 * t27 * t438 - t145 * t684 - t153))) + 0.3e1 * t189 * n3pp * t54 * t316 - t249 * t27 * t278) + t237 * t324 * t230 * t217 * t209 * t231) - t213 * t155 - t215 * t188 + t336 * (-t27 * t332 * (t111 * t504 + t249 * t503) - t332 * (t231 * (t278 * t504 + t303 * t503 - t392) + t358)) - t666 * t162 + t280 * (t210 * (0.3e1 * t473 * t654 * t208 * t174 - t265 * t187 * t57) + t45 * t123);
t82 = -t3 * t73 - t275;
t90 = t23 * t3 + t276;
t111 = t64 * (t63 * t90 - t64 * t82) - t281;
t50 = t171 * t3 - t50;
t127 = -t177 * t3 + t290;
t145 = t228 * t127;
t151 = t50 * t64;
t153 = t63 * t239;
t155 = -t27 * t103 * (t151 - t153) - t13 * (-t145 + t294);
t162 = t15 * (t155 + t653 * (t111 - t313)) + t317;
t176 = t230 * t231;
t188 = t176 * t321;
t199 = t332 * t334;
t217 = -t27 * t115 * t676;
t222 = t332 * t508;
t236 = t3 * t13;
t237 = t103 * t3;
t243 = t315 * t161 * n3pp * t399;
t276 = (t115 * t27 * t3 * t5 * t500 + t502 * t3) * t13;
t278 = t230 * t3 * t498;
t281 = t335 * t504;
t282 = -t281 - t332 * (t231 * (t162 * t504 + t321 * t503 - t278) - t15 * (-t237 * t27 * t495 - t236 * t490 + t653 * (t3 * t483 - t243)) - t276);
t251 = t332 * t251;
t48 = (-t48 * t4 + t268) * t64;
t268 = t272 * t44;
t272 = t112 * t264;
t289 = t161 * n3pp;
t290 = t653 * (-t438 * t314 * n3pp - 0.3e1 * t89 * t264 * t161 + t289 * t264 * t52 + t436 * t264);
t298 = t27 * t115 * (t382 * t14 + t203) * t13;
t203 = t230 * (t203 * t14 + t382);
t300 = t273 * t321;
t274 = t274 * t57;
t271 = t271 * t27 * t63;
t304 = t44 * t264;
t306 = t306 * t467 * t189;
t310 = t123 * t103 * t310 * t13;
t313 = t446 * t3;
t264 = t27 * t103 * (-t13 * t264 * t64 - t63 * t659);
t315 = t653 * t27;
t317 = t315 * t13 * (t144 * t5 * t3 + t687);
t9 = t9 * t2;
t323 = t63 * t698;
t152 = t653 * (t109 * t260 + t64 * (t152 * t63 * t27 + 0.3e1 * t64 * t691));
t260 = t27 * (-t311 + t459 * (-t309 * t161 + t163 * t260));
t309 = t15 * (t103 * (-t314 * t64 + t330) + t328 * t189 * t1);
t308 = t76 * (t71 * t533 + t64 * (t616 * t63 - t308));
t311 = t467 * t163;
t328 = t234 * t64;
t145 = ((n3p * (-t260 + t15 * (t152 + t27 * (t294 + t103 * (t64 * (t159 * t3 + t9) - t323)) - t145)) + n3ppp * t308) * t211 * t216 - t672 * t15 * (t264 - t463 * (t127 - t313) + t317) * t211) * t209 * t231 + (-t672 * t321 * t157 * t211 + t321 * t200 * t211 * t216) * t209 * t262;
t36 = t36 * t654;
t79 = -t263 * t321 - t36 * (t331 * t473 * t174 + t123 * t347 * t64 * (t3 * t472 + t4 * (t314 * t64 - t330)) + t15 * (t15 * (-t123 * t13 * (-t2 * t707 + t664 * t5 * (-t63 * t708 + (t715 + t717) * t64 * t14)) + t64 * (t63 * (-t123 * t432 * t704 - t79 * t421) + t64 * (-t27 * t409 * t4 * t3 + t234 * t416 * t704))) + t234 * t311 * (t14 * t707 * t63 + t64 * t713) - t27 * t726 * t710 + t64 * (t64 * (-t421 * t545 * t445 - t447 * t5 * t704) + t63 * (-t452 * t27 * t3 - t451 * t704) * t123)) - t328 * (t64 * (-t377 * t27 * t3 - t285 * t7 * t704) + t140 * t63 * t718 + t633 * t579 * t163) * t54) * t209 * t231;
t84 = -t199 * t229 - t257 * (-t300 - t332 * (t231 * (t122 * t321 + t162 * t221 - t203) + t15 * (t290 - t27 * t552 * (t551 * (t63 * t84 + t48) + t268) + t272) - t298)) - t258 * (t266 * t321 ^ 2 + t332 * (t231 * (t230 * (-t675 - t172) + t321 * (t320 + t162)) + t13 * (-t227 + t217) - t15 * (t653 * (t205 * t195 + t64 * (t63 * (-t23 * t4 + t148) + t64 * (-t4 * t73 + t143)) + t437) - t27 * t103 * (t292 * t63 + t64 * (-t171 * t4 - t404)) + t13 * (t129 * t12 - t228 * (-t177 * t4 - t178))))) + t336 * t251;
t129 = t75 * t231;
t143 = t129 * t321;
t148 = t332 * (n3pp * (-t143 + t309) + t305 * (t321 * t187 * t231 + t15 * (-t27 * t552 * (t64 * (t153 - t151) - t304) + t306 + t653 * t64 * (t64 * (-t3 * t56 + t274) + t271)) - t310));
t151 = t176 * t504;
t85 = t85 * t14 + t363;
t43 = t27 * t501 * t85 * t13 - t15 * (t653 * (t289 * t32 * t5 * t52 + t545 * (-t438 * t8 * t14 * n3pp + t436 * t7) - t275 * t5 * t161) - t27 * t33 * t552 * (t64 * (t43 * t64 + t63 * t80) + t40) + t112 * t32 * t5);
t80 = t121 * t230;
t121 = t273 * t504;
t153 = t140 * t7;
t172 = t33 * t165;
t74 = t15 * (-t27 * t552 * t4 * (t64 * (t494 - t493) + t153) + t326 * t387 * t189 + t653 * t64 * t4 * (t64 * (t74 * t27 - t351 * t57) + t339 * t27 * t63)) + t123 * t172 * t500 * t13;
t85 = t15 * (t27 * t103 * t160 * t85 - t463 * t4 * (-t367 + t443) + t315 * t390 * (t144 * t6 - t22 * t8));
t22 = -t27 * t4 * (t164 * (t163 * (-t22 * t7 - t224 * t81) - t721 * t446 * t8) * t1 + t488) - t489 * t4;
t81 = t653 * t4 * (-t109 * t5 * t8 + t167 * t369 * t64 - t542 * t8 * t5);
t176 = t27 * t4 * (t459 * (t163 * t8 - t68 * t721) * t5 + t502);
t178 = t499 * t14 - t497;
t172 = t15 * (t393 * t340 * t189 + t172 * t178);
t205 = t76 * (-t545 * t64 * t500 + t343 * (t398 - t224));
t229 = t6 * t472;
t273 = t13 * t563;
t275 = t95 * t27;
t292 = t13 * t7;
t11 = t328 * (t64 * t4 * (t4 * (-t19 * t727 + t604 * (t565 - t27)) + t11 * t196) + t44 * t4 * t63 * t728 - t385 * t611 * t163) * t54;
t196 = (t672 * t85 * t211 + (-n3p * (t176 + t15 * (t81 + t22)) + n3ppp * t205) * t211 * t216) * t209 * t231 + (-t672 * t504 * t157 * t211 + t504 * t200 * t211 * t216) * t209 * t262;
t11 = -t263 * t504 + t36 * (t123 * t464 * t340 * (-t178 * t5 * t545 + t229) + t15 * (t15 * (-t123 * (t1 * (-t273 * t163 * t178 * t567 + t229 * t390 * t163) - t44 * t394 - t438 * t4 * (t3 * (t19 * (t95 + t72) + t7 * t5 * t430) + t4 * (t7 * (-t19 * t706 + t371) - t389 * t599))) + t161 * t4 * (t4 * (-t234 * (t14 * (t724 + t725) + t450 * t7) + t607 * t58) - t421 * (-t7 * (t14 * t19 * t386 + t153) + t140 * t19))) + t234 * t311 * (t14 * t394 * t63 + t615 * t64) - t27 * t557 * t4 * t566 + t64 * (t64 * (-t123 * t567 * (t445 * t6 - t5 * (-t383 - t598)) - t448 * t6 * t4) + t63 * t4 * (t3 * (-t292 * (t559 + t555) - t361 * t505) + t4 * (t40 * t638 + t118 * (t275 * t5 - t639))) * t123)) - t11 - t397 * t473 * t174) * t209 * t231;
t40 = t181 * t199 + t257 * (t121 - t332 * (t231 * (-t122 * t504 - t221 * t503 + t80) + t43)) + t258 * (-t281 + t332 * (t231 * (-t320 * t504 - t321 * t503 + t278) - t15 * (-t27 * t237 * (t286 * t63 - t64 * t413) + t236 * (t228 * t443 + t488) + t653 * (t3 * (t64 * (-t137 * t64 - t204 * t63) + t482) + t243)) + t276)) + (t199 * t258 - t251 * t257) * t666 * t6;
t72 = t129 * t504;
t11 = -t27 * t332 * (n3pp * (t72 + t172) + t305 * (-t504 * t187 * t231 + t74)) + t1 * (-t332 * (-t14 * t496 + t231 * (-t198 * t504 - t503 * t87 + t507) + t134 - t299 + t366) - 0.3e1 * t261 * (t151 + t503) + t509) + t2 * (-t27 * t332 * (t480 * t504 * t303 + t249 * (t151 + t503)) + t332 * (t231 * (-t303 * t503 + t504 * t535 + t392) - t358)) + t213 * t11 + t215 * t196 + t336 * (-t332 * (t231 * (t230 * t4 * (t64 * (t168 - t337) + t431 * t63) - 0.2e1 * t504 * t503) - t13 * (t115 * t27 * t4 * t500 * t6 - t227) + t15 * (-t27 * t486 * (t126 * t63 - t171 * t64) + t390 * (t228 * t177 + t487 * t6) + t653 * (t4 * (t64 * (-t23 * t63 - t64 * t73) + t481 * t6) + t359 * (t393 * t8 + t58)))) + t266 * t504 ^ 2) + t666 * t40;
t23 = t327 * t221;
t40 = t15 * (t27 * t552 * (t106 * t64 + t44 * t12) - t189 * t420 * t57 * t15) + t123 * t103 * t78 * t13;
t65 = t15 * (t552 * (-t13 * t521 + t551 * (t460 * t64 + t252)) - t65 * t552);
t73 = t27 * (t15 * (-t166 * t128 + t552 * (-t2 * t521 + t551 * (t297 * t63 + t510 * t64))) + t116) + t76 * (-t109 * t34 - 0.3e1 * t284 * t161);
t78 = t103 * (t35 * t64 + t439);
t76 = t76 * (-t64 * (-t279 * t63 + t246) + t117);
t95 = t39 * t7;
t106 = t565 - t344;
t29 = t408 * t221 + t54 * (t64 * (t1 * (t390 * t6 * t3 * t565 + t95) + t4 * (t4 * t7 * (t94 * t564 - t96 * t6) - t29 * t285)) - t173 * t197 - t633 * t380 * t163) * t234;
t94 = t129 * t208 * t221;
t20 = t36 * (-t64 * t29 + t15 * (t15 * (t123 * t64 * (t63 * (t4 * (t3 * (t27 * t6 * (t557 * t106 + t41 * t8) - t347 * t20) + t4 * (t625 * t27 * t564 + t453 * t7 - t46 * t8)) + t595 * t8 + t86 * t7) + t402 * (t14 * t34 * t163 + t721 * t12)) + t161 * (-t418 * t8 + t567 * (t123 * t564 * (t44 * t106 + t42 * t8) + t424 * t58 * t13) - t7 * t123 * t47 - t421 * (t6 * (-t554 * t19 * t565 + t475 * t7) + t411 * t8) * t4) - t44 * t378 * t27) - t123 * t438 * (-t14 * t19 * t441 - t4 * (t3 * (-t637 + t68 * (t96 + t275)) + t4 * (t19 * t14 * (t381 * t7 - t429 * t8) - t431 * t140)) + t649 * t14 * t378) + t161 * (t545 * (-t123 * t3 * t595 + t730 * t6 * t86) - t649 * t380 * t234) - t650 * t27 * t12) + t442 * t473 * t174);
t29 = t257 * (-t332 * (t231 * (-0.2e1 * t221 * t122 - t230 * (t170 * t64 - t675)) + t15 * (t653 * (-0.3e1 * t89 * t12 * t161 + t289 * t12 * t52 + t438 * t539 + t437) + t27 * t552 * (t44 * t410 + t551 * (-t414 * t63 + t64 * (-t269 * t6 + t267))) + t112 * t12) - t217 * t13) + t266 * t221 ^ 2) + t258 * (-t300 - t332 * (t231 * (t122 * t321 + t221 * t320 - t203) + t15 * (t290 - t27 * t552 * (t551 * (t125 * t63 + t48) + t268) + t272) - t298));
t17 = t27 * t248 * (t419 * t65 * t208 - n3pp * t210 * (t94 + t78) + t265 * t208 * t216 * (t221 * t187 * t231 - t40)) + t1 * (-t248 * (0.3e1 * t318 * t122 * t212 + t241 + (-t113 * t14 + t231 * (-t122 * t87 - t198 * t221) + t114 - t17 + t38) * t210 * t208) + t23 * (-0.3e1 * t230 * t208 * t14 + t240 * t27 * t87)) + t2 * (-t23 * t27 * t538 + t332 * (t231 * (-t122 * t303 + t221 * t535 + t384) + t15 * (-t104 + t530 * (-t64 * (t161 * t99 - t235 * t99 - t91) + t101)) + t105 - t53 - t249 * t27 * t122)) + t213 * (t20 * t209 * t231 - t263 * t221) + t215 * ((-t672 * t221 * t157 * t211 + t221 * t200 * t211 * t216) * t209 * t262 + (-n3p * t73 + n3ppp * t76) * t211 * t216 * t209 * t231) + t336 * (t121 - t332 * (t231 * (-t122 * t504 - t221 * t503 + t80) + t43)) + t666 * t29;
t20 = -t187;
t23 = t20 * t231;
t29 = t15 * (-t552 * (-t13 * t34 + t64 * (t465 + t133)) + t194 * t185);
t34 = t15 * (t27 * t552 * (-t2 * t34 + t64 * (t362 + t360)) - 0.3e1 * t553 * t189 + t653 * t64 * (-t479 * t4 * t63 + t57 * t64 * t521)) + t158;
t36 = t15 * (t165 * t477 + t189 * t169);
t38 = t456 + t455;
t41 = t215 * t231;
t39 = t332 * (n3p * t34 + t240 * t87 + t198 - t270 * (-t64 * (t160 * t472 * t123 + t54 * t64 * (t4 * (t4 * (-t19 * (t577 * t13 - G + n3) + t273) + t292 * t259) - t19 * t13 * t565 - t412 * t603 * t161) * t234) + t15 * (t15 * (t123 * t160 * t163 * t472 + t64 * (-t63 * t417 * t27 + t328 * t407)) - t123 * t64 * (t13 * t38 - t63 * (t19 * t68 * (t329 * t567 - t39) + t19 * t415 * t3 * t4)) + t161 * t13 * (t588 * t567 - t27))) * t208 * t654);
t42 = -t157;
t43 = t42 * t231;
t46 = t15 * (-t315 * t458 + t27 * t103 * (-t279 * t63 + t440) - t552 * t462);
t47 = t14 * t13;
t48 = t277 * t167 * t353;
t52 = t199 * t6 - t251;
t53 = -t364 - t15 * (t183 + t186);
t58 = t53 * t231;
t68 = t19 * t1;
t7 = t250 * (t128 * t473 + t654 * (-t64 * (t648 * t472 + t54 * (-t664 * t603 * t582 + t64 * (-t19 * t565 * t1 + t4 * (t4 * (-t1 * t19 * t578 + t1 * t563) + t259 * t223)) - t511 * t63 * t12) * t234) + t15 * (t15 * (t123 * t64 * (t63 * (t4 * (t3 * t8 * (t515 * t27 - t68 * t5) + t4 * (t102 * t406 - t506 * t5)) - t102 * t565) + t33 * t435) + t161 * (t4 * (t4 * t8 * (t427 * t123 + t428 * t234) - t421 * (t7 * (-t354 + t709) + t559 * t19)) + t345 * t123 * t8) - t2 * t434) - t123 * t64 * (t1 * t38 - t63 * (t4 * (t3 * (t68 * t224 - t225) + t4 * (t118 * t425 - t635 * t8)) - t346 * t118)) + t161 * (-t123 * t545 * (-t4 * t444 + t517) - t184) + t461 * t202))) * t231;
t8 = -t27 * (t336 * t332 * (t72 + t172) + t666 * (t257 * t211 * t212 * t216 * t209 * t231 * (t94 + t78) + t258 * t332 * (-t143 + t309))) + t1 * t332 * (t75 * (t14 * t208 * t57 - t219 * t27) - t478) + t2 * t332 * (t75 * (t249 * t123 + t468 * t27) - t182) - t332 * (t368 - t270 * (t15 * (t64 * (t63 * (t123 * t4 * (t32 * t136 - t3 * t572) - t570 * t27) + t64 * (-t567 * t14 * (-t19 * t234 * t405 + t396) + t716 * t580 - t618 * t14)) + t71 * t585 * t123) - t27 * t64 * (-t35 * t545 * t63 + t585 * t64)) * t15 * t208 * t654) + t48 * t36;
t12 = t77 * t231;
t12 = t1 * (-t332 * (t219 * t77 + t192) + 0.3e1 * t261 * t77) + t2 * (-t332 * (t457 + t426 * (t64 * (-t439 * t27 * t64 - t161 * t35 + t235 * t35) + t51) - t468 * t77) + t27 * t280 * t77) + t336 * t332 * (-t12 * t504 + t205) + t666 * (t257 * t332 * (-t12 * t221 + t76) - t258 * t332 * (-t12 * t321 + t308)) + t332 * t27 * t75;
t16 = t144 * (-t27 * t41 * t210 * (-t270 * t473 * t2 + (t16 * t319 * t463 + t216 * (t1 * t187 - t230)) * t211 * t209 * t63) - t1 * t332 * (0.3e1 * t157 * t208 * t14 + t14 * (t469 - t466) + t470 + t219 * t42) - t2 * t332 * (t249 * t27 * t157 - t468 * t42 + t107) - t336 * t332 * (t43 * t504 + t85) - t666 * (t257 * t332 * (t43 * t221 + t27 * t65) + t258 * t332 * (-t43 * t321 + t15 * (t264 - t463 * (t291 - t313) + t317))) - t332 * (n3p * t46 + t535 - t537 - t270 * (t49 * t185 * t234 * t54 + t15 * (t15 * (-t13 * t434 + t64 * (t63 * (t123 * (t406 * t47 * t567 - t47 * t565) + t47 * t642) + t64 * (t123 * t569 * t95 - t421 * t333 * t4))) - t123 * t64 * (t348 * t64 + t355 * t63) + t471 * t166)) * t208 * t654) + t48 * t29);
t10 = -t27 * t61 + t57 * t124 + t1 * t55 + t2 * (-t27 * t327 * t87 * t538 - t332 * (-t231 * (t220 * t303 + t535 * t87 + t536) - t27 * t492 * t523 - t14 * t518 - t15 * (-t69 + t653 * (t131 * t161 - 0.2e1 * t131 * t235)) - t520 + t92 - t249 * t27 * t220) - 0.3e1 * t261 * (t535 - t537) + t253 * t57 * t230 * t218 * t209 * t231 * t63 * t14) + t213 * t10 + t215 * (((-n3p * (-t14 * t183 + t474 - t476) - n3pp * t478 - n3ppp * t192) * t211 * t216 + t672 * (t14 * (t469 - t466) + t470) * t211) * t209 * t231 + (-t672 * t87 * t157 * t211 + t87 * t200 * t211 * t216) * t209 * t262) + t336 * (t332 * (t14 * t496 + t231 * (-t220 * t504 + t503 * t87 - t507) - t134 + t299 - t366) - 0.3e1 * t261 * t508 + t509) + t666 * t37 + 0.3e1 * t253 * t318 * t209 * t231 * (t210 * (t191 - t190) + t97) + t142 - t16;
t16 = t257 * t17 + t258 * (-t27 * t148 + t1 * (0.3e1 * t261 * (t188 + t162) - t332 * (t231 * (t162 * t87 + t198 * t321 - t322) + t14 * t155 + t15 * (-t27 * t103 * (t64 * (-t154 * t3 + t287) + t283) + t288 + t301) - t302 + t207 * (t111 * t27 - t307)) - t341) + t2 * (t27 * t332 * (t480 * t321 * t303 + t249 * (t188 + t162)) - t332 * (t231 * (-t162 * t303 + t321 * t535 + t312) - t233 + t15 * (t530 * (t111 * t63 + t64 * (-t161 * t90 + t63 * (-t27 * t64 * t82 + t63 * t90))) + t164 * (t1 * (-t239 * t27 * t163 + t513 * t239 * t64 - t721 * t50 * t57) + t44 * t127 * t63)) - t214)) - t213 * t79 - t215 * t145 + t257 * t222 + t336 * t282 - t666 * t84);
t13 = t70 * (-t27 * t41 * (t209 * (-n3pp * t36 * t211 * t216 + t179 * (t29 * t1 - t157) * t211 + t167 * (t1 * (t123 * t165 * t226 * t13 - t189 * t201 * t57) + t187) * t211 * t218) - t473 * t1 * t174) - t1 * t332 * (0.3e1 * t187 * t208 * t14 - t14 * t98 + t219 * t20 + t149 - t156) + t2 * t332 * (t468 * t20 + t15 * (-t59 + t530 * (t63 * t83 - t64 * (-t438 * t27 * t62 + t193 * t27))) + t150 - t249 * t27 * t187) - t336 * t332 * (t23 * t504 + t74) - t666 * (t257 * t332 * (t23 * t221 + t40) + t258 * t332 * (t15 * (-t27 * t552 * (t64 * (t296 + t295) - t304) + t306 + t653 * t64 * (t64 * (-t3 * t56 + t274) + t271)) - t310 - t23 * t321)) - t39 + 0.3e1 * t484);
t7 = n3p * (-t27 * t332 * (-n3p * t128 * t316 + t305 * t34) - t1 * t332 * (-0.3e1 * t53 * t208 * t14 - t14 * t183 + t219 * t53 + t474 - t476) - t2 * t332 * (-t249 * t27 * t53 - t15 * (t530 * (-t175 * t64 + t342) - t180) + t350 - t468 * t53) - t336 * t332 * (t58 * t504 + t176 + t15 * (t81 + t22)) + t666 * (-t257 * t332 * (t58 * t221 + t73) - t258 * t332 * (-t58 * t321 - t260 + t15 * (t152 - t27 * (t103 * (-t64 * (t159 * t3 + t9) + t323) - t294) - t293))) + t324 * t672 * t46 * t209 * t231 + t7) + n3pp * t8 + n3ppp * t12 + t1 * t10 + t11 * t336 + t2 * t45 + t256 * (t135 * (-t222 * t4 + t325 * t52) * t130 - t138 * (t222 * t3 + t370 * t52) * t100) + t666 * t16 - n2 - t30 * t199 + t332 * n3pppp * t77 + t13;
t8 = 0.1e1 / t128;
t8 = -(-t685 * t164 * t652 + G * t128) * t8 + n3;
t9 = J__1 - J__2 - J__3;
t3 = -n4 + (-t5 * (J__2 * t256 * t254 * t9 * t4 - t3 * J__3 * t256 * t255 * t9) - t27 * J__2 * (-t3 * (t254 ^ 2 - t255 ^ 2) * t4 + t28 - t28 * t27 * t567) * t6 * J__3) * t666 ^ 2 * t130 * t100;
Nonb = [n3p * t24 + n3pp * t110 + n3ppp * t60 + t1 * t31 + t132 * t2 + t256 * t139 + t336 * (t27 * t628 * (n3pp * t365 + t141 * t305 + t397 * t88) + t1 * (t403 - t93 * (t174 * (t108 * t397 + t146 * t195 + t401) - t210 * (t375 + (-t373 + t374 + t552 * t4 * (t15 * (t14 * (t352 * t524 + t357 * t57) + t356 * t15) + (-t119 * t716 + t27 * t338) * t5 * t1)) * t64 - t376) + t147 * t210 * t208 * t14)) + t2 * (-t628 * (t174 * (t146 * t247 - t206 * (t395 * t63 + t682) + t245 * t397) + t64 * (t120 * t244 * t27 + t242 + t561) - t681 - t165 * (-t238 * t349 + t388 * t63) + t249 * t147) + t683 * t247) + t336 * t25 - t666 * t21 - t66 - t67) + t666 * t18 - n1 + t30 * t232 - t628 * n3pppp * t562 + t26 t7 -t8 t3];

F = [x(9); x(10); x(11); x(12); x(13); (sin(x(6)) * sin(x(7)) * x(15) + cos(x(6)) * sin(x(7)) * x(16) + x(14) * cos(x(7))) / cos(x(7)); cos(x(6)) * x(15) - sin(x(6)) * x(16); (sin(x(6)) * x(15) + cos(x(6)) * x(16)) / cos(x(7)); -L * sin(x(5)) * m * (cos(x(5)) ^ 2 * x(12) ^ 2 + x(13) ^ 2) / (m + mp); cos(x(5)) * sin(x(4)) * m * (cos(x(5)) ^ 2 * x(12) ^ 2 + x(13) ^ 2) * L / (m + mp); 0.1e1 / (m + mp) * (-L * cos(x(5)) ^ 3 * cos(x(4)) * m * x(12) ^ 2 - L * cos(x(5)) * cos(x(4)) * m * x(13) ^ 2 + G * m + G * mp); 0.2e1 * x(13) * x(12) * sin(x(5)) / cos(x(5)); -x(12) ^ 2 * cos(x(5)) * sin(x(5)); -x(15) * x(16) * (J__2 - J__3) / J__1; x(14) * x(16) * (J__1 - J__3) / J__2; -x(14) * x(15) * (J__1 - J__2) / J__3;];

G0 = [0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; 0 0 0 0; (sin(x(5)) * cos(x(5)) * sin(x(4)) * cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(5)) * cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(5)) * cos(x(5)) * sin(x(4)) * cos(x(8)) * sin(x(6)) + cos(x(5)) ^ 2 * cos(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(5)) ^ 2 * sin(x(6)) * sin(x(8)) - cos(x(6)) * sin(x(7)) * cos(x(8)) - sin(x(6)) * sin(x(8))) / (m + mp) 0 0 0; 0.1e1 / (m + mp) * cos(x(5)) * (cos(x(5)) * cos(x(4)) ^ 2 * cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(5)) * sin(x(4)) * cos(x(6)) * sin(x(7)) * cos(x(8)) - cos(x(5)) * cos(x(4)) ^ 2 * cos(x(8)) * sin(x(6)) + cos(x(5)) * cos(x(4)) * sin(x(4)) * cos(x(6)) * cos(x(7)) + sin(x(5)) * sin(x(4)) * sin(x(8)) * sin(x(6)) - cos(x(5)) * cos(x(6)) * sin(x(7)) * sin(x(8)) + cos(x(5)) * cos(x(8)) * sin(x(6))) 0 0 0; -0.1e1 / (m + mp) * cos(x(5)) * cos(x(4)) * (-cos(x(5)) * sin(x(4)) * cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(5)) * cos(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) + cos(x(5)) * sin(x(4)) * cos(x(8)) * sin(x(6)) + sin(x(5)) * sin(x(8)) * sin(x(6))) 0 0 0; (-cos(x(4)) * cos(x(6)) * sin(x(7)) * sin(x(8)) + cos(x(4)) * cos(x(8)) * sin(x(6)) - sin(x(4)) * cos(x(6)) * cos(x(7))) / L / cos(x(5)) / m 0 0 0; (((cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(4)) - cos(x(7)) * cos(x(4)) * cos(x(6))) * sin(x(5)) + cos(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / m / L 0 0 0; 0 0.1e1 / J__1 0 0; 0 0 0.1e1 / J__2 0; 0 0 0 0.1e1 / J__3;];

xdot=F + G0*(NonA\Nonb');
end
