function controller_output = QuasiControllerTrack(x,t,Kv2,Kv6,M,TParam)
% m=1.6;mp=0.16;L=1;
G=10;J__1=0.03;J__2=0.03;J__3=0.03;
m0=M(1);mp0=M(2);L0=M(3);
Ts1 = [x(3) x(11)];
T0 = TParam(1);r1 = TParam(2); r2 = TParam(3); r3= TParam(4);

yr = [r1 * sin((2 * pi * t / T0)) 0.2e1 * r1 * pi / T0 * cos((2 * pi * t / T0)) -0.4e1 * r1 * (pi ^ 2) / (T0 ^ 2) * sin((2 * pi * t / T0)) -0.8e1 * r1 * (pi ^ 3) / (T0 ^ 3) * cos((2 * pi * t / T0)) 0.16e2 * r1 * (pi ^ 4) / (T0 ^ 4) * sin((2 * pi * t / T0)) 0.32e2 * r1 * (pi ^ 5) / (T0 ^ 5) * cos((2 * pi * t / T0)) r2 * sin((4 * pi * t / T0)) 0.4e1 * r2 * pi / T0 * cos((4 * pi * t / T0)) -0.16e2 * r2 * (pi ^ 2) / (T0 ^ 2) * sin((4 * pi * t / T0)) -0.64e2 * r2 * (pi ^ 3) / (T0 ^ 3) * cos((4 * pi * t / T0)) 0.256e3 * r2 * (pi ^ 4) / (T0 ^ 4) * sin((4 * pi * t / T0)) 0.1024e4 * r2 * (pi ^ 5) / (T0 ^ 5) * cos((4 * pi * t / T0)) -0.90e1 + r3 * sin((2 * pi * t / T0)) 0.2e1 * r3 * pi / T0 * cos((2 * pi * t / T0)) -0.4e1 * r3 * (pi ^ 2) / (T0 ^ 2) * sin((2 * pi * t / T0)) -0.8e1 * r3 * (pi ^ 3) / (T0 ^ 3) * cos((2 * pi * t / T0)) 0.16e2 * r3 * (pi ^ 4) / (T0 ^ 4) * sin((2 * pi * t / T0)) 0.32e2 * r3 * (pi ^ 5) / (T0 ^ 5) * cos((2 * pi * t / T0)) 0.2e-1 * t 0.2e-1];

yr6 = [-0.64e2 * r1 * (pi ^ 6) / (T0 ^ 6) * sin((2 * pi * t / T0)) -0.4096e4 * r2 * (pi ^ 6) / (T0 ^ 6) * sin((4 * pi * t / T0)) -0.64e2 * r3 * (pi ^ 6) / (T0 ^ 6) * sin((2 * pi * t / T0))];

n3 = yr(15) - Kv2(1,2)*(Ts1(2)-yr(14)) - Kv2(1,1)*(Ts1(1)-yr(13));
n3p = yr(16)- Kv2(1,2)*(n3-yr(15)) - Kv2(1,1)*(Ts1(2)-yr(14));
n3pp = yr(17)- Kv2(1,2)*(n3p-yr(16)) - Kv2(1,1)*(n3-yr(15));
n3ppp = yr(18)- Kv2(1,2)*(n3pp-yr(17)) - Kv2(1,1)*(n3p-yr(16));
n3pppp = yr6(3)- Kv2(1,2)*(n3ppp-yr(18)) - Kv2(1,1)*(n3pp-yr(17));
Ts = [x(1) x(9) -(G - n3) * sin(x(5)) / cos(x(5)) / cos(x(4)) ((n3p * cos(x(5)) * sin(x(5)) - x(13) * (G - n3)) * cos(x(4)) - sin(x(4)) * x(12) * cos(x(5)) * sin(x(5)) * (G - n3)) / cos(x(5)) ^ 2 / cos(x(4)) ^ 2 (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-((G - n3) * x(12) ^ 2 + n3pp) * cos(x(8)) * sin(x(7)) / 0.2e1 + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 - ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * m0 * L0 * (-0.4e1 / 0.3e1 * ((sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + 0.4e1 / 0.3e1 * ((sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) - (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) - (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 x(12) * ((0.2e1 * m0 * (-0.3e1 * x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 2 * sin(x(4)) + x(13) * x(12) * cos(x(7)) * cos(x(4)) ^ 3 * (G - n3) * cos(x(6)) - 0.2e1 * (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) * sin(x(4)) + (-cos(x(4)) * n3p * cos(x(8)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * cos(x(4)) * n3p) * x(12) * cos(x(4)) - (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * sin(x(4))) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (-0.3e1 * ((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 2 * sin(x(4)) - cos(x(4)) ^ 3 * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) + 0.2e1 * sin(x(4)) ^ 2 * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) + (x(13) * cos(x(4)) * (G - n3) * cos(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * x(13) * sin(x(8)) * cos(x(4)) * (G - n3)) * x(12) * cos(x(4)) - (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * sin(x(4)) + x(12) ^ 2 * cos(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * (-0.3e1 * (-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 2 * sin(x(4)) + ((-0.2e1 / 0.3e1 * x(13) * sin(x(8)) * cos(x(4)) * n3p * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * cos(x(4)) * (G - n3)) * cos(x(6)) + 0.2e1 / 0.3e1 * sin(x(6)) * x(13) * cos(x(8)) * cos(x(4)) * n3p) * cos(x(4)) ^ 2 - 0.2e1 * (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) * sin(x(4)) + (0.2e1 / 0.3e1 * cos(x(4)) * n3p * cos(x(8)) * sin(x(7)) * cos(x(6)) + 0.2e1 / 0.3e1 * sin(x(6)) * sin(x(8)) * cos(x(4)) * n3p) * x(12) * cos(x(4)) - (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * sin(x(4))) * cos(x(5)) ^ 2 + sin(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) - cos(x(4)) * (-0.4e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) * sin(x(4)) - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * (x(13) * sin(x(8)) * cos(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - x(13) * cos(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * cos(x(4)) + 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * sin(x(4)) + (G - n3) * (0.4e1 * cos(x(8)) * x(13) * x(12) * L0 * sin(x(5)) * cos(x(4)) * m0 * sin(x(7)) * cos(x(6)) + 0.4e1 * sin(x(6)) * x(13) * x(12) * L0 * sin(x(5)) * cos(x(4)) * m0 * sin(x(8)))) * cos(x(5)) + 0.4e1 * (G - n3) * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) * sin(x(4))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-sin(x(4)) * cos(x(6)) * cos(x(7)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * cos(x(4))) + 0.3e1 * (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 4 * sin(x(4))) + x(13) * ((-0.8e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 3 * sin(x(5)) + 0.2e1 * m0 * cos(x(5)) ^ 4 * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) - 0.6e1 * m0 * sin(x(5)) ^ 2 * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - 0.6e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) * sin(x(5)) - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * cos(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * cos(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((0.4e1 * cos(x(8)) * x(13) * x(12) * L0 * cos(x(5)) * sin(x(4)) * m0 * sin(x(7)) + x(13) ^ 2 * L0 * cos(x(5)) * cos(x(7)) * m0) * cos(x(6)) + 0.4e1 * sin(x(6)) * x(13) * x(12) * L0 * cos(x(5)) * sin(x(4)) * m0 * sin(x(8)))) * cos(x(5)) + cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * sin(x(5)) + (G - n3) ^ 2 * cos(x(6)) * cos(x(5)) * cos(x(7)) * (m0 + mp0)) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 * (-(cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * sin(x(5)) + cos(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + 0.3e1 * (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 4 / cos(x(4)) ^ 3 * sin(x(5))) + (sin(x(6)) * sin(x(7)) * x(15) + cos(x(6)) * sin(x(7)) * x(16) + x(14) * cos(x(7))) / cos(x(7)) * ((0.2e1 * m0 * (x(13) * x(12) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (-((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * sin(x(6)) - cos(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + ((sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * sin(x(6)) + cos(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * ((-(sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * sin(x(6)) - cos(x(8)) * cos(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * (-(((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * sin(x(6)) - cos(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (-((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * sin(x(6)) + cos(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * sin(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * cos(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (-((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * sin(x(6)) + cos(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (-0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * sin(x(6)) - 0.4e1 / 0.3e1 * cos(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * x(13) ^ 2 * sin(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * (-(n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * sin(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * cos(x(6))) * cos(x(4)) + (G - n3) * (-(cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * sin(x(6)) + cos(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 - sin(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 * ((-cos(x(7)) * cos(x(4)) * sin(x(6)) + (sin(x(6)) * sin(x(7)) * sin(x(8)) + cos(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))))) + (cos(x(6)) * x(15) - sin(x(6)) * x(16)) * ((0.2e1 * m0 * (x(13) * x(12) * cos(x(6)) * cos(x(7)) * sin(x(8)) * (G - n3) * cos(x(4)) ^ 3 + ((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * cos(x(7)) - x(13) * x(12) * sin(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) * cos(x(4)) ^ 2 - (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * cos(x(7)) * cos(x(6)) * x(12) * cos(x(4)) + x(12) ^ 2 * cos(x(6)) * cos(x(7)) * cos(x(8)) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * ((sin(x(8)) * x(12) * cos(x(7)) * n3p - ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(7))) * cos(x(6)) * cos(x(4)) ^ 3 - sin(x(4)) * (((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * cos(x(7)) + x(12) * sin(x(7)) * n3p) * cos(x(6)) * cos(x(4)) ^ 2 + ((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * cos(x(7)) + 0.3e1 / 0.2e1 * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * cos(x(6)) * cos(x(7)) * sin(x(8)) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * (-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * cos(x(7)) + sin(x(7)) * n3p / 0.2e1) * cos(x(6)) * x(13) * cos(x(4)) ^ 3 + ((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * cos(x(7)) + 0.4e1 / 0.3e1 * x(13) * x(12) * sin(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) * cos(x(4)) ^ 2 + 0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * cos(x(7)) * cos(x(6)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * cos(x(6)) * cos(x(7)) * cos(x(8)) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * sin(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * cos(x(7)) * cos(x(6)) * cos(x(4)) + (G - n3) * (cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * cos(x(7)) - x(13) ^ 2 * L0 * sin(x(5)) * sin(x(7)) * m0) * cos(x(6))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * cos(x(6)) * cos(x(7)) * cos(x(8)) * cos(x(4)) ^ 2 - cos(x(6)) * sin(x(5)) * sin(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 * ((-sin(x(7)) * cos(x(4)) * cos(x(6)) - cos(x(6)) * cos(x(7)) * sin(x(8)) * sin(x(4))) * cos(x(5)) + sin(x(5)) * cos(x(6)) * cos(x(7)) * cos(x(8)))) + (sin(x(6)) * x(15) + cos(x(6)) * x(16)) / cos(x(7)) * ((0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (-(-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * cos(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (-sin(x(4)) * n3p * cos(x(8)) - x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * ((cos(x(8)) * x(12) * sin(x(7)) * n3p * cos(x(6)) + sin(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * (((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8))) * cos(x(4)) ^ 2 + ((-x(13) * sin(x(8)) * sin(x(4)) * (G - n3) - n3p * cos(x(8))) * sin(x(7)) * cos(x(6)) + (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * cos(x(8)) * x(12) * (G - n3) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * x(12) * (G - n3) * sin(x(8))) * x(13) * cos(x(4)) ^ 3 + ((-sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) - 0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p)) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (-x(13) * sin(x(8)) * (G - n3) - sin(x(4)) * n3p * cos(x(8)) / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * cos(x(4)) + (G - n3) * (-sin(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * cos(x(8)))) * cos(x(5)) - 0.2e1 * (G - n3) * x(13) ^ 2 * L0 * m0 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 2) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 - (0.2e1 * m0 * (x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + (((-(G - n3) * x(12) ^ 2 / 0.2e1 - n3pp / 0.2e1) * cos(x(8)) * sin(x(7)) + x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(4)) + x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * x(12) * sin(x(7)) * n3p + ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(7))) * cos(x(6)) - cos(x(8)) * sin(x(6)) * x(12) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * sin(x(8)) * sin(x(7)) - x(12) * cos(x(7)) * n3p) * cos(x(6)) - sin(x(6)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.2e1) * cos(x(8))) * cos(x(4)) ^ 2 + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(4)) + x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + (((((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1) * cos(x(8)) - 0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * n3p + sin(x(8)) * ((0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) ^ 2 + (G - n3) * x(13) ^ 2 + n3pp / 0.3e1))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * x(12) * cos(x(4)) - 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) + (G - n3) * ((cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)))) * cos(x(5)) + (G - n3) * (-0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 + cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 * ((-cos(x(6)) * sin(x(7)) * cos(x(8)) - sin(x(6)) * sin(x(8))) * sin(x(4)) * cos(x(5)) + sin(x(5)) * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))))) + 0.2e1 * x(13) * x(12) * sin(x(5)) / cos(x(5)) ^ 4 * (0.2e1 * m0 * (x(13) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((-cos(x(8)) * x(12) * (G - n3) * sin(x(7)) + x(13) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) - sin(x(6)) * x(12) * (G - n3) * sin(x(8))) * cos(x(4)) ^ 2 + (-(sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * cos(x(4)) + 0.2e1 * x(12) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (((sin(x(8)) * sin(x(7)) * n3p + 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - cos(x(8)) * sin(x(6)) * n3p) * cos(x(4)) ^ 3 - sin(x(4)) * ((0.2e1 * sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p) * cos(x(6)) - 0.2e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 2 - 0.3e1 / 0.2e1 * cos(x(7)) * (G - n3) * cos(x(6)) * x(12) * cos(x(4)) + (((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * cos(x(4)) + 0.2e1 * x(12) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * sin(x(8)) * (G - n3) * sin(x(7)) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * (G - n3)) * x(13) * cos(x(4)) ^ 3 + ((0.2e1 * (0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12) * cos(x(8)) * sin(x(7)) - 0.4e1 / 0.3e1 * x(13) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * (0.2e1 / 0.3e1 * G - 0.2e1 / 0.3e1 * n3) * x(12)) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p / 0.2e1)) * cos(x(4)) - 0.4e1 / 0.3e1 * x(12) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 2 - cos(x(4)) * (G - n3) * (0.4e1 * cos(x(8)) * x(13) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(7)) * cos(x(6)) + 0.4e1 * sin(x(6)) * x(13) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(8))) * cos(x(5))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(4)) ^ 3 - x(12) ^ 2 / cos(x(5)) ^ 2 * sin(x(5)) * (0.2e1 * m0 * (x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(4)) ^ 3 + x(12) * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(6)) * cos(x(4)) ^ 2 + (-sin(x(8)) * (G - n3) * sin(x(7)) * cos(x(6)) + cos(x(8)) * sin(x(6)) * (G - n3)) * x(12) * cos(x(4))) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (sin(x(4)) * (G - n3) * cos(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * sin(x(8)) * sin(x(4)) * (G - n3)) * x(12) * cos(x(4)) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((-0.4e1 / 0.3e1 * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + (((0.2e1 * x(13) * (G - n3) * cos(x(8)) - 0.2e1 / 0.3e1 * sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.4e1 / 0.3e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (0.2e1 / 0.3e1 * sin(x(4)) * n3p * cos(x(8)) + 0.2e1 * x(13) * sin(x(8)) * (G - n3))) * cos(x(4)) ^ 2 + (0.4e1 / 0.3e1 * sin(x(8)) * (G - n3) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * cos(x(8)) * sin(x(6)) * (G - n3)) * x(12) * cos(x(4))) * cos(x(5)) ^ 2 - cos(x(4)) * (0.4e1 * x(13) * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * (G - n3) * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(4)) - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * (sin(x(8)) * sin(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - sin(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * cos(x(4)) + (G - n3) * ((0.4e1 * cos(x(8)) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(7)) + 0.2e1 * x(13) * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) + 0.4e1 * sin(x(6)) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 * sin(x(8)))) * cos(x(5)) - 0.4e1 * (G - n3) * x(13) * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(4)) ^ 3 + n3p * (0.2e1 * m0 * (-x(13) * x(12) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 3 + ((x(12) ^ 2 * cos(x(8)) * sin(x(7)) / 0.2e1 - x(13) * x(12) * cos(x(7)) * sin(x(4))) * cos(x(6)) + sin(x(6)) * x(12) ^ 2 * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 + (x(13) * sin(x(8)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * x(13) * cos(x(8))) * x(12) * cos(x(4)) - x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (-x(12) ^ 2 * cos(x(7)) * cos(x(6)) * cos(x(4)) ^ 3 - sin(x(4)) * (-x(12) ^ 2 * sin(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * x(12) ^ 2 * cos(x(8))) * cos(x(4)) ^ 2 + ((-x(13) * cos(x(8)) * sin(x(4)) * sin(x(7)) + 0.3e1 / 0.2e1 * x(12) * cos(x(7))) * cos(x(6)) - sin(x(6)) * x(13) * sin(x(8)) * sin(x(4))) * x(12) * cos(x(4)) - x(12) ^ 2 * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * ((0.4e1 / 0.3e1 * sin(x(8)) * x(12) * sin(x(7)) * cos(x(6)) - 0.4e1 / 0.3e1 * sin(x(6)) * cos(x(8)) * x(12)) * x(13) * cos(x(4)) ^ 3 + (((-0.2e1 / 0.3e1 * x(12) ^ 2 - x(13) ^ 2) * cos(x(8)) * sin(x(7)) + 0.4e1 / 0.3e1 * x(13) * x(12) * cos(x(7)) * sin(x(4))) * cos(x(6)) + sin(x(6)) * sin(x(8)) * (-0.2e1 / 0.3e1 * x(12) ^ 2 - x(13) ^ 2)) * cos(x(4)) ^ 2 + (-0.4e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(7)) * cos(x(6)) + 0.4e1 / 0.3e1 * sin(x(6)) * x(13) * cos(x(8))) * x(12) * cos(x(4)) + 0.2e1 / 0.3e1 * x(12) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * cos(x(5)) ^ 2 - cos(x(4)) * (-0.2e1 * x(13) ^ 2 * cos(x(6)) * L0 * sin(x(5)) * cos(x(7)) * m0 * cos(x(4)) ^ 2 - 0.2e1 * m0 * sin(x(5)) * L0 * x(13) * (-x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + x(13) * cos(x(8)) * sin(x(4)) * sin(x(6))) * cos(x(4)) - (cos(x(8)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(7)) + x(13) ^ 2 * L0 * sin(x(5)) * cos(x(7)) * m0) * cos(x(6)) - sin(x(6)) * (0.4e1 * x(13) * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 + (m0 + mp0) * (G - n3)) * sin(x(8)) + (G - n3) * (cos(x(8)) * (-m0 - mp0) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (-m0 - mp0) * sin(x(8)))) * cos(x(5)) + 0.2e1 * x(13) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(5)) * cos(x(7)) * (m0 + mp0) * (G - n3)) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 + n3pp * (0.2e1 * m0 * (-sin(x(4)) * cos(x(8)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4))) * x(12) * cos(x(4)) * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * ((sin(x(8)) * x(12) * sin(x(7)) * cos(x(6)) - sin(x(6)) * cos(x(8)) * x(12)) * cos(x(4)) ^ 3 + sin(x(4)) * x(12) * cos(x(7)) * cos(x(6)) * cos(x(4)) ^ 2 + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * x(12) * cos(x(4))) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * (0.2e1 / 0.3e1 * cos(x(7)) * cos(x(6)) * x(13) * cos(x(4)) ^ 3 + (-0.2e1 / 0.3e1 * x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + 0.2e1 / 0.3e1 * x(13) * cos(x(8)) * sin(x(4)) * sin(x(6))) * cos(x(4)) ^ 2 + (0.2e1 / 0.3e1 * sin(x(4)) * cos(x(8)) * sin(x(7)) * cos(x(6)) + 0.2e1 / 0.3e1 * sin(x(6)) * sin(x(8)) * sin(x(4))) * x(12) * cos(x(4))) * cos(x(5)) ^ 2 + 0.2e1 * cos(x(4)) ^ 2 * m0 * sin(x(5)) * L0 * x(13) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5))) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 + n3ppp * (0.2e1 * m0 * (-cos(x(6)) * sin(x(7)) * cos(x(8)) / 0.2e1 - sin(x(6)) * sin(x(8)) / 0.2e1) * cos(x(4)) ^ 2 * L0 * cos(x(5)) ^ 4 + 0.2e1 * m0 * sin(x(5)) * L0 * (cos(x(7)) * cos(x(6)) * cos(x(4)) ^ 3 / 0.2e1 - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) / 0.2e1 - sin(x(6)) * cos(x(8)) / 0.2e1) * cos(x(4)) ^ 2) * cos(x(5)) ^ 3 + 0.3e1 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) / 0.3e1 + sin(x(6)) * sin(x(8)) / 0.3e1) * cos(x(4)) ^ 2 * cos(x(5)) ^ 2) / m0 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) + (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 + (-0.4e1 * x(12) * (G - n3) * cos(x(4)) * ((cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 + 0.2e1 * sin(x(6)) * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) + cos(x(8)) * sin(x(8))) * cos(x(4)) ^ 2 - cos(x(6)) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) - cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 - 0.2e1 * sin(x(6)) * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) - cos(x(8)) * sin(x(8))) * cos(x(5)) ^ 5 + 0.2e1 * x(12) * (G - n3) * cos(x(4)) * (-0.2e1 * cos(x(6)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 3 + (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2) * sin(x(4)) * cos(x(4)) ^ 2 + 0.2e1 * cos(x(6)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) - 0.2e1 * sin(x(4)) * ((cos(x(7)) ^ 2 - 0.2e1) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2 - 0.1e1 / 0.2e1)) * sin(x(5)) * cos(x(5)) ^ 4 + (0.2e1 * (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2) * (G - n3) * x(13) * cos(x(4)) ^ 4 + (((0.8e1 * sin(x(8)) * x(12) * (G - n3) * cos(x(7)) ^ 2 + 0.2e1 * cos(x(7)) * sin(x(7)) * n3p - 0.16e2 * sin(x(8)) * x(12) * (G - n3)) * cos(x(8)) + 0.4e1 * x(13) * sin(x(8)) * cos(x(7)) * sin(x(4)) * sin(x(7)) * (G - n3)) * cos(x(6)) ^ 2 - 0.4e1 * sin(x(6)) * (-0.4e1 * x(12) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + x(13) * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * cos(x(7)) * n3p / 0.2e1 + 0.2e1 * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) + 0.8e1 * cos(x(8)) * sin(x(8)) * x(12) * (G - n3)) * cos(x(4)) ^ 3 + ((-0.8e1 * x(13) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 - 0.8e1 * sin(x(4)) * (-sin(x(8)) * cos(x(7)) ^ 2 * n3p / 0.4e1 + x(12) * sin(x(7)) * (G - n3) * cos(x(7)) + sin(x(8)) * n3p / 0.2e1) * cos(x(8)) - 0.2e1 * x(13) * (cos(x(7)) ^ 2 + 0.4e1) * (G - n3)) * cos(x(6)) ^ 2 + 0.16e2 * sin(x(6)) * (cos(x(8)) ^ 2 * sin(x(4)) * sin(x(7)) * n3p / 0.4e1 + x(13) * sin(x(8)) * sin(x(7)) * (G - n3) * cos(x(8)) - (sin(x(8)) * x(12) * (G - n3) * cos(x(7)) + sin(x(7)) * n3p / 0.4e1) * sin(x(4)) / 0.2e1) * cos(x(6)) - 0.8e1 * x(13) * (G - n3) * cos(x(8)) ^ 2 + 0.2e1 * cos(x(8)) * sin(x(8)) * sin(x(4)) * n3p + 0.6e1 * x(13) * (G - n3)) * cos(x(4)) ^ 2 + (((-0.6e1 * sin(x(8)) * x(12) * (G - n3) * cos(x(7)) ^ 2 + 0.2e1 * cos(x(7)) * sin(x(7)) * n3p + 0.12e2 * sin(x(8)) * x(12) * (G - n3)) * cos(x(8)) + 0.4e1 * x(13) * sin(x(8)) * cos(x(7)) * sin(x(4)) * sin(x(7)) * (G - n3)) * cos(x(6)) ^ 2 - 0.4e1 * sin(x(6)) * (0.3e1 * x(12) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + x(13) * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * cos(x(7)) * n3p / 0.2e1 - 0.3e1 / 0.2e1 * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) - 0.6e1 * cos(x(8)) * sin(x(8)) * x(12) * (G - n3)) * cos(x(4)) - 0.4e1 * cos(x(6)) * x(12) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) ^ 3 - 0.8e1 * (x(13) * cos(x(6)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3) * cos(x(4)) ^ 3 + ((n3p * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 / 0.4e1 + x(13) * sin(x(8)) * sin(x(4)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) + cos(x(7)) ^ 2 * n3p / 0.4e1 - 0.3e1 / 0.4e1 * sin(x(7)) * x(12) * sin(x(8)) * (G - n3) * cos(x(7)) + n3p / 0.4e1) * cos(x(6)) ^ 2 + 0.2e1 * sin(x(6)) * (x(13) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + (0.3e1 / 0.8e1 * x(12) * cos(x(7)) * (G - n3) - sin(x(8)) * sin(x(7)) * n3p / 0.4e1) * cos(x(8)) - x(13) * sin(x(4)) * sin(x(7)) * (G - n3) / 0.2e1) * cos(x(6)) + cos(x(8)) ^ 2 * n3p / 0.4e1 + x(13) * sin(x(8)) * sin(x(4)) * (G - n3) * cos(x(8)) - n3p / 0.4e1) * cos(x(4)) ^ 2 + ((-x(12) * sin(x(4)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 / 0.2e1 + x(13) * cos(x(7)) * sin(x(7)) * (G - n3) * cos(x(8)) / 0.2e1 - 0.3e1 / 0.4e1 * sin(x(4)) * (x(12) * (G - n3) * cos(x(7)) ^ 2 + sin(x(8)) * cos(x(7)) * sin(x(7)) * n3p / 0.3e1 + 0.2e1 / 0.3e1 * x(12) * (G - n3))) * cos(x(6)) ^ 2 + sin(x(6)) * (0.2e1 * (cos(x(7)) * n3p / 0.4e1 + sin(x(8)) * x(12) * (G - n3) * sin(x(7))) * sin(x(4)) * cos(x(8)) + x(13) * sin(x(8)) * cos(x(7)) * (G - n3)) * cos(x(6)) / 0.2e1 - x(12) * sin(x(4)) * (cos(x(8)) - 0.1e1) * (cos(x(8)) + 0.1e1) * (G - n3) / 0.2e1) * cos(x(4)) + cos(x(6)) * x(12) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) / 0.2e1) * sin(x(5)) * cos(x(5)) ^ 2 + (0.4e1 * (G - n3) * (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 + 0.3e1 / 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2 - 0.1e1) * x(13) * cos(x(4)) ^ 2 - 0.6e1 * cos(x(7)) * ((n3p * cos(x(8)) / 0.3e1 + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) - sin(x(6)) * (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p / 0.3e1)) * cos(x(6)) * cos(x(4)) + 0.4e1 * cos(x(6)) * x(12) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(5)) + 0.4e1 * x(13) * cos(x(6)) * sin(x(5)) * cos(x(4)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) / m0 / L0 / cos(x(4)) ^ 4 / ((cos(x(7)) * cos(x(4)) * cos(x(6)) - (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / cos(x(5)) ^ 4 * (-L0 * cos(x(5)) ^ 3 * cos(x(4)) * m0 * x(12) ^ 2 - L0 * cos(x(4)) * cos(x(5)) * m0 * x(13) ^ 2 + (m0 + mp0) * (G - n3)) x(2) x(10) (G - n3) * sin(x(4)) / cos(x(4)) (-n3p * sin(x(4)) * cos(x(4)) + x(12) * (G - n3)) / cos(x(4)) ^ 2 (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + m0 * L0 * cos(x(5)) * (((0.3e1 * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) - (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) - (G - n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 x(12) * ((0.4e1 * cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 3 * sin(x(4)) - L0 * cos(x(4)) ^ 4 * cos(x(5)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + 0.3e1 * L0 * sin(x(4)) ^ 2 * cos(x(5)) ^ 3 * cos(x(4)) ^ 2 * cos(x(6)) * cos(x(7)) * m0 * n3pp + 0.2e1 * L0 * m0 * cos(x(5)) ^ 2 * sin(x(5)) * (-cos(x(8)) * cos(x(4)) * sin(x(7)) * n3pp * cos(x(6)) / 0.2e1 - sin(x(6)) * sin(x(8)) * cos(x(4)) * n3pp / 0.2e1) * cos(x(4)) ^ 2 - 0.2e1 * L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) * sin(x(4)) + (-0.2e1 * m0 * L0 * ((-sin(x(8)) * cos(x(4)) * n3p * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * cos(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * cos(x(4)) * n3p * cos(x(8))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (x(13) * sin(x(8)) * cos(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - x(13) * cos(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * x(13) ^ 2 * cos(x(7)) * cos(x(4)) * cos(x(6)) * (G - n3) * L0 * cos(x(5))) * cos(x(4)) - (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * sin(x(4)) + (-G + n3) * (-0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * cos(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * cos(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-cos(x(5)) * sin(x(4)) * cos(x(6)) * cos(x(7)) - cos(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5))) + 0.3e1 * (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 4 * sin(x(4))) + x(13) * ((0.3e1 * cos(x(5)) ^ 2 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 * sin(x(5)) + 0.3e1 * L0 * sin(x(4)) * cos(x(5)) ^ 2 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp * sin(x(5)) - L0 * m0 * sin(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + L0 * m0 * cos(x(5)) * (-0.2e1 * (((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) * sin(x(5)) + 0.2e1 * cos(x(5)) ^ 2 * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) - 0.2e1 * sin(x(5)) ^ 2 * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1)) * cos(x(4)) ^ 2 + (0.6e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 2 * sin(x(5)) - 0.2e1 * m0 * cos(x(5)) ^ 3 * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) + 0.4e1 * m0 * sin(x(5)) ^ 2 * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) - m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * sin(x(5))) * cos(x(4)) + (-G + n3) * (-0.6e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 2 * sin(x(5)) - 0.2e1 * x(12) ^ 2 * L0 * cos(x(5)) ^ 3 * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) + 0.4e1 * x(12) ^ 2 * L0 * sin(x(5)) ^ 2 * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-sin(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) + sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(5)) + cos(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) + 0.2e1 * (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 3 / cos(x(4)) ^ 3 * sin(x(5))) + (sin(x(6)) * sin(x(7)) * x(15) + cos(x(6)) * sin(x(7)) * x(16) + x(14) * cos(x(7))) / cos(x(7)) * ((-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 + L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * sin(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((-((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * sin(x(6)) - 0.3e1 * cos(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * (-(-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * sin(x(6)) - cos(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (-((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * sin(x(6)) + cos(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (-(n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * sin(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * cos(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * (-(x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * sin(x(6)) + 0.2e1 * cos(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 - sin(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-cos(x(5)) * cos(x(4)) * sin(x(6)) * cos(x(7)) - sin(x(4)) * (-sin(x(6)) * sin(x(7)) * sin(x(8)) - cos(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (-sin(x(6)) * sin(x(7)) * cos(x(8)) + cos(x(6)) * sin(x(8))))) + (cos(x(6)) * x(15) - sin(x(6)) * x(16)) * ((-cos(x(5)) ^ 3 * L0 * m0 * n3pp * cos(x(6)) * cos(x(7)) * sin(x(8)) * cos(x(4)) ^ 4 + L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * sin(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * (((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * cos(x(7)) + 0.2e1 * x(12) * sin(x(7)) * n3p) * cos(x(6)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * (-cos(x(8)) * sin(x(4)) * cos(x(7)) * n3pp / 0.2e1 - x(13) * x(12) * sin(x(7)) * (G - n3)) * cos(x(6)) * cos(x(5)) + x(13) ^ 2 * cos(x(6)) * cos(x(7)) * sin(x(8)) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * ((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * cos(x(7)) + 0.3e1 / 0.2e1 * x(12) * sin(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * cos(x(7)) * cos(x(6)) * x(12) * cos(x(5)) ^ 2 + m0 * (-x(13) * sin(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * cos(x(7))) * cos(x(6)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * cos(x(6)) * cos(x(7)) * sin(x(8))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * cos(x(6)) * cos(x(7)) * sin(x(8)) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * cos(x(6)) * cos(x(7)) * cos(x(8)) * cos(x(5)) ^ 2 - cos(x(6)) * sin(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-cos(x(5)) * cos(x(4)) * cos(x(6)) * sin(x(7)) - sin(x(4)) * cos(x(6)) * cos(x(7)) * sin(x(8)) * cos(x(5)) + sin(x(5)) * cos(x(6)) * cos(x(7)) * cos(x(8)))) + (sin(x(6)) * x(15) + cos(x(6)) * x(16)) / cos(x(7)) * ((-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(4)) ^ 4 + L0 * m0 * cos(x(5)) * (((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * cos(x(8)) * sin(x(7)) * cos(x(6)) + 0.3e1 * sin(x(6)) * sin(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * (sin(x(8)) * sin(x(4)) * sin(x(7)) * n3pp * cos(x(6)) / 0.2e1 - sin(x(6)) * cos(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * ((-sin(x(4)) * n3p * cos(x(8)) - x(13) * sin(x(8)) * (G - n3)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p)) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p) * sin(x(7)) * cos(x(6)) + sin(x(6)) * (n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3))) * x(12) * cos(x(5)) ^ 2 + m0 * (-0.2e1 * sin(x(8)) * x(12) * sin(x(7)) * cos(x(6)) + 0.2e1 * sin(x(6)) * cos(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 2)) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 - (-cos(x(5)) ^ 3 * L0 * m0 * n3pp * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 * n3pp + L0 * m0 * cos(x(5)) * ((((0.3e1 * (G - n3) * x(12) ^ 2 + n3pp) * sin(x(8)) * sin(x(7)) - 0.2e1 * x(12) * cos(x(7)) * n3p) * cos(x(6)) - 0.3e1 * sin(x(6)) * cos(x(8)) * ((G - n3) * x(12) ^ 2 + n3pp / 0.3e1)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * ((-cos(x(8)) * sin(x(4)) * sin(x(7)) * n3pp / 0.2e1 + x(13) * x(12) * cos(x(7)) * (G - n3)) * cos(x(6)) - sin(x(6)) * sin(x(8)) * sin(x(4)) * n3pp / 0.2e1) * cos(x(5)) + x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * x(13) * cos(x(5)) - (G - n3) ^ 2 * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + (-G + n3) * (0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) ^ 2 / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 * (-sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) + sin(x(5)) * (-cos(x(6)) * sin(x(7)) * sin(x(8)) + sin(x(6)) * cos(x(8))))) + 0.2e1 * x(13) * x(12) * sin(x(5)) / cos(x(5)) ^ 3 * (L0 * m0 * cos(x(5)) * (((0.6e1 * sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - 0.2e1 * cos(x(7)) * n3p) * cos(x(6)) - 0.6e1 * cos(x(8)) * sin(x(6)) * x(12) * (G - n3)) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * x(13) * cos(x(7)) * (G - n3) * cos(x(6)) * cos(x(5))) * cos(x(4)) ^ 2 + (0.3e1 * m0 * L0 * cos(x(7)) * sin(x(4)) * (G - n3) * cos(x(6)) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * L0 * (((x(13) * (G - n3) * cos(x(8)) - sin(x(8)) * sin(x(4)) * n3p) * sin(x(7)) - 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4)) * (G - n3)) * cos(x(6)) + sin(x(6)) * (sin(x(4)) * n3p * cos(x(8)) + x(13) * sin(x(8)) * (G - n3))) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * ((n3p * cos(x(8)) + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * sin(x(7)) * cos(x(6)) + (-x(13) * sin(x(4)) * (G - n3) * cos(x(8)) + sin(x(8)) * n3p) * sin(x(6))) * cos(x(5)) ^ 2 + m0 * (0.2e1 * cos(x(6)) * sin(x(7)) * cos(x(8)) + 0.2e1 * sin(x(6)) * sin(x(8))) * (G - n3) * L0 * x(13) * cos(x(5))) * cos(x(4)) + (-G + n3) * (0.4e1 * x(12) * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.4e1 * x(12) * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2)) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(4)) ^ 3 - x(12) ^ 2 / cos(x(5)) * sin(x(5)) * (L0 * m0 * cos(x(5)) * (0.2e1 * sin(x(5)) * x(12) * cos(x(7)) * (G - n3) * cos(x(6)) * cos(x(5)) + 0.2e1 * x(13) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * ((G - n3) * cos(x(8)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * sin(x(8)) * (G - n3)) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (sin(x(8)) * sin(x(4)) * (G - n3) * sin(x(7)) * cos(x(6)) - sin(x(4)) * (G - n3) * cos(x(8)) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 + m0 * sin(x(4)) * cos(x(6)) * cos(x(7)) * (G - n3) * L0 * x(13) * cos(x(5)) + m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * (G - n3) * L0 * cos(x(5))) * cos(x(4))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(4)) ^ 3 + n3p * (L0 * m0 * cos(x(5)) * ((-0.3e1 * x(12) ^ 2 * sin(x(8)) * sin(x(7)) * cos(x(6)) + 0.3e1 * sin(x(6)) * x(12) ^ 2 * cos(x(8))) * cos(x(5)) ^ 2 - 0.2e1 * sin(x(5)) * x(13) * x(12) * cos(x(7)) * cos(x(6)) * cos(x(5)) - x(13) ^ 2 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * ((-x(13) * cos(x(8)) * sin(x(7)) + 0.3e1 / 0.2e1 * x(12) * cos(x(7)) * sin(x(4))) * cos(x(6)) - sin(x(6)) * x(13) * sin(x(8))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (-x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + x(13) * cos(x(8)) * sin(x(4)) * sin(x(6))) * x(12) * cos(x(5)) ^ 2 - m0 * ((x(13) * cos(x(7)) * sin(x(4)) + 0.2e1 * cos(x(8)) * x(12) * sin(x(7))) * cos(x(6)) + 0.2e1 * sin(x(6)) * sin(x(8)) * x(12)) * L0 * x(13) * cos(x(5)) + 0.2e1 * (G - n3) * (m0 + mp0) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8)))) * cos(x(4)) + 0.2e1 * x(12) ^ 2 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 3 - 0.2e1 * x(12) ^ 2 * L0 * sin(x(5)) * sin(x(4)) * m0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * cos(x(5)) ^ 2 + cos(x(6)) * cos(x(7)) * sin(x(4)) * (m0 + mp0) * (G - n3) - (-G + n3) * sin(x(4)) * cos(x(6)) * cos(x(7)) * (m0 + mp0)) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 + n3pp * (-0.2e1 * L0 * m0 * cos(x(5)) ^ 3 * x(12) * cos(x(7)) * cos(x(6)) * cos(x(4)) ^ 2 + (-0.2e1 * m0 * L0 * (-sin(x(8)) * sin(x(4)) * sin(x(7)) * cos(x(6)) + sin(x(6)) * sin(x(4)) * cos(x(8))) * x(12) * cos(x(5)) ^ 3 - 0.2e1 * m0 * sin(x(5)) * L0 * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * x(12) * cos(x(5)) ^ 2) * cos(x(4))) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 + n3ppp * (-cos(x(5)) ^ 3 * L0 * m0 * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(4)) ^ 4 - L0 * sin(x(4)) * cos(x(5)) ^ 3 * cos(x(4)) ^ 3 * cos(x(6)) * cos(x(7)) * m0 + L0 * m0 * cos(x(5)) * ((cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) ^ 2 + 0.2e1 * sin(x(5)) * (-sin(x(4)) * cos(x(8)) * sin(x(7)) * cos(x(6)) / 0.2e1 - sin(x(6)) * sin(x(8)) * sin(x(4)) / 0.2e1) * cos(x(5))) * cos(x(4)) ^ 2) / m0 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / L0 / cos(x(5)) ^ 2 / cos(x(4)) ^ 3 + (-0.8e1 * (x(12) * (((cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.2e1 * cos(x(7)) ^ 2 + 0.1e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2) * (G - n3) * cos(x(5)) ^ 3 / 0.4e1 + ((x(12) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 / 0.2e1 - x(12) * (G - n3) * cos(x(7)) ^ 2 - sin(x(8)) * cos(x(7)) * sin(x(7)) * n3p / 0.2e1 + x(12) * (G - n3) / 0.2e1) * cos(x(6)) ^ 2 - sin(x(6)) * cos(x(8)) * (sin(x(8)) * x(12) * (G - n3) * sin(x(7)) - cos(x(7)) * n3p / 0.2e1) * cos(x(6)) + cos(x(8)) ^ 2 * x(12) * (G - n3) / 0.2e1) * cos(x(5)) + x(13) * cos(x(6)) * sin(x(5)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3)) * cos(x(5)) * cos(x(4)) ^ 3 + (-0.4e1 * cos(x(6)) * x(12) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * (G - n3) * cos(x(5)) ^ 4 + 0.4e1 * cos(x(6)) * x(12) * sin(x(5)) * cos(x(7)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3) * cos(x(5)) ^ 3 + ((-0.2e1 * sin(x(4)) * n3p * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(8)) ^ 2 - 0.4e1 * x(13) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) - 0.8e1 * sin(x(4)) * (-cos(x(7)) ^ 2 * n3p / 0.2e1 + sin(x(7)) * x(12) * sin(x(8)) * (G - n3) * cos(x(7)) + n3p / 0.4e1)) * cos(x(6)) ^ 2 - 0.8e1 * sin(x(6)) * (x(13) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 - (x(12) * cos(x(7)) * (G - n3) + sin(x(8)) * sin(x(7)) * n3p / 0.2e1) * sin(x(4)) * cos(x(8)) - x(13) * sin(x(7)) * (G - n3) / 0.2e1) * cos(x(6)) - 0.4e1 * (sin(x(4)) * n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * (G - n3)) * cos(x(8))) * cos(x(5)) ^ 2 + 0.4e1 * ((x(13) * sin(x(4)) * (cos(x(7)) ^ 2 - 0.2e1) * (G - n3) * cos(x(8)) ^ 2 + (-sin(x(8)) * cos(x(7)) ^ 2 * n3p / 0.2e1 + x(12) * sin(x(7)) * (G - n3) * cos(x(7)) / 0.2e1 + sin(x(8)) * n3p) * cos(x(8)) - 0.2e1 * (G - n3) * (cos(x(7)) ^ 2 - 0.1e1 / 0.2e1) * sin(x(4)) * x(13)) * cos(x(6)) ^ 2 - 0.2e1 * sin(x(6)) * (cos(x(8)) ^ 2 * sin(x(7)) * n3p / 0.2e1 + x(13) * sin(x(8)) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) - sin(x(8)) * x(12) * (G - n3) * cos(x(7)) / 0.4e1 - sin(x(7)) * n3p / 0.4e1) * cos(x(6)) + cos(x(8)) * (x(13) * sin(x(4)) * (G - n3) * cos(x(8)) - sin(x(8)) * n3p / 0.2e1)) * sin(x(5)) * cos(x(5)) + 0.2e1 * (G - n3) * (cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 + 0.2e1 * sin(x(6)) * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) + cos(x(8)) * sin(x(8))) * x(13)) * cos(x(4)) ^ 2 + (0.4e1 * x(12) * (G - n3) * ((cos(x(7)) ^ 2 - 0.2e1) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) ^ 2 - 0.2e1 * cos(x(6)) * sin(x(7)) * sin(x(8)) * cos(x(8)) * sin(x(6)) + cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(5)) ^ 4 + 0.4e1 * x(12) * (G - n3) * (cos(x(8)) * sin(x(8)) * (cos(x(7)) ^ 2 - 0.2e1) * cos(x(6)) ^ 2 + 0.2e1 * sin(x(6)) * sin(x(7)) * (cos(x(8)) ^ 2 - 0.1e1 / 0.2e1) * cos(x(6)) + cos(x(8)) * sin(x(8))) * sin(x(4)) * sin(x(5)) * cos(x(5)) ^ 3 + (0.4e1 * cos(x(7)) * (x(13) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) - 0.2e1 * x(12) * cos(x(7)) * (G - n3) - sin(x(8)) * sin(x(7)) * n3p / 0.2e1) * cos(x(6)) ^ 2 + 0.4e1 * sin(x(6)) * cos(x(7)) * (n3p * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * sin(x(4)) * (G - n3)) * cos(x(6)) + 0.2e1 * x(12) * (G - n3)) * cos(x(5)) ^ 2 + 0.4e1 * (((sin(x(8)) * x(12) * (G - n3) * cos(x(7)) ^ 2 + cos(x(7)) * sin(x(7)) * n3p - 0.2e1 * sin(x(8)) * x(12) * (G - n3)) * sin(x(4)) * cos(x(8)) / 0.2e1 + x(13) * sin(x(8)) * cos(x(7)) * sin(x(7)) * (G - n3)) * cos(x(6)) ^ 2 - sin(x(6)) * (-x(12) * sin(x(4)) * sin(x(7)) * (G - n3) * cos(x(8)) ^ 2 + x(13) * cos(x(7)) * (G - n3) * cos(x(8)) + (-sin(x(8)) * cos(x(7)) * n3p + x(12) * sin(x(7)) * (G - n3)) * sin(x(4)) / 0.2e1) * cos(x(6)) + cos(x(8)) * sin(x(8)) * x(12) * sin(x(4)) * (G - n3) / 0.2e1) * sin(x(5)) * cos(x(5)) - 0.2e1 * x(13) * cos(x(6)) * cos(x(7)) * sin(x(4)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8))) * (G - n3)) * cos(x(4)) - 0.4e1 * (-sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) * x(12) * cos(x(7)) * (G - n3) * cos(x(6)) * cos(x(5))) / m0 / L0 / cos(x(4)) ^ 4 / (cos(x(5)) * cos(x(4)) * cos(x(6)) * cos(x(7)) - sin(x(4)) * (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) / cos(x(5)) ^ 3 * (-L0 * cos(x(5)) ^ 3 * cos(x(4)) * m0 * x(12) ^ 2 - L0 * cos(x(4)) * cos(x(5)) * m0 * x(13) ^ 2 + (m0 + mp0) * (G - n3)) / ((cos(x(7)) * cos(x(4)) * cos(x(6)) - (cos(x(6)) * sin(x(7)) * sin(x(8)) - sin(x(6)) * cos(x(8))) * sin(x(4))) * cos(x(5)) + sin(x(5)) * (cos(x(6)) * sin(x(7)) * cos(x(8)) + sin(x(6)) * sin(x(8)))) x(3) x(11) x(8) (sin(x(6)) * x(15) + cos(x(6)) * x(16)) / cos(x(7))];

z = -([yr(1:14), yr(19), yr(20)]-Ts)';
n1 = yr6(1) - Kv6*z(1:6);
n2 = yr6(2) - Kv6*z(7:12);
n4 = 0 - Kv2*z(15:16);
t1 = x(12);
t2 = x(4);
t3 = cos(t2);
t4 = -G + n3;
t5 = x(8);
t6 = sin(t5);
t7 = x(7);
t8 = sin(t7);
t7 = cos(t7);
t9 = 4;
t10 = t7 ^ 2;
t11 = t7 * t10;
t5 = cos(t5);
t12 = t5 ^ 2;
t13 = t5 * t12;
t14 = (-t9 + t10) * t12;
t15 = 0.1e1 + t14;
t16 = t9 * t10;
t17 = x(6);
t18 = cos(t17);
t19 = -0.4e1 / 0.3e1 + t10;
t20 = t19 * t12;
t21 = 0.1e1 + t20;
t22 = 0.2e1 * t10;
t17 = sin(t17);
t23 = t18 ^ 2;
t24 = t18 * t23;
t25 = t8 * t6;
t26 = t13 * t17;
t27 = t25 * t5;
t28 = t18 * t5;
t29 = -0.3e1 * t28 * (-t27 + t18 * (t21 - t22) * t17) - t26 + t25 * (t15 - t16) * t24;
t30 = x(13);
t31 = -0.2e1 + t7;
t32 = 0.2e1 + t7;
t2 = sin(t2);
t33 = -0.2e1 + t10;
t34 = 5;
t35 = 0.3e1 * t10;
t36 = t7 * t6;
t37 = t36 * n3p;
t38 = t37 * (-t35 + 0.6e1);
t39 = t1 * t8;
t40 = -0.3e1 / 0.4e1 + t10;
t41 = 0.5e1 / 0.2e1 * t12;
t42 = t33 * t12;
t43 = t7 * t2;
t44 = t43 * t4;
t45 = t7 * n3p;
t46 = t45 * t8;
t47 = t1 * t4;
t48 = t44 * t25 * t30;
t49 = 0.1e1 / 0.2e1;
t50 = 0.5e1 / 0.6e1 * t10;
t51 = t46 * t49;
t52 = t6 * n3p;
t53 = t30 * t2;
t54 = t53 * t4;
t55 = t54 * t5;
t56 = t39 * t4;
t57 = t17 * t6;
t58 = t57 * t47;
t59 = 0.3e1 / 0.5e1;
t60 = 0.2e1 - t10;
t61 = t10 * t59;
t62 = t47 * t36;
t63 = t62 * t60;
t64 = t8 * n3p;
t65 = (0.1e1 - t7) * (0.1e1 + t7);
t66 = t12 * t31 * t32;
t67 = 0.3e1 / 0.2e1 * t64;
t68 = t56 * t7;
t69 = t30 * t4;
t70 = t69 * t5;
t71 = 0.1e1 / 0.3e1;
t72 = t2 * t5;
t73 = t69 * t25;
t74 = 18;
t75 = 0.19e2 / 0.2e1;
t76 = t39 * t31 * t32;
t77 = t76 * t5;
t78 = t43 * t30;
t79 = t78 * t33;
t80 = t4 * t12;
t81 = 0.3e1 / 0.2e1 * t10;
t82 = -t81 + 0.2e1;
t83 = t47 * t82 * t6;
t84 = 0.1e1 / 0.4e1;
t85 = 0.19e2 / 0.24e2;
t86 = t12 * t74;
t87 = 0.6e1 * t12;
t88 = t47 * t6;
t89 = 0.3e1 / 0.14e2 * t10;
t90 = t63 + t64 * (-0.6e1 / 0.7e1 + t89);
t91 = t12 * t9;
t92 = n3p * t13;
t93 = t92 * t2;
t94 = 0.7e1 / 0.6e1;
t95 = 0.7e1 / 0.12e2;
t96 = 0.3e1 / 0.4e1 - t12;
t97 = t94 * (-t68 + t52 * (-0.3e1 / 0.7e1 * t10 + 0.4e1 / 0.7e1));
t98 = t70 * t96;
t99 = -t62 + 0.9e1 / 0.14e2 * t64;
t100 = t12 * t49;
t101 = t52 * (-t100 + 0.1e1 / 0.8e1);
t102 = -0.3e1 / 0.4e1 + t12;
t103 = -t49 + t5;
t104 = t49 + t5;
t105 = t57 * t5;
t106 = t5 * (t31 * t102 * t8 * t32 * t24 + t105) + 0.3e1 * t18 * (t57 * t103 * t104 * t19 * t18 + t102 * t8 * t5) - t57 * t84;
t41 = t3 * (t18 * (t18 * (t18 * (t5 * (t38 + t39 * (-t10 * t34 + 0.15e2 / 0.2e1) * t4 + t41 * t39 * t31 * t32 * t4) + t44 * (t40 * t9 - 0.3e1 * t42) * t30) - 0.6e1 * t17 * (t47 * (-0.5e1 / 0.12e2 + t50) * t6 - t5 * (-t5 * (t46 + t47 * (-0.5e1 / 0.4e1 * t10 + 0.5e1 / 0.3e1) * t6) + t48) - t51)) + 0.3e1 * t5 * (t56 * (-0.5e1 / 0.3e1 + t41) - t7 * (t52 + t55))) + t58 * t41 - t69 * t29 * t3) + t17 * (t5 * (-0.3e1 / 0.10e2 * t72 * t52 + t69 * (t59 - t12)) * t34 + 0.15e2 * t23 * (t2 * (-(-t68 + t52 * (0.3e1 / 0.10e2 - t61)) * t71 + 0.2e1 / 0.3e1 * t12 * (-t68 + t52 * (-0.9e1 / 0.20e2 * t10 + t59))) - t70 * (t20 + t65))) + t18 * (t23 * (t34 * ((t63 + t64 * (-0.9e1 / 0.10e2 + t61)) * t2 * t5 + t25 * (t65 + t66) * t30 * t4) - t67 * t2 * t31 * t32 * t13) + t73 * (0.15e2 * t12 - 0.3e1) + t72 * (t34 * (t64 * t59 - t62) - 0.9e1 / 0.2e1 * t64 * t12));
t61 = t47 * t9;
t63 = x(5);
t65 = cos(t63);
t63 = sin(t63);
t107 = 0.1e1 / 0.6e1;
t108 = t107 * t10;
t109 = t47 * t7;
t110 = t109 * t60;
t111 = t25 * (-0.2e1 / 0.3e1 + t108) * n3p;
t112 = 0.2e1 / 0.3e1 * t10;
t113 = 0.4e1 / 0.3e1 * t47;
t114 = t113 * t11;
t115 = t84 * t10;
t116 = n3p * (-t71 + t115);
t117 = t109 * t25;
t118 = t49 * t10;
t119 = t49 * n3p;
t120 = t119 * t25;
t121 = t107 * n3p;
t122 = t17 * t5;
t123 = t9 - t10;
t124 = t47 * t25;
t125 = t124 * t123;
t126 = t45 * (-t81 + 0.3e1);
t127 = t70 * t36;
t128 = 0.2e1 * t127;
t129 = t45 * t25;
t130 = t47 * t10;
t131 = t69 * t7;
t132 = t131 * t8;
t133 = t30 * t7 * t8;
t134 = t45 * t49;
t135 = t69 * t36;
t136 = t72 * t49;
t137 = t26 * t47;
t138 = -0.3e1 / 0.2e1 + t10;
t139 = 0.1e1 - t10;
t140 = n3p * t139;
t141 = t55 * t8;
t142 = t141 * t31 * t32;
t143 = 0.8e1 / 0.3e1 * t10;
t144 = t1 * t7;
t145 = 0.2e1 * t53;
t146 = -t49 + t10;
t147 = t54 * t6;
t148 = t147 * t19;
t149 = 0.2e1 / 0.3e1 * t147 * t146;
t150 = 0.3e1 * t12;
t151 = -t150 + 0.2e1;
t152 = t141 * t151;
t153 = 0.2e1 / 0.3e1 * t109;
t154 = n3p * t5;
t155 = 0.3e1 / 0.4e1 * t10;
t156 = (t125 + t45 * (-t155 + 0.3e1 / 0.2e1)) * t12;
t157 = t72 * t1;
t158 = t157 * t19;
t159 = t45 * t84;
t160 = -t124 - t159;
t161 = -t49 + t12;
t162 = t110 + t25 * (0.2e1 / 0.7e1 * t10 - 0.8e1 / 0.7e1) * n3p;
t163 = t54 * t8;
t164 = 0.4e1 / 0.3e1 * t53;
t165 = t7 * (-t124 - 0.9e1 / 0.28e2 * t45) + 0.3e1 / 0.7e1 * n3p;
t166 = -t109 + 0.6e1 / 0.7e1 * t25 * n3p;
t100 = t100 - 0.3e1 / 0.8e1;
t167 = t84 - t12;
t168 = t25 * (t150 - 0.3e1 / 0.4e1);
t169 = t25 * t31 * t32;
t102 = t122 * t102;
t102 = -t18 * (-t169 * t103 * t104 * t23 - t168) - t102 - 0.3e1 * t102 * t19 * t23;
t103 = t3 * (t18 * (t12 * (-t109 + t120) + t23 * (t25 * (t107 - t112) * n3p + t114 + t12 * (t110 + t111) - t109)) - t122 * ((0.2e1 * (t84 - t118) * n3p + 0.2e1 * t116 * t12 - 0.2e1 * t117) * t23 + t121 * t12)) + t18 * (t18 * (t18 * (t2 * (0.4e1 / 0.3e1 * t124 * (t84 - t10) + 0.4e1 / 0.3e1 * t45 * (0.3e1 / 0.8e1 - t118) - t12 * (t126 + t125) * t71) - t128 * t33) + t17 * (-t49 * (t72 * (t49 * (t129 + t47) - t130) - t132) - t80 * (t72 * t84 * t1 * t19 + t133)) * t9) + 0.2e1 * t5 * (-t136 * (-t124 - t134) - t135)) - t137 * t71 * t2;
t50 = t3 * (t3 * t103 + t18 * (t23 * (t4 * (t144 * (-t143 + 0.17e2 / 0.6e1) + t145 * t138 * t8 * t5) - 0.5e1 / 0.6e1 * t140 * t25 + t12 * (-t142 + t109 * (0.17e2 / 0.6e1 * t10 - 0.17e2 / 0.3e1) + t25 * (-t50 + 0.10e2 / 0.3e1) * n3p)) + t12 * (0.17e2 / 0.6e1 * t109 - 0.5e1 / 0.2e1 * t25 * n3p) + t120 + t152 - t153) + t122 * (t5 * (0.5e1 / 0.6e1 * t154 - t147) - t119) + (0.3e1 * (t5 * (0.10e2 / 0.3e1 * t116 * t5 - t148) + 0.5e1 / 0.6e1 * t140 - 0.17e2 / 0.9e1 * t117) * t5 + 0.3e1 * t149) * t17 * t23) + t17 * (t113 * t72 * t161 - t23 * (-t80 * (t133 + t158) + t132 * t49 - t72 * t94 * (0.3e1 / 0.7e1 * t129 + t47 * (0.6e1 / 0.7e1 - t10))) * t9) + t18 * (t23 * (-0.2e1 * t2 * (t124 * (0.2e1 / 0.3e1 - t10) + t45 * (t49 - t115)) + 0.2e1 * t127 * t33 + 0.4e1 / 0.3e1 * t156 * t2) + t2 * (0.2e1 / 0.3e1 * t124 + t45 / 0.2e1 + t91 * t160) + t128);
t103 = t11 * n3p;
t104 = t61 * t25;
t127 = t47 * t21;
t128 = 0.2e1 * t109;
t132 = t30 ^ 2;
t133 = t4 * t132;
t140 = -t133;
t170 = t1 ^ 2;
t171 = n3pp / 0.20e2 + t140 - 0.9e1 / 0.10e2 * t4 * t170;
t172 = t10 / 0.12e2;
t173 = t7 * t8;
t174 = t173 * t171;
t175 = t52 * t1;
t176 = 45;
t177 = 30;
t178 = 0.15e2 * t175;
t179 = t176 * t8;
t180 = t179 * t171;
t181 = t109 * (0.3e1 / 0.4e1 - t10);
t182 = 24;
t183 = t6 * t171;
t184 = t45 * t39;
t185 = x(15);
t186 = 36;
t187 = 9;
t188 = t45 * t187;
t189 = 0.9e1 / 0.2e1 * n3p;
t190 = t124 * t185;
t191 = t154 * t53;
t192 = t191 * t19;
t193 = x(14);
t194 = t193 * t8;
t195 = t53 * t186;
t196 = t185 * t7;
t197 = t196 * t17;
t198 = t47 * t185;
t199 = t198 * t17;
t200 = t177 * t8 * t171;
t201 = t49 * t17;
t202 = t201 * t185;
t203 = -t7 * (t197 - t194) + t202;
t204 = t7 * t193;
t205 = t185 * t8;
t206 = t204 * t17 + t205;
t207 = t88 * t206;
t208 = t66 * t39 * n3p;
t209 = 0.45e2 / 0.2e1;
t210 = t10 * t209;
t211 = t205 * t69;
t212 = 0.2e1 * t211;
t213 = t198 * t2;
t214 = t25 * t182;
t215 = t214 * t30;
t216 = 0.15e2 * t10;
t217 = -0.15e2 / 0.2e1 + t216;
t218 = t175 * t2;
t219 = t194 * t69;
t220 = t131 * t185;
t221 = t220 * t17;
t222 = 0.2e1 * t69 * t57 * t185;
t223 = 0.15e2 * t39;
t224 = t190 * t17;
t225 = t224 * t2;
t226 = 0.81e2 * t30;
t227 = t193 * t2;
t228 = t227 * t62;
t229 = t72 * t39 * n3p;
t230 = t88 * t49;
t231 = t69 * t206;
t232 = t194 * t2;
t233 = t43 * t185;
t226 = -t49 * t4 * (t206 * t30 + t1 * (-t17 * (t226 + t232) + t233) * t5) + t12 * (-0.15e2 / 0.2e1 * t57 * t1 * t2 * n3p + t231) + t18 * (t18 * (t18 * (t30 * (0.3e1 * t124 * (0.35e2 / 0.2e1 - t10) + 0.3e1 * t45 * (t118 + t9) - 0.105e3 / 0.2e1 * t12 * (t125 + t45 * (-0.8e1 / 0.35e2 * t10 + 0.16e2 / 0.35e2))) + t72 * (t177 * (-t36 * t171 * t60 + t39 * (t118 - 0.3e1 / 0.4e1) * n3p) - 0.15e2 / 0.2e1 * t208)) + t17 * (-0.315e3 / 0.2e1 * t47 * t30 * t19 * t13 - t200 * t43 + t218 * t217) + t5 * (t5 * (-t212 + (0.60e2 * t174 + t175 * (-t210 + t177)) * t2 * t17) + t7 * (-t215 * t17 * n3p + t213) + t47 * (0.108e3 * t10 - 0.315e3 / 0.2e1) * t30 * t17) + t211) + t12 * (-t229 * t209 - 0.315e3 / 0.2e1 * t30 * (-t124 - 0.8e1 / 0.105e3 * t45)) + t5 * (t223 * t2 * n3p + t36 * (t177 * t2 * t171 - t219 + t221) - t222) + t7 * (t225 - 0.21e2 / 0.2e1 * t30 * n3p + t228) - t230 * (t226 * t8 + t227)) - 0.105e3 / 0.2e1 * t137 * t30;
t234 = n3pp / 0.16e2;
t235 = t234 + t140 - 0.19e2 / 0.16e2 * t4 * t170;
t236 = 0.4e1 / 0.15e2 * t10;
t237 = 0.6e1 * t10;
t238 = t237 - 0.12e2;
t239 = t35 * (-t75 * t4 * t170 - n3pp * t84 + t140);
t240 = 0.72e2 * t235;
t241 = t235 * t182;
t242 = n3p * t186;
t243 = t147 * t185;
t244 = t163 * t185 * t17;
t245 = t44 * t193 * t30;
t246 = t49 * t193;
t247 = t52 * t53;
t248 = t199 * t49;
t249 = -0.27e2 / 0.2e1;
t250 = t194 * t53;
t251 = 0.3e1 / 0.2e1 * n3pp;
t249 = (t170 * t249 - t250) * t4;
t252 = t44 * t185 * t30;
t253 = t49 * t6;
t254 = t253 * (t17 * (t140 * t74 + t249 + t251) + t252);
t255 = 0.1e1 / 0.7e1;
t256 = t10 * t255;
t257 = t45 * (-0.2e1 / 0.7e1 + t256);
t258 = n3pp / 0.8e1;
t259 = 0.5e1 / 0.4e1 * t4 * t170 + t258 + t140;
t260 = t10 / 0.8e1;
t261 = 42;
t262 = 0.33e2 / 0.2e1;
t263 = t261 * t12;
t264 = 0.63e2 / 0.2e1;
t265 = t45 / 0.21e2;
t266 = 0.3e1 * t30 * n3p;
t227 = t118 * t227;
t267 = t30 * t8;
t268 = t17 * t1;
t125 = t231 * t49 + t12 * (-t231 + 0.21e2 / 0.2e1 * t57 * t1 * t2 * n3p) + t18 * (t18 * (t18 * (t30 * ((t45 * (-0.2e1 / 0.11e2 * t10 + 0.4e1 / 0.11e2) + t124 * (-0.28e2 / 0.11e2 - t10)) * t262 + t263 * (t257 + t125)) + t72 * (-0.12e2 * t36 * t259 * t60 + 0.12e2 * t39 * (t260 + 0.21e2 / 0.8e1) * n3p + 0.21e2 / 0.2e1 * t208)) + t17 * (t218 * (0.21e2 / 0.2e1 + t81) + 0.126e3 * t47 * t30 * t19 * t13 - 0.12e2 * t43 * t259 * t8) + t5 * (t5 * ((t173 * t259 * t182 + t175 * (t10 * t264 - t261)) * t2 * t17 + t212) + t7 * (-0.12e2 * t25 * t30 * t17 * n3p - t213 * t49) + t47 * (-0.135e3 / 0.2e1 * t10 + 0.126e3) * t30 * t17) - t211) + t12 * (t229 * t264 + (-0.126e3 * t124 + 0.126e3 * t265) * t30) + t5 * (-t36 * (-0.12e2 * t259 * t2 - t219 + t221) + t222 - 0.51e2 / 0.2e1 * t39 * t2 * n3p) + t7 * (-t201 * t190 * t2 - t266) + t88 * (t267 * t186 - t227)) + t268 * (-0.9e1 / 0.2e1 * t52 * t2 + t70 * (t263 - t186));
t201 = t10 * t71;
t212 = t4 * t5;
t229 = t49 + t172;
t259 = t44 * t30;
t263 = t78 * t49;
t269 = t39 * t13;
t270 = 0.2e1 * t17;
t271 = t33 * t23;
t272 = t270 * t8;
t273 = t5 * t6 * (0.1e1 + t271) + t272 * t161 * t18;
t274 = t3 ^ 2;
t275 = t274 ^ 2;
t276 = t3 * t275;
t277 = t3 * t274;
t115 = t3 * ((t18 * (t18 * (t5 * (t177 * t7 * (t175 + t174) - t178 * t11 - t180 - 0.15e2 * t66 * t8 * t171) + t53 * (-(t181 + t25 * (t115 - 0.1e1 / 0.16e2) * n3p) * t182 + t86 * (t110 + t25 * (-t71 + t172) * n3p))) + t17 * (t12 * (-t176 * (t183 * t19 + 0.2e1 / 0.3e1 * t184) - 0.9e1 / 0.2e1 * t192) + t177 * (-t49 * (-t184 + t183) + t183 * t10)) + t5 * (t190 + t53 * (t7 * (t124 * t186 + t188) - t189) * t17)) + t5 * (t5 * (-t49 * t109 * (t194 + t195 - t197) - t199 + t189 * t53 * t25) - 0.15e2 * t37 * t1 + t200) + t47 * t203 - t180 * t13) * t18 + t49 * (-t150 * t53 * t17 * n3p - t105 * t177 * t171 - t207) * t5) + t226;
t92 = t3 * (t3 * t115 + t18 * (t18 * (t18 * (t5 * (t8 * (-t239 + t240) + t37 * t238 * t1 + t241 * t66 * t8) + t53 * (-t187 * (-t109 * (t34 + t10) + t25 * (0.4e1 / 0.3e1 + t118) * n3p) - t12 * (t110 + t25 * (-0.16e2 / 0.15e2 + t236) * n3p) * t176)) + t17 * (t12 * (0.72e2 * t19 * t235 * t6 + 0.72e2 * t184 * t107 + t192 * t186) + t6 * (-t239 + t241)) + t5 * (-t190 + t53 * (t7 * (-0.39e2 / 0.2e1 * t45 - 0.90e2 * t124) + t242) * t17) + t7 * (-0.6e1 * t39 * t17 * n3p + t243)) + t8 * (t240 * t13 + 0.21e2 / 0.2e1 * t247) + t5 * (t5 * (t49 * t109 * (0.90e2 * t53 + t194 - t197) + t199 - t195 * t25 * n3p) + t7 * (-t244 + 0.6e1 * t175 - t245) + t8 * (-0.15e2 / 0.4e1 * n3pp - 0.57e2 * t140 + 0.255e3 / 0.4e1 * t4 * t170) + t246 * t54) + t109 * (-t194 - 0.81e2 / 0.2e1 * t53 + t197) - t248) + t5 * (-0.21e2 / 0.2e1 * t53 * t17 * n3p + t207 * t49) - t254 + 0.12e2 * t92 * t53 * t17 + t241 * t57 * t12) + t125;
t115 = t276 * t30;
t125 = t170 * t187;
t171 = 0.1e1 + t42;
t172 = 0.4e1 / 0.3e1 * t10;
t174 = t270 * t28;
t176 = (t174 * t25);
t180 = t23 * (t171 - t172) + t12 - t176;
t183 = 0.15e2 / 0.2e1 * t10;
t200 = t64 * (t183 - t177);
t226 = 0.54e2 * t10;
t235 = -t49 + t7;
t239 = t49 + t7;
t240 = t54 * t25;
t241 = t10 * t74;
t254 = t241 - t187;
t278 = 0.5e1 / 0.18e2 * t10;
t279 = t55 * t19;
t204 = t7 * (t205 * t17 + t204);
t205 = t204 - t246;
t280 = t12 * t8;
t281 = t194 * t17 - t196;
t282 = t281 * t4;
t283 = m0 + mp0;
t284 = t283 * t4;
t285 = 0.12e2 * t53;
t286 = t285 * t1 * L0 * t63 * m0 - t284;
t287 = 0.1e1 / 0.32e2;
t287 = n3pp * t287 - 0.3e1 / 0.16e2 * t4 * t170 + t140;
t288 = 0.3e1 / 0.8e1 * t10;
t289 = t25 * t1;
t290 = t289 * n3p;
t291 = t53 * t37;
t292 = t4 * t8;
t293 = t292 * t286;
t294 = 0.6e1 * t4;
t295 = 0.1e1 + t10;
t296 = t290 * t295;
t297 = t78 * t64;
t298 = 48;
t299 = t54 * t185;
t300 = t7 * t17;
t301 = t187 * t10;
t302 = t268 * n3p;
t303 = t88 * t185;
t304 = t64 * t53;
t305 = t20 * t302;
t306 = t4 * t6;
t307 = t252 * t17;
t308 = t299 * t270;
t309 = t56 * t185;
t310 = t309 * t17;
t311 = t109 * t193;
t312 = L0 * m0;
t313 = t312 * t63;
t314 = t313 * t7;
t315 = 21;
t316 = t290 * t187;
t317 = 0.27e2 * t80 * t8;
t318 = 0.2e1 * t12;
t319 = t147 * t206;
t320 = 0.2e1 / 0.9e1;
t321 = t187 * (-t105 * t4 * t286 + t313 * (-(t302 * t74 - t319) * t320 + t302 * t91)) * t5;
t234 = -0.9e1 / 0.16e2 * t4 * t170 + t234 + t140;
t322 = 0.3e1 / 0.16e2 * t10;
t323 = t45 * t1;
t123 = t25 * t123;
t324 = t284 * t2;
t325 = 0.6e1 * t313;
t326 = t325 * t30 * t1 - t324;
t327 = t36 * t4;
t328 = 0.2e1 * t170;
t329 = t134 * t1;
t330 = t309 * t2;
t331 = t57 * n3p;
t332 = t302 * t25;
t333 = t69 * t185;
t334 = t331 * t182;
t335 = t334 * t30;
t336 = t19 * t13;
t337 = t336 * t2;
t338 = 0.1e1 / 0.9e1;
t339 = t58 * t185;
t340 = t339 * t2;
t341 = t73 * t185;
t342 = n3p * t187;
t343 = n3pp / 0.14e2;
t344 = -0.9e1 / 0.14e2 * t4 * t170 + t343 + t140;
t345 = t2 * t8;
t346 = t64 * t30;
t347 = t52 * t30;
t326 = t18 * (t5 * (t327 * t326 * (-t241 + t186) + t313 * t64 * (t237 - 0.144e3) * t30) + t313 * (t2 * (-t186 * (0.8e1 / 0.3e1 * t25 * t234 - t10 * (-t25 * (n3pp * t107 - t328 * t4 + t140) + t323) - t329) - 0.96e2 * t12 * (t323 * (-t322 + 0.3e1 / 0.8e1) - t123 * t234)) - t64 * t13 * t30 * t31 * t32 * t298)) + t12 * (-t173 * t186 * t4 * t326 * t17 + t313 * (t9 * (t57 * t298 * t30 * n3p - t330) - 0.144e3 * t331 * t10 * t30)) + t313 * (t17 * (t237 * t52 * t30 + 0.288e3 * t337 * t234) + 0.2e1 * t330 - 0.2e1 * t335 - t5 * (t7 * (t332 * t187 * t2 - t333) + (-0.72e2 * t234 + 0.39e2 * t10 * (n3pp / 0.26e2 + t140 - 0.3e1 / 0.13e2 * t4 * t170)) * t2 * t17) * t9) + t173 * t74 * t4 * t326 * t17;
t330 = 0.2e1 * t313;
t135 = -t330 * (-t17 * (t13 * t2 * t234 * t298 + t347 * t187) + t5 * (t5 * (-t47 * t2 * t206 + t335) + t17 * (t261 * t344 * t2 - t219) + t220)) + (t18 * t326 + t5 * (-t327 * t74 * (t313 * t338 * t1 * (t232 + 0.54e2 * t30) - t324) + t313 * (t9 * (0.57e2 / 0.2e1 * t64 * t30 - t340) + t22 * t340)) + t313 * (t12 * (-0.144e3 * t346 * t5 - 0.288e3 * t2 * (t25 * t234 - t323 / 0.16e2)) - t9 * (-t253 * (t345 * t261 * t344 - t69 * t193) + t7 * (t342 * t1 * t2 - t135 * t193 - t341 * t17)))) * t18;
t220 = t313 * t53;
t234 = 0.8e1 * t220;
t326 = t234 * t1 - t284;
t335 = t258 + t140;
t340 = -0.2e1 * t335;
t344 = t10 * t182;
t348 = -t344 + t298;
t349 = t301 * t284;
t350 = 0.54e2 * t326;
t351 = t313 * t291;
t352 = t74 * t326;
t353 = t313 * t297;
t354 = t306 * t19;
t355 = t285 * t64;
t356 = 0.12e2 * t140;
t357 = t325 * t53 * t1 - t284;
t358 = t57 * t4;
t359 = t313 * t5;
t319 = t359 * (-t9 * (0.15e2 / 0.2e1 * t302 - t319) + t302 * t12 * t177);
t360 = t119 * t11;
t361 = t30 * t9;
t362 = t361 * t313 * t1 - t324;
t363 = 0.4e1 / 0.9e1;
t364 = t212 * t36;
t365 = t364 * t74;
t366 = t365 * t362;
t367 = t173 * t4;
t368 = t45 * t107;
t369 = 0.1e1 - t5;
t370 = 0.1e1 + t5;
t371 = t313 * t72;
t271 = t271 * t161 + t12 - t176 - t49;
t135 = t3 * (-t321 + (t18 * (t18 * (t5 * (t293 * (-t241 + 0.27e2) + t291 * (-0.60e2 * t10 + 0.120e3) * t63 * m0 * L0 + t293 * t66 * t187) + (0.12e2 * t7 * (t10 * (n3pp * t49 - t294 * t170 + t140) + 0.8e1 * t287) + 0.36e2 * t296 + 0.96e2 * t12 * (t7 * (t10 * t287 - 0.2e1 * t287) + t290 * (t288 - 0.3e1 / 0.2e1))) * t63 * m0 * L0) + t17 * (-(0.120e3 * t297 * L0 * t63 * m0 - 0.27e2 * t19 * t286 * t6 * t4) * t12 - t306 * t286 * t254) + (t5 * (-t9 * (t25 * (t300 * t287 * t298 - t299) + t302 * (-t301 + 0.27e2)) - 0.108e3 * t305) + 0.2e1 * t7 * (t304 * t177 * t17 - t303)) * t63 * m0 * L0) + t5 * (t317 * t286 + 0.2e1 * t314 * (-t247 * t177 + t310 + t311) - t293 * t74) + t313 * (-t9 * (t316 - t202 * t54 + t7 * (t140 * t315 + t249 + t251 + t307)) + t318 * (t7 * (t140 * t298 - t4 * (t125 + t250) + t251 + t307) + 0.54e2 * t290 - t308))) * t18) + t135;
t135 = t3 * t135 + t319 + t358 * (t187 * t357 - t86 * t326) + (t18 * (t18 * (t5 * (-t352 * t292 * t66 + t351 * t348 + t292 * (-t350 + t349)) + t313 * (-t182 * (0.5e1 / 0.4e1 * t296 + t7 * (t10 * (-0.15e2 / 0.4e1 * t4 * t170 + t258 + t140) + t340)) + t12 * (t290 * (-0.5e1 / 0.8e1 * t10 + 0.5e1 / 0.2e1) + t7 * (t10 * t335 + t340)) * t298)) + t17 * (t306 * (-t352 + t349) + (-0.54e2 * t354 * t326 - 0.48e2 * t353) * t12) + t313 * (t5 * (0.8e1 * t302 * (-0.15e2 / 0.4e1 * t10 + 0.45e2 / 0.4e1) + 0.8e1 * t25 * (-0.12e2 * t300 * t335 - t299) + 0.90e2 * t305) - 0.2e1 * t7 * (-t355 * t17 - t303))) + t5 * (-t350 * t80 * t8 - 0.2e1 * t314 * (t311 + 0.12e2 * t247 + t310) + t179 * (0.38e2 / 0.5e1 * t220 * t1 - t284) * t4) + t313 * (0.30e2 * t290 + 0.2e1 * t7 * (t307 - t4 * (t170 * t209 + t250) - t251 - t356) - 0.2e1 * t308 - t91 * (t290 * t209 + t7 * (-t163 * t193 - t251 + t307 - t356) - t308))) * t18;
t179 = t313 * t115 * t9 * ((t18 * (t18 * (t5 * (t12 * t200 + t62 * (t226 - 0.108e3) + t64 * (-t216 + t209)) + t240 * (0.12e2 * t235 * t239 - 0.3e1 * t66)) + t17 * (t12 * (0.108e3 * t68 - 0.108e3 * t52 * (-0.5e1 / 0.24e2 * t10 + 0.5e1 / 0.18e2) + t279 * t187) - 0.54e2 * t68 + 0.54e2 * t52 * (-t278 + 0.5e1 / 0.36e2)) - t212 * (t53 * t254 * t17 + t196)) + t5 * (0.54e2 * t62 - 0.15e2 * t64) - t4 * t205 * t6 + t280 * (-t147 * t187 + t154 * t209)) * t18 + t49 * (t87 * t54 * t17 + 0.15e2 * t105 * n3p - t282) * t5);
t249 = t8 * t5;
t254 = t301 - t74;
t286 = t306 * (t79 * t5 - t39);
t287 = t45 * t74;
t293 = t129 * t49;
t296 = 0.54e2 * t53 + t194;
t297 = t270 * t185;
t303 = 0.1e1 - t12;
t305 = t206 * t5;
t310 = n3pp / 0.34e2 + t140 - 0.3e1 / 0.17e2 * t4 * t170;
t311 = t284 * t63;
t319 = t312 * t53;
t321 = t319 * t9 * t1 - t311;
t326 = t10 * t186;
t335 = t319 * t25;
t340 = t4 * t321;
t349 = (n3pp * t338 - 0.8e1 / 0.9e1 * t4 * t170 + t140) * t10;
t350 = 0.8e1 * t319 * t1 - t311;
t352 = 0.27e2 * t53;
t372 = -0.51e2 * t310;
t373 = t17 * t12;
t374 = t53 * t74;
t375 = t374 * t25 * n3p;
t376 = t249 * t312;
t377 = t74 * t4;
t192 = t18 * (-n3p * t186 * t295 * t335 + t4 * (t350 * t74 * t11 + t321 * t187 * t7) + t5 * (t5 * (t340 * t7 * t254 + t335 * (-t326 + 0.144e3) * n3p) + t312 * (0.54e2 * t8 * (0.17e2 / 0.3e1 * t310 + t349) + 0.54e2 * t37 * (-0.5e1 / 0.9e1 * t10 + 0.10e2 / 0.9e1) * t1 + 0.102e3 * t66 * t8 * t310))) + t5 * (-t340 * t300 * t25 * t74 + t312 * (t9 * (t352 * t17 * n3p - t190) - t195 * n3p * t10 * t17)) + t312 * (-0.2e1 * t7 * (-t223 * t17 * n3p - t243) - 0.2e1 * t57 * (t372 - 0.27e2 * t349) + t373 * (0.306e3 * t19 * t310 * t6 - 0.60e2 * t184 + 0.108e3 * t192));
t195 = 0.2e1 * t312;
t223 = t324 * t63;
t243 = 0.17e2 / 0.3e1 * t312 * t30 * t1 - t223;
t295 = t261 * t10;
t321 = t25 * (-t241 + 0.72e2);
t335 = t312 * t45 * t30;
t340 = 0.1e1 / 0.18e2;
t340 = -t363 * t4 * t170 + n3pp * t340 + t140;
t349 = 0.27e2 * t173 * t340;
t378 = 0.54e2 * t243;
t379 = t342 * t39 * t2;
t380 = 0.12e2 * t30;
t381 = t312 * t7;
t382 = t312 * t5;
t383 = 0.3e1 * t1;
t384 = t383 * t331;
t385 = t122 * t4;
t386 = -t385 * t243 * t303;
t387 = t312 * (-0.12e2 * t331 * t1 * t2 + 0.2e1 * t231 + t91 * (t384 * t2 - t231));
t76 = t74 * t386 + (t18 * (t18 * (t12 * (t321 * t243 * t4 + t335 * (-0.84e2 + t295)) - t74 * (t103 * t312 * t30 + t25 * (t10 * (0.20e2 / 0.3e1 * t312 * t30 * t1 - t223) + t243) * t4) + t312 * (0.12e2 * t93 * t76 + 0.108e3 * t72 * (-t36 * t340 * t60 + t39 * (t71 + t278) * n3p) + t45 * t30 * t261)) + t5 * (t378 * t80 * t17 * t19 + t195 * (-t25 * t261 * t30 * t17 * n3p - t213) * t7 + (t378 - t241 * (0.14e2 / 0.3e1 * t312 * t30 * t1 - t223)) * t17 * t4) + t312 * (t9 * ((t175 * (t183 + 0.3e1) - t349) * t2 * t17 - t211) - 0.8e1 * t12 * ((t175 * (-0.9e1 / 0.2e1 * t10 + 0.6e1) - t349) * t2 * t17 - t211))) + t12 * (-t378 * t25 * t4 + t335 * t261) + 0.2e1 * t381 * (-t380 * n3p - t225 - t228) + t382 * (-t9 * (t379 + t36 * (-0.27e2 * t340 * t2 - t219 + t221) - t222) + t242 * t39 * t12 * t2) + t377 * t25 * t243) * t18 + t387;
t213 = 0.20e2 / 0.3e1 * t319 * t1 - t311;
t222 = t10 * (t30 - t383) * (t30 + t383);
t225 = t37 * t1;
t228 = t187 * t4;
t242 = t88 * t19;
t243 = 0.3e1 * t170;
t278 = t1 * t12;
t335 = t27 * t4;
t340 = t56 * t12;
t349 = t382 * t1;
t378 = t4 * t7;
t76 = t3 * (-t195 * (t17 * (t12 * (-t191 * t74 + t372 * t6) + t6 * (n3pp / 0.15e2 + t140 - 0.2e1 / 0.5e1 * t4 * t170) * t209) + t5 * (t374 * t17 * n3p - t207)) + (t18 * t192 + t12 * (0.306e3 * t376 * t310 + t4 * (-t22 * t312 * t268 * t185 + (t312 * t320 * t1 * (t374 + t194) - t311) * t187 * t7) - t312 * t9 * (t352 * t25 * n3p - t199)) + 0.2e1 * t312 * (t5 * ((-0.9e1 / 0.2e1 * n3pp - 0.249e3 / 0.2e1 * t140 + 0.27e2 * t4 * t170) * t8 + t7 * (-t244 - t178 - t245)) + t375 - t199 + t130 * t185 * t17) - t377 * (t312 * t338 * t1 * t296 - t311) * t7) * t18) + t76;
t151 = t312 * (t44 * t186 * t18 * t170 * t273 + 0.54e2 * t133 * (0.3e1 * t57 * (t71 + t20 - t112) * t23 + t18 * (-t249 * t151 + t249 * t23 * (t14 - t22 + 0.3e1)) + t57 * t12) * t276 + (0.2e1 * t18 * (t18 * (t18 * (t12 * (t45 * t254 + t124 * (t226 - 0.216e3)) + t7 * (t7 * (0.72e2 * t124 + t287) + t342) - 0.54e2 * t286) + t292 * (0.1e1 - t318) * (0.54e2 * t78 * t17 + t185) - t122 * (t186 * (t47 * (0.9e1 / 0.2e1 - t10) + t293) + 0.162e3 * t20 * t47)) - 0.54e2 * t124 + t5 * (t5 * (0.162e3 * t124 + t188) - t306 * (t297 - t7 * (t197 - t296))) - t287) + 0.2e1 * t212 * (0.54e2 * t268 * t303 + t305)) * t30 * t275);
t76 = t151 + (t3 * t76 + t17 * (-t312 * t306 * t170 * t369 * t370 * t74 + t23 * (-t335 * t213 * t7 + t312 * (t107 * (t306 * (t243 - t222) - t184 * t9) - 0.3e1 / 0.2e1 * t278 * (-0.8e1 / 0.9e1 * t46 - t242))) * t186) + t18 * (t23 * (t74 * t80 * (t376 * t170 * t31 * t32 + t213 * t33 * t7) - t228 * (t10 * (0.16e2 / 0.3e1 * t319 * t1 - t311) + 0.2e1 * t311 - 0.40e2 / 0.3e1 * t319 * t1) * t7 + 0.6e1 * t382 * (t225 * (t16 - 0.8e1) + t292 * (t125 - t222))) + 0.54e2 * t349 * (t37 * t363 + t340 - t56) + t378 * (-t187 * t350 + t86 * t213))) * t3;
t151 = t220 * t9 * t1 - t284;
t178 = 0.1e1 / 0.28e2;
t178 = n3pp * t178 - 0.3e1 / 0.14e2 * t4 * t170 + t140;
t184 = 0.25e2;
t188 = t10 * (0.96e2 / 0.25e2 * t220 * t1 - t284);
t191 = 0.27e2 * t151;
t192 = t132 * t10;
t213 = t292 * t66;
t222 = -0.9e1 / 0.25e2;
t226 = (t125 - t250) * t4;
t244 = 0.84e2 / 0.25e2 * t313 * t30 * t1 - t324;
t245 = t378 * t25;
t254 = t212 * t244 * t6;
t276 = t290 * t9;
t287 = t378 * t132;
t296 = n3p * t303;
t310 = t313 * t170;
t342 = 0.18e2 / 0.7e1;
t350 = t212 * t173;
t372 = 0.36e2 / 0.7e1;
t376 = t284 * t7;
t16 = t312 * (t377 * t275 * t7 * t18 * t63 * (t23 * (t171 + t16) + t12 - t176 - 0.3e1) * t132 + 0.2e1 * t277 * t63 * (0.27e2 * t369 * t370 * t17 * (-t52 * t320 - t55) + (t18 * (t18 * (-t240 * (t186 * (0.3e1 / 0.4e1 + t10) + 0.27e2 * t66) + t5 * (0.4e1 / 0.5e1 * t12 * t200 + t62 * (-t10 * t298 + 0.96e2) + t64 * (t216 + t74))) + t17 * (t12 * (0.96e2 * t52 * (-t84 + t322) - 0.96e2 * t68 + 0.81e2 * t279) - t298 * (t52 * (-0.5e1 / 0.16e2 * t10 - 0.1e1 / 0.8e1) - t68)) - t212 * (t53 * (t241 - 0.81e2) * t17 + t196)) + t280 * (t154 * t74 - 0.81e2 * t147) + t5 * (-t62 * t298 - t64 * t74) - t306 * (-t352 * t8 + t204)) * t18) * t30);
t196 = (-t3 * (-0.12e2 / 0.25e2 * t296 * t313 * t1 * t2 + t23 * (-t254 * t33 + t313 * (0.12e2 / 0.25e2 * t1 * n3p + 0.6e1 / 0.25e2 * t245 * t132 + 0.12e2 / 0.25e2 * t42 * n3p * t1) * t2) - t254 + t270 * (-t292 * t161 * t244 + 0.3e1 / 0.25e2 * t371 * (-t287 - t276)) * t18) * t184 + 0.7e1 * t4 * (t310 * t342 * t369 * t370 + t18 * (t18 * (-t171 * t310 * t342 - t350 * t283) + t57 * (t359 * t372 * t170 * t8 - t376)))) * t18 * t7;
t204 = t55 * t6;
t216 = 0.9e1 / 0.4e1 * t319 * t1;
t244 = -t311 + t216;
t254 = 0.2e1 * t57;
t322 = -t25 * t18 + t122;
t386 = t4 ^ 2;
t387 = t312 * t3;
t388 = t7 * t3;
t389 = t171 * t23;
t390 = -0.1e1 + t389 + t12 - t176;
t391 = t28 * t8 + t57;
t376 = t376 * t18;
t76 = t65 * (t186 * t314 * t18 * t4 * (t180 * t132 * t274 * t275 + t170 * t271) + (t3 * t135 + t17 * (-t371 * t170 * t4 * t369 * t370 * t298 + t23 * (-t367 * t362 * t161 + t312 * (t337 * t4 * t63 * t9 * t170 + t157 * t63 * (-0.8e1 / 0.7e1 * t129 + t47 * (0.24e2 / 0.7e1 - t10)) * t94)) * t186) + t18 * (t23 * (-t366 * t33 + t313 * (0.54e2 * t124 * (-0.8e1 / 0.9e1 - t10) + 0.54e2 * t45 * (-t10 * t320 + t363) + t12 * (t104 + t360 - t7 * (t117 + n3p)) * t298) * t2 * t1) + t313 * (-t298 * (-t124 + t159) + 0.144e3 * t12 * (-t124 + t368)) * t2 * t1 - t366)) * t3 + t179) + t76;
t16 = t65 * t76 + t274 * (t306 * t187 * (t17 * (t12 * t151 - 0.2e1 / 0.3e1 * t357) - t305 * t220 * t320) + (t18 * (t18 * (t5 * (t213 * t187 * t151 + t351 * (t10 * t177 - 0.60e2) + t292 * (t188 * t184 + t191)) + t314 * (t177 * (-n3pp / 0.10e2 + t4 * (t170 * t59 - t192) - 0.14e2 / 0.5e1 * t140) - 0.84e2 * t42 * t178)) + t17 * (-t184 * (t306 * (t151 * t222 - t188) + 0.6e1 / 0.5e1 * t353) - 0.27e2 * t12 * (-t354 * t151 - 0.20e2 / 0.9e1 * t353)) - t313 * t27 * t9 * (-t300 * t261 * t178 - t299)) + t5 * (t317 * t151 + t351 * t177 - t292 * t182 * (0.9e1 / 0.2e1 * t220 * t1 - t284)) + 0.2e1 * t313 * (t12 * (t7 * (-t140 * t261 + t226 - t251 + t307) - t308) - t7 * (-t140 * t209 + t226 - t251) + t299 * t139 * t17)) * t18) + t16 + t196;
t27 = t65 ^ 2;
t59 = t27 ^ 2;
t76 = t65 * t59;
t135 = t65 * t27;
t38 = (0.12e2 * t61 * t106 + 0.12e2 * (t3 * (t3 * t41 + t17 * (-0.6e1 * t88 * (-0.1e1 / 0.12e2 + t12) + 0.12e2 * t23 * (-t5 * (-t5 * (t83 + t51) + t48) - t46 * t84 + t47 * (t10 * t85 - t49) * t6)) + t18 * (t23 * (t5 * (-t38 + t56 * (t10 * t75 - t74)) - 0.6e1 * t80 * (t77 - t79) - 0.3e1 * t44 * t30 * t33) + t5 * (0.25e2 / 0.2e1 * t56 + 0.3e1 * t37 - t86 * t56) + t44 * (t87 - 0.3e1) * t30)) - t17 * (t9 * (t101 * t2 + t98) + 0.12e2 * t23 * (t2 * (-t95 * (-t68 + t52 * (0.2e1 / 0.7e1 - t89)) + t97 * t12) + t98 * t19)) + t18 * (t23 * (-0.7e1 * t72 * t90 + (0.2e1 * t93 + t69 * (0.1e1 - t91) * t6) * t32 * t31 * t8) + t72 * (t87 * t64 - 0.7e1 * t99) + t73 * (-0.12e2 * t12 + 0.3e1))) * t3) * t65;
t38 = t1 * t3 * t65 * (t38 + t186 * t63 * ((t3 * t50 - t17 * (0.4e1 / 0.3e1 * t154 * t100 + 0.4e1 / 0.3e1 * t147 * t167 + t23 * ((t94 * t165 + t5 * (0.2e1 * t116 * t5 - t148)) * t5 + t148 * t84) * t9) + t18 * (t23 * (t4 * (t164 * t8 * t31 * t32 * t13 + t144 * (t10 * t94 - 0.7e1 / 0.3e1)) - t111 + t5 * (0.7e1 / 0.3e1 * t162 * t5 - t163 * t31 * t32)) + 0.7e1 / 0.3e1 * t12 * t166 - t120 + t109 * t94 + t141 * (t91 - 0.3e1))) * t3 + t113 * t102 * t2));
t41 = t312 * t76;
t38 = t41 * (-t9 * (t92 * t274 + t3 * (0.6e1 * t115 * (0.3e1 * t28 * (t160 * t5 - t17 * (t7 * (-t120 + t128) - t127) * t18) + t24 * (t7 * (-0.3e1 / 0.4e1 * n3p + t104 * t7) + t103 - t124 + t156) + t137) - t1 * (t18 * (t23 * (t5 * (-t212 * (t79 + t77) + t37 * (0.2e1 / 0.3e1 - t201) + t56 * (-t108 - 0.3e1)) + t44 * t49 * t30 * t33) + t4 * (-0.3e1 * t269 + t263) + t5 * (-t37 * t71 + 0.29e2 / 0.12e2 * t56 - t259 * t5)) - t58 * (-0.5e1 / 0.12e2 + t12) - t270 * (-t5 * (-t5 * (t46 * t71 - t83) + t48) + t88 * t229 - t46 * t107) * t23) * t74) + t125 * t44 * t18 * t273) + t38);
t48 = 0.7e1 * t378 * t18;
t50 = (t23 * (t171 - t22) + t12 - t176) * t274;
t61 = t43 * t3;
t75 = t33 * t161;
t77 = t28 * t25;
t79 = t388 * t18;
t83 = t77 * t17;
t77 = t27 * (0.1e1 + t50 - 0.2e1 * t18 * (t75 * t18 + t61 * t322) - 0.2e1 * t12 + t77 * t9 * t17) + t12 + t389 - 0.1e1 - 0.2e1 * t83 - 0.2e1 * (t2 * t273 + t79 * t391) * t63 * t65;
t85 = t387 * t65;
t89 = 0.1e1 - t274;
t92 = -0.2e1 + t274;
t108 = t6 * t2;
t92 = t27 * (t12 * t92 + t23 * (-0.2e1 * t146 * t274 + 0.2e1 * t61 * t25 + t42 * t92 + t10 - 0.2e1) + 0.1e1 - t174 * (t3 * (t25 * t3 + t43) - 0.2e1 * t25)) + t12 + t389 - 0.1e1 - 0.2e1 * t83 - 0.2e1 * t63 * (t5 * (t23 * (t108 * t33 + t173 * t3) + t108) + t270 * (-t49 * (-t36 * t3 + t345) + t280 * t2) * t18) * t65;
t115 = -t122 * t8 + t18 * t6;
t120 = t2 * t63;
t125 = 0.1e1 / m0;
t141 = 0.1e1 / L0;
t144 = 0.1e1 / J__1;
t147 = 0.1e1 / t3;
t156 = 0.1e1 / t65;
t77 = 0.1e1 / t77;
t160 = 0.1e1 / J__2;
t92 = 0.1e1 / t92;
t163 = t141 ^ 2;
t174 = t156 ^ 2;
t156 = t156 * t174;
t176 = (t125 ^ 2);
t177 = (t147 ^ 2);
t178 = (t177 ^ 2);
t147 = t147 * t177;
t177 = ((t85 * (t170 * t27 + t132) + t284) * t4);
t14 = (t38 + (t65 * t16 + t377 * t312 * (0.3e1 * t18 * (-t249 * t303 + t57 * (0.8e1 / 0.9e1 * t10 + t20 + t71) * t18) - t57 * t369 * t370 + t249 * (t14 + t143 + 0.3e1) * t24) * t132 * t277 + t388 * (-t387 * t30 * (-t84 * t296 + t23 * (n3p * t171 * t84 - t204 * t33) - t204 + t272 * (-t52 * t84 * t5 - t54 * t161) * t18) * t298 - 0.16e2 * t4 * (-t254 * (0.3e1 / 0.16e2 * t381 * t132 + t249 * t244) * t18 + 0.13e2 / 0.16e2 * t311 + t12 * t244 + t23 * (-0.7e1 / 0.16e2 * t311 * t10 + t42 * t244 - t311 + t312 * (0.9e1 / 0.4e1 * t53 * t1 - 0.3e1 / 0.8e1 * t173 * t5 * t132)) - t216)) * t18 + 0.7e1 * t23 * t63 * t10 * t2 * t386 * t283 * t322) * t65 - t48 * (t313 * t342 * t390 * t132 * t274 - t376 * t391)) * t176 * t163 * t174 ^ 2 * t178 * t77;
t16 = t124 + t45;
t38 = 0.2e1 * t45;
t77 = t45 * t71;
t143 = -t124 - t77;
t171 = 0.3e1 / 0.4e1 * t4 * t170;
t179 = t258 + t140 - t171;
t184 = t25 * t179;
t188 = -0.2e1 * t179;
t196 = t110 + t25 * (t10 * t338 - t363) * n3p;
t216 = t71 * n3p;
t222 = t216 * t25;
t226 = -t109 + t222;
t244 = t70 * t8;
t272 = t69 * t6;
t35 = 0.9e1 / 0.2e1 - t35;
t169 = t169 * t54;
t274 = t39 * t7;
t67 = t67 * t12;
t277 = t179 * t10;
t111 = t111 * t1;
t280 = 0.3e1 / 0.2e1 - t10;
t305 = t56 * t280;
t308 = t66 * t56;
t317 = 0.2e1 * t341;
t337 = t88 * t146;
t351 = t333 * t270;
t203 = 0.2e1 * t203;
t353 = t122 * t1;
t366 = t25 * t151 * t4;
t245 = t245 * t151;
t377 = 0.3e1 / 0.8e1 * t4 * t170;
t381 = t258 + t140 - t377;
t387 = t36 * t381;
t392 = t220 * n3p;
t393 = 0.32e2 / 0.3e1;
t394 = t173 * t381;
t395 = t313 * t78;
t396 = 0.2e1 / 0.3e1 * t46;
t397 = t37 * t74;
t40 = t18 * (t18 * (t18 * (t5 * (-t186 * t7 * (-t68 + t52) - 0.54e2 * t56 + t52 * t74 * t11 - t308 * t74) + t259 * (-t186 * t40 + 0.27e2 * t42)) + t17 * (-t186 * (t49 * (t46 + t88) - t88 * t10) + 0.54e2 * t12 * (-t242 + t396)) + 0.2e1 * t335 * (-0.27e2 * t78 * t17 + t185)) + t4 * (-0.54e2 * t269 + t203) + t5 * (t56 * t186 + t397 - t212 * (t297 - t7 * (t197 + t352 - t194)))) - t212 * t6 * (t353 * t74 + t206);
t259 = t63 * t273;
t70 = t312 * (-t259 * t287 * t18 + t1 * (t24 * (t12 * (-t244 * t31 * t32 - 0.3e1 / 0.2e1 * t2 * t196) + 0.2e1 * t2 * (t181 + t25 * (-0.1e1 / 0.12e2 + t201) * n3p) + 0.2e1 * t244 * t138) + t373 * (t121 * t72 - t272) + 0.3e1 * t18 * (t5 * (t69 * (0.2e1 / 0.3e1 - t12) * t8 - t136 * t226) + (-t5 * (-t2 * (t143 * t7 + t121) + t70 * t19 * t6) + t93 * t107 * t19 + 0.2e1 / 0.3e1 * t69 * t6 * t146) * t17 * t18)) * t76);
t76 = t313 * t1;
t82 = 0.4e1 / 0.3e1 * t76 * (t24 * ((t5 * (t200 * t5 / 0.5e1 - t169) + t64 * t35 + t62 * (0.8e1 * t10 - 0.16e2)) * t5 + t240 * t9 * t235 * t239) - t373 * (-t55 - 0.3e1 / 0.2e1 * t52) - 0.3e1 * t18 * (-t5 * (t67 - t8 * (t204 + n3p) + 0.8e1 / 0.3e1 * t62) + (t4 * (t145 * t5 * t146 + 0.8e1 / 0.3e1 * t274) + t12 * (-t279 + t52 * t82 - 0.16e2 / 0.3e1 * t68) + t52 * t10 - t52 * t49) * t17 * t18)) * t27;
t82 = t18 * (t18 * (t18 * (-t9 * t7 * (-t245 + t392) + t12 * (t7 * (t234 * n3p - t245) - t9 * (t103 * t220 - t366)) - t366 + t313 * (t5 * (-(-t387 * t60 + t39 * (-0.9e1 / 0.16e2 + t288) * n3p) * t393 + 0.2e1 * t208) + 0.16e2 / 0.3e1 * t103 * t53)) + t5 * (-t314 * t363 * (-t375 * t17 - t198) + (-t237 + 0.3e1) * t151 * t17 * t4 + 0.3e1 * t80 * t151 * t19 * t17) + t313 * t17 * (t393 * (t394 + t175 * (0.3e1 / 0.16e2 - t288)) - 0.64e2 / 0.3e1 * t12 * (t394 + t175 * (-0.9e1 / 0.32e2 * t10 + 0.3e1 / 0.8e1)))) + t12 * (-t395 * t9 * n3p - 0.3e1 * t366) + t313 * (t5 * (-t393 * (0.3e1 / 0.8e1 * t39 * n3p + t387) + t87 * t39 * n3p) + t88 * t205 * t363)) - t5 * (-t80 * t151 * t17 + t313 * (-0.2e1 * t105 * n3p - t282 * t320) * t1) + t82;
t105 = t267 * t44 * t5;
t121 = t336 * t1;
t136 = t54 * t36;
t146 = -t288 + 0.3e1 / 0.4e1;
t151 = t258 + t140 + t377;
t175 = 0.12e2 * t10;
t181 = 0.4e1 / 0.3e1 * t64;
t205 = t53 * t5;
t234 = t151 * t186;
t235 = t53 * t17;
t239 = t240 * t185 * t17;
t240 = t258 + t140 + 0.11e2 / 0.8e1 * t4 * t170;
t245 = t54 * t193;
t269 = t136 * t193;
t282 = t304 * t74;
t151 = t49 * (t373 * t182 * t151 + t17 * (-t4 * (t170 * t262 + t250) - t251 - t356) + t5 * (-t47 * t206 - t331 * t285) + t252) * t5 + (t18 * (t18 * (t12 * (t323 * (t183 - 0.15e2) + t25 * (-t175 + t298) * t151) + t25 * (-0.12e2 * t151 + t241 * (t258 + t140 - 0.23e2 / 0.12e2 * t4 * t170)) + t205 * (t187 * (t10 * (-t62 + t181) + 0.2e1 * t62 - 0.2e1 * t64) - 0.6e1 * t66 * t64) - t323 * t217) + t5 * (t5 * (-t74 * t78 * t17 * (t56 + t37) + t309 + t334 * t53) + t17 * (t234 - t295 * (t258 + t140 - 0.17e2 / 0.28e2 * t4 * t170)) + t7 * (-t299 - 0.15e2 * t332)) - t309 * t49 + t235 * (t68 * t187 + t52 * (t175 - 0.6e1)) + t234 * t26 * t19) - t282 * t13 - t253 * (-0.12e2 * t240 * t8 - t245) + t5 * (t5 * (-t25 * t234 + 0.15e2 / 0.2e1 * t323) + t49 * t62 * (-t197 - t374 + t194) + t339 + t355) + t7 * (t383 * n3p - t239 - t269)) * t18;
t175 = t313 * t25;
t183 = t378 * t362;
t194 = t381 * t8;
t197 = t74 * t30;
t34 = (t18 * (t12 * (t183 * (0.27e2 * t10 - 0.54e2) + t175 * (-t344 + 0.96e2) * t30 * n3p) + t186 * t10 * (-t378 * (t76 * t34 * t30 - t324) + t175 * t30 * n3p) + t313 * (t345 * t13 * t31 * t32 * t381 * t298 - t215 * n3p - 0.96e2 * t72 * (t225 * t146 - t194 * t280)) + 0.27e2 * t183) + t5 * (t313 * (-t9 * (-t197 * t17 * n3p - t190 * t2) - 0.84e2 * n3p * t10 * t17 * t30) - 0.54e2 * t300 * t25 * t4 * t362) + t313 * (t9 * (t7 * (-t379 * t17 - t333 * t6) + t57 * (-t344 + 0.12e2) * t381 * t2) + t373 * (0.144e3 * t2 * (t19 * t381 * t6 + t134 * t39) + 0.72e2 * t154 * t19 * t30)));
t175 = -t255 * t4 * t170 + t140 + t343;
t190 = t312 * t145 * t1 - t311;
t215 = t327 * t190;
t217 = t312 * t304;
t225 = -t215 + t217;
t234 = t133 * t10;
t241 = t312 * t247;
t262 = t20 * t17;
t280 = 0.3e1 / 0.2e1 * t1;
t287 = n3pp * t255 - 0.2e1 / 0.7e1 * t4 * t170 + t140;
t66 = -t195 * (t122 * (t5 * t315 * t175 - t247 * t187) + t17 * (t4 * (t243 - t250) - 0.21e2 / 0.2e1 * t140 - t251) + t252) * t5 + (t18 * (t18 * (t261 * t312 * (t12 * (-t257 * t1 - t123 * t175) - t323 * t255 + t25 * (t234 + t175)) + t5 * (-t10 * t186 * t225 + t282 * t312 * t66 - 0.72e2 * t215 + 0.54e2 * t217)) + t17 * (t186 * (t241 * t49 - t7 * (t292 * t190 + t312 * t291)) - (-0.72e2 * t155 * t241 - 0.72e2 * t367 * t190 + 0.72e2 * t241) * t12) - t382 * (t9 * (t264 * t17 * (-t10 * (n3pp / 0.21e2 + t140 - 0.2e1 / 0.21e2 * t4 * t170) + t175) + t7 * (-0.3e1 * t332 - t299)) + 0.126e3 * t262 * t175)) + t312 * (t12 * (-0.126e3 * t265 * t1 + 0.126e3 * t25 * t175 + 0.54e2 * t304 * t5) - t9 * (-t253 * (-0.21e2 / 0.2e1 * t287 * t8 - t245) + t7 * (-t280 * n3p - t239 - t269))) - t186 * t225 * t5) * t18;
t155 = t25 * n3p;
t175 = t41 * t1;
t34 = (t27 * (t65 * (t330 * (t373 * (t108 * t182 * t381 + t380 * t154) + t5 * (-0.6e1 * t30 * t17 * n3p - t207 * t2) - t272 * t281) + (t18 * t34 + t12 * (0.144e3 * t194 * t371 + 0.27e2 * t378 * (-t324 + t76 * (t361 - 0.2e1 / 0.27e2 * t232)) + t313 * (t9 * (-t197 * t25 * n3p - t199 * t2) + t297 * t130 * t2)) - t9 * t313 * (t5 * (t7 * (-t131 * t193 - t211 * t17 - t218 * t187) + t246 * t69 + t345 * t182 * t381) - t248 * t2 - t266 * t25 + t109 * (-0.9e1 / 0.2e1 * t30 - t232 + t233 * t17))) * t18) + t66));
t15 = t312 * (t65 * (t135 * t151 * t9 - t197 * t63 * ((0.3e1 * t149 + 0.3e1 * (t5 * (0.4e1 / 0.3e1 * t116 * t5 - t148) + t7 * (-t124 * t363 - t45 * t320) + t216) * t5) * t17 * t23 + t18 * (t23 * (t8 * (0.2e1 * t55 * t138 - t52 * t71) + t153 + t12 * (-t142 + t10 * (-t222 + t153) - 0.4e1 / 0.3e1 * t109 + 0.4e1 / 0.3e1 * t155)) + t12 * (-t155 + t153) + t152 - t153 + t222) + t122 * (-t296 * t71 - t204))) + t294 * (t25 * t15 * t24 + t122 * t303 - 0.3e1 * t18 * (t28 * (t21 - t112) * t17 - t25 * (-t71 + t12))) * t132);
t21 = 0.7e1 / 0.8e1;
t66 = -t49 * t4 * t170 + t140 + t258;
t108 = -0.2e1 * t66;
t112 = t333 * t17;
t6 = t231 * t6;
t130 = 0.3e1 * t302 * t2;
t13 = t18 * (t18 * (t18 * (t5 * (-t30 * (t37 * (-t236 + 0.8e1 / 0.15e2) + t56 * (-0.4e1 / 0.5e1 - t10)) * t209 - 0.12e2 * t72 * (t290 * (t49 - t260) + t7 * (t10 * t66 + t108))) + 0.6e1 * t2 * (t290 * (t84 + t81) + t7 * (t10 * (-0.17e2 / 0.4e1 * t4 * t170 + t258 + t140) + t108)) + 0.6e1 * t56 * t30 * t31 * t32 * t13) + t17 * (-t12 * (t189 * t158 + t197 * (-t242 - t396)) + t88 * t30 * (t210 + 0.6e1)) + t5 * (t317 + (t214 * t7 * t66 + (-0.9e1 / 0.2e1 - t237) * t1 * n3p) * t2 * t17) + t7 * (-t230 * t185 * t2 - 0.6e1 * t346 * t17)) - t202 * t69 * t10 + t39 * (t69 * t13 * t74 - 0.3e1 * t52 * t2) + t5 * (t5 * (t289 * t189 * t2 - t351 + t7 * (-0.12e2 * t66 * t2 - t219 + t221)) + t7 * (t202 * t56 * t2 + 0.6e1 * t347) + t47 * (-t267 * t74 + t227)) + t7 * (0.6e1 * t240 * t2 + t219 * t49) + t112) + t5 * (t130 - t6);
t66 = -0.7e1 / 0.4e1 * t4 * t170 + t258 + t140;
t69 = t78 * n3p;
t81 = t25 * t4;
t108 = t8 * (0.12e2 * t300 * t66 + t299);
t138 = t76 * t145;
t142 = -t138 - t284;
t145 = t54 * t206;
t148 = t80 * t74;
t91 = t313 * (0.2e1 * t384 - 0.2e1 * t145 - t91 * (-t280 * t331 - t145));
t39 = -t385 * (t142 * t187 + t148 * t283) + t91 + (t18 * (t18 * (t12 * (t395 * t348 * n3p - t321 * t386 * t283) + t313 * (t5 * (-t298 * (-t36 * t66 * t60 + t39 * (t10 * t21 - 0.3e1 / 0.8e1) * n3p) + 0.6e1 * t208) - t69 * t182 + t103 * t285) + t81 * (t191 * t10 + t284 * t74)) + t5 * (-0.54e2 * t262 * t283 * t386 - 0.54e2 * t17 * t386 * t283 - 0.2e1 * t314 * (-t235 * t214 * n3p - t198) + (-0.108e3 * t220 * t1 + 0.63e2 * t284) * t4 * t17 * t10) + t313 * (-t9 * (t331 * (0.21e2 / 0.2e1 * t10 - 0.3e1 / 0.2e1) * t1 - t108) + 0.8e1 * t12 * (t331 * (0.9e1 / 0.4e1 * t10 - 0.3e1) * t1 - t108))) + t12 * (-t395 * t182 * n3p + 0.54e2 * t25 * t386 * t283) + 0.2e1 * t314 * (0.6e1 * t53 * n3p + t62 * t193 + t224) + t359 * (t9 * (-t254 * t299 - 0.3e1 / 0.2e1 * t39 * n3p + t36 * (t307 + t4 * (t170 * t315 - t250) - t251 - t356)) + t86 * t39 * n3p) + t228 * t25 * t142) * t18;
t53 = t312 * t30;
t60 = t53 * t1;
t66 = -t60 + t223;
t91 = n3pp / 0.12e2 + t140 - t107 * t4 * t170;
t103 = 0.8e1 / 0.3e1 * t60 - t223;
t108 = t347 * t312;
t140 = t76 * t164;
t142 = t140 - t284;
t145 = t81 * t142;
t6 = t39 * t65 - t148 * t57 * t66 + t312 * (t268 * (0.12e2 * t272 - 0.6e1 * t93) - 0.2e1 * t5 * (-t130 - t6)) + (t18 * (t18 * (t5 * (-t213 * t74 * t66 + t186 * t7 * (-t367 * t103 + t108) - t108 * t74 * t11 - 0.54e2 * t292 * t66) + t312 * (-0.6e1 * t7 * (-t234 - 0.6e1 * t91) + 0.6e1 * t290 + t12 * (t111 + t7 * (t10 * t91 - 0.2e1 * t91)) * t186) * t2) + t17 * (t186 * (-t49 * (t306 * t66 - t53 * t46) - t306 * t103 * t10) - (0.54e2 * t354 * t66 + 0.54e2 * t53 * t396) * t12) + t382 * (t9 * ((-t25 * t7 * t91 * t74 - t35 * t1 * n3p) * t2 * t17 - t341) - t302 * t86 * t19 * t2)) + t5 * (-0.54e2 * t80 * t66 * t8 - t53 * t397 - t292 * t186 * (0.2e1 / 0.3e1 * t60 - t223)) - 0.2e1 * t312 * (t12 * (-t316 * t2 - t351 + t7 * (-t91 * t74 * t2 - t219 + t221)) + 0.3e1 * t290 * t2 - t7 * (-0.21e2 / 0.2e1 * t287 * t2 - t219) + t112 * t139)) * t18;
t6 = (t65 * t6 + t17 * (-t212 * (t12 * t142 - t140 + 0.2e1 / 0.3e1 * t284) * t187 + 0.27e2 * t23 * (t367 * t313 * t132 * (-0.8e1 / 0.9e1 * t12 + t363) + t5 * (-t80 * t19 * t142 - t142 * t4 + t7 * (-t392 * t25 * t363 + 0.4e1 / 0.27e2 * t378 * t357)))) + t18 * (t23 * (t12 * (t395 * t238 * n3p + t145 * (t301 - t186)) + t312 * (-0.12e2 * t364 * t33 * t63 * t132 + 0.6e1 * t69 * t63) + t81 * (-0.14e2 * t284 * t10 + t142 * t187)) + t5 * (t5 * (t69 * t325 + 0.27e2 * t145) - 0.12e2 * t327 * t313 * t132) - 0.6e1 * t81 * (t138 - t284) - 0.6e1 * t395 * n3p)) * t65;
t6 = t298 * t175 * (t63 * (-(0.3e1 * t4 * (0.3e1 / 0.4e1 * t205 * t19 + t274 * t95) - 0.3e1 * t12 * (t279 - t97) + 0.3e1 * t52 * (-t107 + t260)) * t17 * t23 - t17 * (t55 * t96 + t101) + t18 * (t23 * (t169 * t84 + (t5 * (t200 * t5 / 0.15e2 - t169) - 0.7e1 / 0.4e1 * t90) * t5) + t5 * (t67 - 0.7e1 / 0.4e1 * t99) - t168 * t54)) + t65 * ((0.3e1 * t272 * t19 * t167 + 0.3e1 * t72 * (t20 * t119 + t94 * t165)) * t17 * t23 + t17 * (t72 * n3p * t100 + t272 * t167) + t18 * (t23 * (t2 * (t21 * (t155 * (t256 - 0.4e1 / 0.7e1) + t110) - 0.7e1 / 0.4e1 * t162 * t12) + t98 * t32 * t31 * t8) + t2 * (t21 * (0.3e1 / 0.7e1 * t155 - t109) - 0.7e1 / 0.4e1 * t12 * t166) + t244 * (0.9e1 / 0.4e1 - t150)))) + t6 + t312 * (0.6e1 * t44 * t18 * t390 * t132 + t9 * (-0.6e1 * t58 * t30 * t303 - 0.3e1 / 0.2e1 * t268 * t93 + t13) * t59);
t11 = -t124 + t45;
t13 = 0.2e1 / 0.3e1 * t45;
t21 = t313 * t157;
t31 = t7 * t18;
t32 = -t124 - t38;
t35 = 0.10e2 / 0.3e1 * t319 * t1 - t311;
t39 = 0.6e1 * t312;
t44 = t76 * t380;
t53 = -t324 + t44;
t42 = 0.2e1 * t378 * t18 * (-t254 * (0.3e1 / 0.2e1 * t313 * t43 * t132 + t249 * t53) * t18 + 0.3e1 * t324 - t44 + t12 * t53 + t23 * (-0.7e1 * t324 * t10 + t42 * t53 - t324 + t312 * (-0.3e1 * t249 * t43 * t63 * t132 + t380 * t1 * t63))) * t65;
t11 = 0.72e2 * t312 * t1 * (t17 * (t47 * t5 * (-0.5e1 / 0.4e1 + t12) * t71 + 0.2e1 * t23 * (t49 * t4 * (t78 * t8 + t121) + t5 * (-t129 * t71 + t47 * t229 - t105))) + t18 * (t23 * (t10 * (-0.5e1 / 0.6e1 * t124 - t368) + t71 * t11 - t5 * (-t5 * (t10 * t11 * t71 + t113 * t25 - t13) + t136 * t33)) + 0.5e1 / 0.12e2 * t124 - t368 + t5 * (t5 * (-t124 + t77) - t136))) * t59;
t44 = t322 * t65;
t53 = t312 * t170;
t6 = t3 * (0.72e2 * t175 * (-t63 * (t17 * (0.2e1 / 0.3e1 * t88 * t12 * t2 - 0.2e1 * t23 * (-t5 * (t73 * t7 - t72 * (-t242 + t51)) - (-0.2e1 / 0.3e1 * t337 + t46 / 0.4e1) * t2)) + t18 * (t23 * (-t75 * t131 + t72 * (0.4e1 / 0.3e1 * t37 * t146 + 0.4e1 / 0.3e1 * t305 + 0.2e1 / 0.3e1 * t308)) - t131 * t161 + t72 * (-0.4e1 / 0.3e1 * t56 - t37 / 0.2e1 + t318 * t56))) + t65 * (-t18 * (-t23 * (t7 * (t7 * (-t159 - 0.13e2 / 0.12e2 * t124) + t119) + t12 * (-t104 + t360 - t7 * (-t117 + n3p)) - t286) + t159 - t5 * (t5 * (t134 + 0.3e1 * t124) - t136) + t124 * t95) - t122 * t47 * (-t95 + t12) + t270 * (t4 * (t263 * t8 - 0.3e1 / 0.2e1 * t121) + t5 * (-t105 - t293 + t47 * (0.37e2 / 0.24e2 * t10 - 0.3e1 / 0.2e1))) * t23)) + t34 + t15) + t6;
t6 = (t3 * t6 + t298 * t41 * t170 * t4 * (-t102 * t65 + t120 * t106) + t27 * (t65 * (t18 * (t18 * (-t300 * (-t335 * t362 + t76 * (-0.2e1 / 0.3e1 * t64 + 0.11e2 / 0.6e1 * t62 + t181 * t12) * t2) * t186 + t31 * (-t75 * t362 * t4 + 0.11e2 / 0.3e1 * t21 * (t52 * (-0.4e1 / 0.11e2 * t10 + 0.8e1 / 0.11e2) - t68)) * t74) - 0.12e2 * t21 * (0.2e1 * t37 - t56) + t183 * (t187 - t86)) + 0.12e2 * t310 * t358 * t2) + t17 * (t39 * t212 * t170 * t369 * t370 + t23 * (-t49 * t4 * (t336 * t312 * t170 - t173 * t35) + t5 * (t312 * (t7 * (-t378 * (-t328 + t132) - t276) - t243 * t4) * t107 - t350 * t35)) * t186) + t18 * (t23 * (-0.6e1 * t312 * (t278 * (t10 * t32 + t16 * t9) - 0.2e1 * t323 - t81 * (t192 + t170)) - t365 * t33 * t35) - t74 * t5 * (t327 * t35 + t349 * (-t124 - t13)) + t39 * t1 * t32)) + 0.7e1 * t31 * t259 * t283 * t386 + t42 - t11) * t3;
t10 = t85 * t182 * (t65 * (t65 * (t24 * (t7 * (-t184 * t9 * t7 + (t22 - 0.3e1 / 0.2e1) * t1 * n3p) + t12 * (t126 * t1 - t123 * t179) + t184) - t26 * t179 - 0.3e1 * t28 * (-t5 * (t184 - t329) + (t258 - t7 * (-t188 * t7 + t290) - t133 + t20 * t179 - t171) * t17 * t18)) + (-0.9e1 / 0.2e1 * t122 * (t338 * t12 * n3p + (0.2e1 * (t107 - t201) * n3p + 0.4e1 / 0.3e1 * t116 * t12 - 0.2e1 * t117) * t23) + 0.9e1 / 0.2e1 * t18 * (t12 * t226 + t23 * (t12 * t196 - t109 + t114 + t25 * (-t10 * t363 + t338) * n3p)) - 0.3e1 / 0.2e1 * t109 * t18 * t27 * t180) * t63 * t30) + 0.3e1 / 0.4e1 * t133 * t29 + 0.3e1 / 0.4e1 * (t24 * (t10 * (t104 + 0.4e1 / 0.3e1 * t45) + t12 * (-t10 * t16 + t104 + t38) - t124 - t45) + t137 - 0.3e1 * t28 * (-t143 * t5 + (t7 * (-0.2e1 / 0.3e1 * t25 * n3p + t128) - t127) * t17 * t18)) * t1 * t59);
t11 = t48 * (-t372 * t53 * t135 * (t2 * t271 * t65 + t259) - t376 * (t120 * t391 + t44) + t53 * t342 * t390 * t2 * t27);
t13 = t44 * t2 + t391 * t63;
t15 = t27 * (t50 - 0.2e1 * t271) + t12 + t389 - 0.1e1 - 0.2e1 * t65 * (t120 * t273 + t79 * t13) - 0.2e1 * t83;
t15 = 0.1e1 / t15;
t1 = (t65 * t275 * (-t187 * (t27 * t82 - t320 * t312 * t65 * (-t27 * (t18 * (t18 * (t18 * (t2 * (t298 * (t7 * (-0.3e1 / 0.4e1 * t179 + t277) + t290 * (-0.1e1 / 0.8e1 + t118)) - t12 * (t7 * (t188 + t277) + t111) * t186) - t5 * (t74 * (t305 + t37 * (0.8e1 / 0.3e1 - t172)) + t308 * t187) * t30) + t5 * (t317 + (0.72e2 * t184 * t7 + (-t326 + t74) * t1 * n3p) * t2 * t17 + 0.27e2 * t122 * t30 * (-t242 + 0.16e2 / 0.9e1 * t46)) + t74 * t17 * (-t30 * (-t337 + 0.4e1 / 0.3e1 * t46) + t93 * t1 * t19)) + t12 * (t7 * (-t186 * t179 * t2 - t219 + t221) - t351 - t290 * t74 * t2) + t30 * (t5 * (-t74 * (-t56 - 0.4e1 / 0.3e1 * t37) - 0.27e2 * t340) + t203 * t4)) + t5 * (t302 * t87 * t2 + t272 * (-t353 * t187 - t206))) + t30 * t40) + t9 * t70) + t10) + t11 + t6) * t176 * t163 * t156 * t178 * t15;
t4 = 0.1e1 / t283;
t6 = 0.1e1 / t7;
NonA = [-t14 -t177 * (t65 * (-t65 * (t345 * t3 + t36 * t89) + t43 * t5 * t63) + t36) * t125 * t147 * t141 * t144 * t92 * t156 t177 * (t65 * (t65 * (t17 * (t25 * t89 - t61) + t28 * t89) + t120 * t115) - t28 - t25 * t17) * t125 * t147 * t141 * t160 * t92 * t156 0; -t1 t177 * (t63 * (t36 * t2 + t3 * t8) + t7 * t5 * t65) * t125 * t147 * t141 * t144 * t92 * t174 -t177 * (t115 * t65 - t63 * (t17 * (t25 * t2 - t388) + t28 * t2)) * t125 * t147 * t141 * t160 * t92 * t174 0; t3 * t65 * (t79 * t65 + t13) * t4 0 0 0; 0 0 -t160 * t17 * t6 -0.1e1 / J__3 * t18 * t6;];

t1 = x(12);
t2 = x(13);
t3 = x(6);
t4 = cos(t3);
t5 = x(7);
t6 = sin(t5);
t7 = x(8);
t8 = sin(t7);
t3 = sin(t3);
t7 = cos(t7);
t9 = t4 * t8;
t10 = t9 * t6;
t11 = t3 * t7;
t12 = -t10 + t11;
t13 = -G + n3;
t14 = x(4);
t15 = cos(t14);
t14 = sin(t14);
t5 = cos(t5);
t16 = t1 ^ 2;
t17 = t13 * t16;
t18 = -n3pp + t17;
t19 = t2 * t5;
t20 = t19 * t1;
t21 = t20 * t14;
t22 = t21 * t13;
t23 = t18 / 0.2e1;
t24 = t23 * t7;
t25 = t24 * t6 - t22;
t26 = 2;
t27 = t3 * t8;
t28 = t26 * t25;
t29 = -t18 * t27 - t28 * t4;
t30 = t4 * t7;
t31 = t30 * t6;
t32 = t31 + t27;
t33 = t14 * t32;
t34 = t33 * n3p;
t35 = t15 * t32;
t36 = t35 * n3p;
t37 = t2 * t8;
t38 = t37 * t13;
t39 = n3p * t7;
t40 = t39 * t14;
t41 = t40 - t38;
t42 = t2 * t13;
t43 = t42 * t7;
t44 = t8 * n3p;
t45 = t44 * t14;
t46 = t45 + t43;
t47 = t3 * t46;
t48 = t4 * t41;
t49 = t48 * t6 + t47;
t50 = t14 ^ 2;
t51 = t15 ^ 2;
t52 = t51 ^ 2;
t53 = t15 * t51;
t54 = -t51 + t50;
t55 = 6;
t56 = 3;
t57 = t5 * t15;
t58 = t57 * t4;
t59 = t12 * t14;
t60 = t59 * t55;
t61 = t51 * t56;
t62 = t42 * t15;
t63 = t62 * t1;
t64 = x(5);
t65 = cos(t64);
t64 = sin(t64);
t66 = n3pp / 0.2e1;
t67 = t66 - t17;
t68 = t44 * t1;
t69 = t68 * t6;
t70 = t67 * t5;
t71 = t69 + t70;
t72 = t39 * t3;
t73 = t72 * t1;
t74 = t4 * t71 - t73;
t75 = t5 * n3p;
t76 = t75 * t1;
t77 = t67 * t6;
t78 = t77 * t8 - t76;
t79 = t11 * t67;
t80 = t4 * t78 - t79;
t81 = t42 * t35;
t82 = t43 * t14;
t83 = t82 + t44;
t84 = 0.3e1 / 0.2e1;
t85 = t84 * t1;
t86 = t85 * t5;
t87 = t86 * t13;
t88 = t83 * t6;
t89 = -t88 + t87;
t90 = t38 * t14;
t91 = t39 - t90;
t92 = t3 * t91;
t93 = t4 * t89 + t92;
t94 = t12 * t1;
t95 = t94 * t13;
t96 = t50 * t55;
t97 = t14 * t80;
t98 = t75 / 0.2e1;
t99 = t8 * t1;
t100 = t99 * t13;
t101 = t100 * t6;
t102 = -t101 - t98;
t103 = 0.4e1 / 0.3e1;
t104 = t103 * t102;
t105 = t11 * t103 * t1 * t13;
t106 = -t104 * t4 - t105;
t107 = -t56 * t106;
t108 = t103 * t1;
t109 = t108 * t5;
t110 = t109 * t13;
t111 = 0.2e1 / 0.3e1 * t44;
t112 = t111 * t6 - t110;
t113 = t2 * t14;
t114 = 0.2e1 / 0.3e1 * t40;
t115 = t15 * t112;
t116 = -t115 * t2;
t117 = 0.2e1 / 0.3e1 * t72;
t118 = t117 * t15 * t2 + t116 * t4;
t119 = 0.1e1 / 0.3e1;
t120 = t2 ^ 2;
t121 = 0.2e1 / 0.3e1 * t16;
t122 = t120 + t121;
t123 = n3pp * t119 - t122 * t13;
t124 = -0.2e1 / 0.3e1 * t37 * t14 * n3p + t123 * t7;
t22 = t103 * t22 + t124 * t6;
t123 = t114 * t2 + t123 * t8;
t125 = t3 * t123;
t126 = t22 * t4 + t125;
t127 = t40 / 0.2e1;
t128 = -t127 + t38;
t129 = t103 * t128;
t130 = -t129;
t131 = -t45 / 0.2e1 - t43;
t132 = t103 * t131;
t133 = t132 * t3;
t134 = t130 * t6;
t135 = -t134 * t4 + t133;
t136 = t2 * t107;
t137 = t136 * t15;
t138 = t1 * t135;
t139 = t83 * t3;
t140 = t91 * t6;
t141 = t140 * t4 + t139;
t142 = m0 + mp0;
t143 = 4;
t144 = t142 * t13;
t145 = t113 * t143;
t146 = t145 * t1 * L0;
t147 = t146 * t64 * m0;
t148 = t147 - t144;
t149 = t7 * t148;
t150 = t120 * L0;
t151 = t150 * t64;
t152 = m0 * t151 * t5 + t149 * t6;
t153 = t152 * t4;
t154 = t27 * t148;
t155 = t19 * t4;
t156 = t155 * t13;
t157 = t156 * t15;
t158 = t141 + t157;
t159 = t64 * m0 * L0;
t160 = t159 * t2;
t161 = t160 * t15;
t162 = t26 * t161 * t158;
t163 = -t13 * (t153 + t154) - t162;
t164 = t62 * t12;
t165 = t160 * t35;
t166 = t164 * t15;
t167 = -t14 * t141 + t166;
t168 = -t143 * t13 * (-m0 * t14 * t151 * t58 + t1 * t165) - t26 * t160 * t167;
t169 = t59 * t42;
t170 = t160 * t33;
t171 = t64 * t164;
t172 = t5 * t13;
t173 = t172 * t4;
t174 = t13 * t32;
t175 = t65 ^ 2;
t176 = t175 ^ 2;
t177 = t65 * t176;
t178 = t65 * t175;
t179 = m0 * L0;
t180 = t179 * t175;
t181 = t15 * t65;
t182 = t180 * t56;
t183 = t12 * t14;
t184 = t183 + t58;
t185 = t184 * t65;
t186 = t64 * t32;
t187 = t185 + t186;
t188 = t20 * t4;
t189 = t1 * t36;
t190 = t49 * t14;
t191 = -t169 * t61 * t1 - t15 * (t13 * t188 * t51 - t14 * t29 + t189) + t190 * t1;
t80 = (t1 * (t81 - t95) + t51 * t80) * t15;
t192 = t93 * t14;
t193 = t97 * t26;
t194 = t14 * t15;
t195 = -t192 * t1 - t80 + t194 * (-t15 * t56 * t74 + t193);
t196 = t118 * t51;
t189 = 0.2e1 / 0.3e1 * t189;
t136 = t15 * (-t126 * t14 * t26 + t189) + t14 * (t136 * t51 + t138) + t196;
t197 = t64 * t195;
t198 = t179 * t178;
t199 = t14 * t163 - t15 * t168;
t200 = t65 * t199;
t201 = t194 * t174 * t143 * t120;
t202 = t26 * t198 * (t191 * t65 + t197) + t200 + t179 * (t136 * t175 * t56 - t201);
t203 = t14 * t5;
t204 = t203 * t4;
t205 = t15 * t12 - t204;
t206 = -t29 / 0.2e1;
t207 = t156 * t51;
t208 = t49 * t14;
t209 = t63 * t56;
t210 = -t194 * (t12 * t209 + t206 * t26) - t1 * (t15 * (t207 + t36) - t208);
t211 = t1 * t93;
t212 = t15 * t74;
t80 = -t211 * t14 - t80 + t194 * (-t212 * t56 + t193);
t193 = -t1 * t135;
t106 = t106 * t15;
t213 = t106 * t2;
t189 = -t193 * t14 + t15 * (-t14 * (t126 * t26 + t213 * t56) + t189) + t196;
t196 = t64 * t80;
t200 = -t26 * t198 * (t210 * t65 + t196) - t200 + t179 * (-t175 * t189 * t56 + t201);
t201 = t174 * t16;
t206 = t15 * (-t1 * t49 + t15 * (t63 * t12 + t206)) - t201;
t211 = t15 * (t15 * (-t97 + t212) + t211) + t17 * t59;
t193 = 0.2e1 / 0.3e1 * t201 + (t15 * (t213 + t126) + t193) * t15;
t212 = t173 * t64;
t213 = t212 * t142;
t214 = t150 * t26 * m0;
t215 = t64 * t211;
t216 = -t26 * t198 * (t206 * t65 + t215) + t13 * (-t214 * t32 * t51 - t213) + t181 * t163 - t182 * t193;
t217 = -t56 * t200;
t218 = -t56 * t216;
t219 = 0.1e1 / m0;
t220 = 0.1e1 / L0;
t187 = 0.1e1 / t187;
t221 = 0.1e1 / t65;
t222 = 0.1e1 / t15;
t223 = t221 ^ 2;
t224 = t223 ^ 2;
t225 = t221 * t223;
t226 = t222 ^ 2;
t227 = t226 ^ 2;
t228 = t222 * t227;
t229 = t222 * t226;
t230 = t205 * t218;
t29 = t187 * (-t184 * t216 + t205 * (-t202 + t200)) + t221 * (m0 * t143 * t150 * t174 * t54 + t26 * t65 * (t14 * t168 + t180 * ((t63 * (t14 * (t60 + 0.5e1 * t58) - t61 * t12) - t1 * (-0.2e1 * t14 * t36 + t15 * (-t34 - t49)) - t29 * t54) * t65 + t64 * (t15 * (t96 - t61) * t74 + t97 * (-t26 * t50 + 0.7e1 * t51) - t1 * (t14 * (t95 - 0.2e1 * t81) + t15 * (-t33 * t42 + t93))))) + t181 * (t163 - t143 * (t1 * t13 * t170 + (-t120 * t173 * t54 * t64 + t113 * t171) * m0 * L0) - t26 * t161 * (t169 + t141)) + t182 * (t26 * (-t126 * t51 + t14 * (-t118 * t15 + t14 * (t126 - t137))) + (-t118 * t14 * t26 + t15 * (t112 * t113 * t4 - t114 * t2 * t3 + t137) + t138) * t15 - 0.2e1 / 0.3e1 * t1 * (t14 * t26 * t36 + t15 * t34)) + t218) + (-t187 * t230 + t217 * t221) * t222 * t14;
t34 = t229 * t223;
t74 = t34 * t187;
t97 = t74 * t220 * t219;
t112 = t216 * t187;
t118 = t221 * t202;
t126 = t187 * t219 * t220;
t137 = t126 * t223;
t138 = t137 * t227 * t14;
t168 = t187 ^ 2;
t231 = t187 * t168;
t232 = t143 * t218 * t223;
t233 = t168 * t26 * t216;
t234 = t1 * t7;
t235 = t14 * t6;
t236 = t235 * t234;
t237 = t236 * t143;
t238 = t19 + t237;
t239 = t179 * t2;
t240 = t239 * t65;
t241 = t240 * t238;
t242 = t241 * t4;
t243 = t146 * t27 * t65 * m0;
t239 = t239 * t181;
t158 = -t13 * (t242 + t243) - t26 * t239 * t158;
t244 = t150 * t58 * t65 * m0;
t245 = t159 * t65;
t167 = -t199 * t64 + t65 * (t14 * t158 - t15 * (-t143 * t13 * (t1 * t240 * t35 - t14 * t244) - t26 * t240 * t167));
t199 = 0.8e1;
t246 = t26 * t65;
t247 = t13 ^ 2;
t248 = t4 * t247;
t249 = t248 * t5 * t142;
t158 = t15 * t158;
t250 = t199 * t206;
t251 = -t55 * t245 * (t215 * t65 + t193) + t65 * (t249 - t158) + t15 * t163 * t64 + t198 * (t211 * t246 - t64 * t250);
t252 = t65 * t32;
t253 = t184 * t64 - t252;
t254 = t221 * t64;
t255 = t112 * t253;
t256 = t126 * t225;
t257 = t256 * t227 * t14;
t258 = t34 * t26;
t259 = t258 * t216 * t219 * t231 * t220;
t260 = x(15);
t261 = x(16);
t262 = x(14);
t263 = t260 * t3 + t261 * t4;
t264 = t262 * t5 + t263 * t6;
t265 = t27 * t6;
t266 = t265 + t30;
t267 = t23 * t9;
t268 = -t25 * t3 + t267;
t269 = t11 * t6;
t270 = t269 - t9;
t271 = t15 * n3p;
t272 = t271 * t270;
t273 = t4 * t46;
t274 = t3 * t41;
t275 = -t274 * t6 + t273;
t276 = t19 * t3;
t277 = t276 * t13;
t278 = t30 * t1;
t279 = t278 * n3p;
t280 = t30 * t67;
t281 = t3 * t78 + t280;
t282 = t4 * t91;
t283 = -t3 * t89 + t282;
t284 = t1 * t266;
t285 = t1 * (t13 * t284 + t62 * t270);
t286 = t1 * t283;
t287 = t15 * (t3 * t71 + t279);
t288 = t14 * t281;
t289 = t108 * t30 * t13;
t290 = t271 * t30;
t291 = 0.2e1 / 0.3e1 * t290 * t2;
t292 = t4 * t123;
t293 = -t22 * t3 + t292;
t294 = t132 * t4;
t295 = t129 * t6;
t296 = t295 * t3 - t294;
t297 = t1 * t296;
t298 = (t104 * t3 - t289) * t15;
t299 = t298 * t2;
t300 = 0.2e1 / 0.3e1 * t1 * t272;
t301 = t83 * t4;
t302 = t3 * t91;
t303 = t302 * t6;
t304 = t301 - t303;
t305 = t152 * t3;
t306 = t9 * t148;
t307 = t277 * t15;
t308 = t304 - t307;
t309 = t13 * (-t306 + t305) - t26 * t161 * t308;
t310 = t62 * t266;
t311 = t310 * t15;
t312 = t143 * t13 * (-m0 * t14 * t151 * t3 * t57 + t1 * t161 * t270);
t313 = -t270;
t314 = t194 * t143;
t315 = t314 * t13;
t316 = t315 * t120;
t317 = t316 * t313;
t318 = t63 * t266;
t319 = t17 * t313;
t320 = t15 * (-t1 * t275 + t15 * (t268 + t318)) - t319;
t321 = t14 * t266;
t322 = t321 * t17;
t323 = t15 * (t15 * (t287 - t288) - t286) - t322;
t324 = 0.2e1 / 0.3e1 * t319;
t325 = (t15 * (t299 + t293) + t297) * t15 + t324;
t326 = t172 * t3;
t327 = t326 * t64 * t142;
t328 = t13 * (-t214 * t313 * t51 + t327);
t329 = t64 * t323;
t330 = -t181 * t309 - t26 * t198 * (-t320 * t65 + t329) - t328 + t182 * t325;
t331 = t57 * t3;
t332 = t14 * t266 - t331;
t333 = t64 * t313;
t334 = t332 * t65 + t333;
t335 = t203 * t3;
t336 = t216 * (t15 * t266 + t335);
t337 = t112 * t334 + t330;
t338 = t259 * t334 * t205;
t339 = t260 * t4 - t261 * t3;
t340 = t235 * t42;
t24 = t1 * t340 + t24 * t5;
t341 = t42 * t6;
t342 = t4 * t1;
t343 = t194 * t4;
t68 = t68 * t5;
t344 = t6 * n3p;
t345 = t344 * t1;
t70 = t70 * t8 + t345;
t346 = t85 * t6;
t347 = t346 * t13;
t348 = -t5 * t83 - t347;
t349 = t2 * t7;
t350 = t1 * t348;
t351 = t57 * t1;
t352 = t4 * (t350 * t14 + t53 * t70 + t351 * (t15 * t349 + t99) * t13);
t353 = t14 * t70;
t354 = t353 * t26;
t355 = t15 * (-t67 * t6 + t68);
t356 = t344 / 0.2e1;
t357 = t100 * t5;
t358 = -t357 + t356;
t359 = t103 * t358;
t360 = t108 * t6;
t361 = t2 * t15;
t362 = -t108 * t340 + t124 * t5;
t363 = -t361 * t359;
t364 = t4 * t15;
t149 = m0 * t151 * t6 - t149 * t5;
t365 = t62 * t6;
t366 = t91 * t5;
t367 = -t366 + t365;
t368 = t161 * t4;
t369 = t13 * t149;
t370 = t26 * t367 * t368 + t369 * t4;
t371 = t113 * t6;
t372 = t234 * t5;
t373 = t372 + t371;
t374 = t38 * t51;
t375 = t159 * t155;
t376 = (t342 * (t5 * (t14 * t41 - t39 * t51) + t341 * t53) + t343 * (t13 * t15 * t20 * t56 * t8 - t24 * t26)) * t65;
t377 = t65 * (t14 * t370 - t15 * (-t143 * t159 * t373 * t4 * t62 + t26 * t375 * (t14 * t91 + t374)));
t111 = t179 * (-t57 * t30 * t143 * t13 * t120 * t14 + t56 * (-t4 * (t51 * t361 * (t111 * t5 + t13 * t360) + t203 * t130 * t1) + t364 * (t14 * (-t26 * t362 - t363 * t56) + 0.2e1 / 0.3e1 * t351 * t39)) * t175);
t378 = t374 + t41;
t379 = t172 * t16;
t380 = t379 * t7;
t381 = -t24 * t51 + t351 * t378 + t380;
t382 = t4 * t381;
t383 = t379 * t14 * t8;
t384 = t15 * (t15 * (-t355 + t353) - t350) + t383;
t385 = t4 * t384;
t363 = t15 * (t363 + t362) + t130 * t5 * t1;
t386 = 0.2e1 / 0.3e1 * t379 * t30 + t364 * t363;
t387 = t144 * t64 * t6;
t388 = -t214 * t5 * t51 * t7 + t387;
t389 = t13 * t388 * t4 + t181 * t370;
t390 = t382 * t65;
t391 = t64 * t385;
t392 = t182 * t386;
t393 = -t26 * t198 * (t391 + t390) - t389 + t392;
t394 = t203 * t8;
t395 = t6 * t15;
t396 = t395 + t394;
t397 = t4 * t396;
t398 = t30 * t64;
t399 = t397 * t65 - t398 * t5;
t400 = t57 * t8;
t401 = -t400 + t235;
t402 = t4 * t401;
t403 = t216 * t402;
t404 = -t112 * t399 + t393;
t405 = t259 * t399 * t205;
t406 = t18 * t12;
t407 = -t271 * t12;
t408 = t46 * t6;
t409 = t3 * t41;
t410 = t4 * t408 - t409;
t411 = t15 * t406;
t412 = t407 * t1 * t15;
t413 = t1 * t32;
t414 = t413 * t61 * t42 * t14;
t415 = t1 * t32;
t416 = t415 * n3p;
t417 = t67 * t32;
t418 = t91 * t6 * t4;
t419 = t83 * t3 + t418;
t420 = t174 * t1;
t421 = (t1 * (t164 + t420) + t417 * t51) * t15;
t422 = t1 * t419;
t417 = t14 * t417;
t423 = t417 * t26;
t424 = t15 * t416;
t425 = t415 * t13;
t426 = -t123 * t6;
t427 = t124 * t3 + t4 * t426;
t428 = t132 * t6;
t429 = t103 * t3;
t430 = -t128 * t429 + t4 * t428;
t431 = t361 * t425 * t143;
t432 = t430 * t1;
t407 = 0.2e1 / 0.3e1 * t15 * (t15 * t2 * t36 + t1 * t407);
t433 = t4 * t88 - t92;
t434 = t148 * t12;
t435 = t161 * t26;
t436 = -t13 * t434 + t433 * t435;
t437 = t143 * t13;
t438 = t65 * (t14 * t436 - t15 * (t26 * t160 * (-t14 * t433 + t15 * t81) - t437 * t161 * t94));
t316 = t316 * t12;
t439 = t42 * t51;
t440 = t439 * t32;
t441 = t12 * t1;
t442 = t441 * t13;
t406 = t406 * t51 / 0.2e1 + t1 * (t15 * (-t440 + t410) - t442);
t201 = t15 * (t15 * (t417 - t424) + t422) + t201 * t14;
t417 = 0.2e1 / 0.3e1 * t17;
t443 = t103 * t425 * t2 * t53 + t417 * t12 + t15 * (t15 * t427 + t432);
t444 = t64 * t201;
t445 = t13 * t120;
t446 = t445 * t12;
t447 = t446 * t51;
t448 = (t179 * t443 * t56 * t65 - t15 * t436) * t65;
t449 = -t26 * t179 * (t178 * (-t406 * t65 + t444) - t447) + t448;
t450 = t64 * t12;
t451 = t65 * t32;
t452 = t14 * t451 - t450;
t453 = t112 * t32;
t137 = t137 * t226;
t454 = -t112 * t452 + t449;
t455 = t259 * t452 * t205;
t422 = t56 * t257 * t454 - t137 * (t222 * (t221 * (t200 * t452 * t187 - t26 * t198 * (t64 * (t422 * t14 - t421 + t194 * (-t424 * t56 + t423)) + t65 * (-t14 * (t1 * t410 + t411) + t412 + t414)) - t438 - t179 * (t56 * (t14 * (t15 * (-t26 * t427 - t431) - t432) - t407) * t175 - t316)) + t205 * t449 * t187) + t453) + t455;
t424 = t234 * t6;
t432 = t19 * t14;
t456 = -t432 + t424;
t457 = t13 * t456;
t458 = t27 * t1;
t459 = t458 * t13;
t460 = t4 * t457 + t459;
t207 = t15 * (t207 + t36);
t461 = t164 * t56;
t462 = t44 * t6;
t463 = t26 * t1;
t464 = t463 * t172;
t465 = -t464 + t462;
t466 = -t4 * t465 + t72;
t467 = t26 * t102;
t468 = t11 * t13 * t463 + t4 * t467;
t469 = (t468 * t51 + t81) * t15;
t470 = (-t4 * t87 + t466 * t61) * t14;
t471 = t26 * t15 * (t468 * t50 + t95);
t472 = t12 * t13;
t473 = t4 * t457 + t459;
t474 = (t15 * (t103 * t157 + t145 * t472) + 0.2e1 / 0.3e1 * t36 + 0.8e1 / 0.3e1 * t14 * t473) * t15;
t475 = t13 * t65;
t165 = t143 * t475 * (t14 * t170 - t15 * t165);
t476 = t420 * t26;
t477 = (t15 * (t460 + t164) - t49) * t15 - t476;
t478 = t58 * t84;
t479 = t1 * t13;
t466 = t479 * (t26 * t59 + t478) - (t15 * (t14 * t468 + t15 * t466) - t93) * t15;
t468 = t103 * (t51 * (-t361 * t472 - t473) + t420) - t135 * t15;
t473 = t64 * t466;
t480 = t15 * t170;
t481 = t480 * t437;
t482 = t26 * t198 * (t477 * t65 + t473) + t65 * (t179 * t468 * t56 * t65 + t481);
t483 = t173 * t53;
t484 = t15 * t12;
t485 = t479 * t194 * (t204 * t26 - t484 * t56);
t486 = t33 * t13;
t115 = -t115 * t4 + t117 * t15;
t45 = -t43 * t26 - 0.2e1 / 0.3e1 * t45;
t110 = t110 * t14 + t45 * t6;
t117 = t38 * t26;
t114 = t114 - t117;
t487 = t110 * t4 + t114 * t3;
t488 = t108 * t472;
t489 = -t59 * t13;
t490 = t19 * t26;
t237 = t490 + t237;
t491 = t159 * t237;
t492 = t491 * t4;
t493 = t2 * t489;
t494 = -t493 + t141;
t495 = t159 * t15;
t496 = -t26 * t494 * t495 - t13 * (t14 * t143 * t159 * t458 + t143 * t375 * t51 + t492);
t497 = -t484 * t13;
t375 = t65 * (t14 * t496 - t15 * (t13 * (-t1 * t143 * t159 * t35 + t194 * t199 * t375) + t26 * t159 * (t14 * (-t493 + t141) + t15 * (t2 * t497 - t164))));
t493 = t35 * t13 * t15;
t498 = t64 * t1;
t499 = t62 * t199 * t32 * t14;
t500 = (t204 - t484) * t15;
t501 = t1 * t15;
t502 = t501 * (t13 * t500 + t472);
t503 = t488 * t15 + t51 * (t106 + t487);
t504 = t498 * t486;
t440 = -t26 * t198 * (t15 * t504 + t502 * t65) - t181 * t496 + t179 * (t175 * t503 * t56 + t143 * t440);
t505 = t1 * (t424 / 0.2e1 - t432);
t506 = t27 / 0.2e1;
t507 = t16 * t506 + t4 * t505;
t508 = t2 * t12;
t509 = t1 * (t14 * t508 - t155 * t53);
t510 = t26 * t507;
t511 = t361 * t94;
t512 = t16 * t12;
t513 = t371 * t7;
t514 = t86 - t513;
t515 = t113 * t27;
t516 = t4 * t514 - t515;
t517 = (t1 * (t2 * t35 - t94) + t51 * t512) * t15;
t518 = t1 * t516;
t519 = t58 * t56;
t520 = t14 * t512;
t521 = t194 * (t16 * t519 + t26 * t520);
t122 = -t122;
t522 = t122 * t7;
t21 = t103 * t21 + t522 * t6;
t523 = t122 * t27 + t21 * t4;
t524 = t361 * t143 * t94;
t525 = t103 * t509;
t526 = t59 * t2;
t527 = -t526;
t528 = t142 * t32;
t529 = t152 * t4;
t530 = t13 * t528;
t531 = t155 * t15;
t532 = t531 - t527;
t533 = t26 * t161 * t532;
t534 = t530 - t154 - t529 - t533;
t535 = t361 * t12;
t536 = -t535;
t537 = t536 * t15;
t538 = t15 * (-t143 * t161 * (t4 * (-t432 + t424) + t458) + t26 * t160 * (-t14 * t527 + t537));
t539 = t120 * t32;
t314 = t539 * t314;
t540 = t508 * t1;
t541 = t16 * t32;
t507 = t15 * (t15 * (-t511 - t507) + t540) + t541;
t520 = t15 * (t15 * (t16 * t58 + t520) - t518) - t59 * t16;
t542 = t94 * t2;
t540 = t103 * t15 * (-t51 * t542 + t540) + t51 * t523 + t121 * t32;
t543 = t64 * t520;
t544 = t179 * t540 * t56 * t65;
t545 = t26 * (t179 * (t178 * (t507 * t65 + t543) - t539 * t51) - t213);
t546 = t65 * (-t15 * t534 + t544) - t545;
t547 = t5 * t4;
t548 = t547 * t53;
t549 = t15 * t94;
t550 = t194 * (-t204 * t463 + t549 * t56);
t551 = t1 * t33;
t537 = 0.2e1 / 0.3e1 * t15 * (t1 * t35 - t537) - 0.2e1 / 0.3e1 * t551 * t14 + t194 * (t103 * t527 - t26 * t531);
t552 = t35 * t15;
t553 = t1 * t65;
t145 = t186 * t145 * t15;
t554 = t56 * t65;
t555 = t179 * t65;
t556 = t204 * t1;
t549 = t15 * (t15 * (t556 - t549) + t441);
t557 = (t15 * t532 + t551) * t15;
t551 = t551 * t181;
t558 = t64 * t549;
t559 = t186 * t51;
t560 = t555 * (t65 * (t65 * (t558 - t551) + t557) + t559 * t2);
t561 = t51 / 0.2e1;
t562 = t175 - 0.1e1;
t478 = t64 * t15 * (t14 * (-t59 - t478) + t561 * t12) * t65;
t563 = t58 + t59;
t564 = t51 * t563;
t565 = t180 * (t32 * t51 * t562 - t564 * t64 * t65);
t566 = t5 ^ 2;
t567 = t566 - t26;
t568 = t7 ^ 2;
t569 = t568 - 0.1e1 / 0.2e1;
t570 = t4 ^ 2;
t571 = t567 * t570;
t572 = 0.1e1 + t571;
t573 = t7 * t8;
t574 = t573 * t572;
t575 = t3 * t569;
t576 = t575 * t26 * t6 * t4;
t577 = t574 + t576;
t578 = t204 * t32;
t576 = -t15 * (-t15 * t577 + t578) - t574 - t576;
t579 = t547 * t32;
t580 = t567 * t568;
t581 = 0.1e1 + t580;
t582 = -t26 * t566 + t581;
t583 = t11 * t10;
t584 = t583 * t26;
t585 = t570 * t582 + t568 - t584;
t586 = -0.1e1 / 0.2e1 + t571 * t569 + t568 - t584;
t587 = -t51 + 0.1e1;
t588 = -t26 * (t12 * t58 * t587 + t14 * t586) + t585 * t14 * t51;
t589 = t547 * t12;
t590 = t26 * t585;
t591 = 16;
t592 = t566 * t199;
t593 = t75 * t26;
t594 = t593 * t6;
t595 = t100 * (t591 - t592) + t594;
t596 = t437 * t235 * t19;
t597 = t596 * t8;
t598 = t44 / 0.2e1;
t599 = t82 + t598;
t600 = t568 * t143;
t601 = -t26 + t600;
t602 = t5 * t599;
t603 = t479 * t6 * t601 - t602;
t604 = (t595 * t7 - t597) * t4;
t605 = t199 * t7;
t606 = t4 * (-t143 * t3 * t603 + t604) - t605 * t100;
t607 = t172 * t1;
t608 = t607 * t6;
t609 = t44 * (-t566 / 0.4e1 + 0.1e1 / 0.2e1) - t608;
t610 = -t344 / 0.8e1 + t357 / 0.2e1;
t611 = t568 / 0.4e1;
t612 = t591 * t3;
t613 = t26 * (t566 + t143);
t614 = t38 * t6;
t615 = n3p * t235 * t611 + t14 * t610 - t614 * t7;
t616 = t568 * t199;
t617 = -t55 + t616;
t618 = (-t199 * t7 * (t14 * t609 - t43 * t567) + t613 * t42) * t4;
t619 = t8 * t26;
t620 = t4 * (t612 * t615 + t618) + t619 * t40 + t42 * t617;
t594 = t100 * (t55 * t566 - 0.12e2) + t594;
t621 = -t56 * t568 + t84;
t622 = t479 * t6 * t621 - t602;
t597 = (t594 * t7 - t597) * t4;
t623 = t4 * (-t143 * t3 * t622 + t597) + t100 * t55 * t7;
t624 = t342 * t5;
t625 = t624 * t32;
t626 = t26 * t3;
t627 = 0.1e1 + t566 + t580;
t628 = t8 * (0.3e1 / 0.4e1 * t1 * t6 * t5 - t113 * t567 * t7);
t629 = t627 * n3p / 0.4e1 + t628 * t13;
t630 = -t462 / 0.4e1 - 0.3e1 / 0.8e1 * t607;
t340 = -t7 * (t6 * t82 - t630) + t340 / 0.2e1;
t631 = t90 * t7;
t632 = t570 * t629 - t631 + n3p * (-0.1e1 + t568) / 0.4e1 + t626 * t340 * t4;
t633 = -t566 - 0.2e1 / 0.3e1;
t634 = t568 / 0.2e1;
t635 = t634 * t479;
t636 = 0.3e1 / 0.4e1 * t462 * t119 * t5 + 0.3e1 / 0.4e1 * t479 * t633;
t637 = -t101 * t26 + t98;
t638 = 0.1e1 - t7;
t639 = 0.1e1 + t7;
t640 = t30 * t3;
t641 = t479 * t638 * t639;
t642 = t234 * t14 * t567;
t643 = t19 * t6;
t644 = t7 * (-t643 + t642);
t645 = t644 * t13 / 0.2e1 - t636 * t14;
t646 = t19 * t8;
t647 = t646 * t13;
t648 = t637 * t14;
t649 = t648 * t7 - t647;
t650 = t645 * t570 + t3 * t649 * t4 / 0.2e1 - t641 * t14 / 0.2e1;
t651 = t566 * t84 + t581;
t584 = t570 * t651 + t568 - t584 - 0.1e1;
t652 = t119 * t39 - t90;
t653 = -t119 * t44 - t82;
t654 = t652 * t6;
t655 = -t3 * t653 + t4 * t654;
t656 = t15 * t13;
t657 = t186 * t155;
t658 = t479 * t64;
t60 = t658 * t176 * (t14 * t588 - t15 * (-t26 * (t14 * (t194 * t585 - t589) + t15 * t586) + t51 * (t15 * t585 - t547 * t60)));
t659 = t175 * t16;
t660 = t120 + t659;
t661 = t181 * t179;
t662 = t660 * t661 + t144;
t663 = t413 * t173 * t143;
t664 = (t15 * (t15 * (-t590 * t62 + t606) + t620) + t623) * t15 + t663 * t14;
t665 = t157 * t32;
t666 = t547 * t95 * t143;
t667 = -t199 * (t15 * (t632 - t665) + t650) * t15 - t666;
t668 = t413 * t204;
t669 = t2 * t51 * t584 + t668;
t670 = t58 * t55;
t671 = -t13 * t143 * t669 - t655 * t670;
t672 = t1 * t177 * t576 - t657;
t673 = t656 * t463;
t674 = t143 * t656 * t672 + (t65 * (t64 * t667 + t65 * t664) + t671) * t65 - t673 * t588 * t64 * t176;
t675 = t555 * t14;
t676 = t675 * t660;
t677 = 0.1e1 / t5;
t678 = n3p * t546;
t679 = n3ppp * t565;
t680 = t679 - t678;
t681 = t254 * t16;
t682 = t34 * t205;
t683 = t682 * t680;
t60 = t683 + t681 * t205 * t440 * t229 + (-(-t143 * t13 * (-t657 * t14 + (t14 * t576 - t15 * (-t194 * t26 * t577 + t54 * t579)) * t177 * t1) + t26 * t60 + (t65 * (t64 * (-t199 * (-t14 * t650 + t15 * (t15 * (-t15 * t38 * t572 * t7 - t365 * t4 * t569 * t626) + t15 * (t567 * t635 - t636) * t570 + t15 * (t637 * t640 - t641) / 0.2e1)) + t194 * (-0.24e2 * t157 * t32 + t591 * t632)) + t65 * (t143 * t15 * (-t12 * t157 * (-t51 - 0.1e1) + t13 * (t113 * t51 * t590 + t625)) - t14 * t623 + t51 * ((-t199 * t570 * t609 + t26 * t44) * t15 * t7 + t612 * t15 * (t344 * t611 + t610) * t4) - t194 * (t15 * t56 * t606 + t26 * t620))) - t55 * t547 * (-t14 * t655 + t166) + t656 * (t113 * t199 * t584 - t143 * t625)) * t65) * t662 + t674 * t676) * t227 * t224;
t166 = t34 * t16 * t64;
t209 = t264 * (t56 * t257 * t337 + t97 * (t187 * (t200 * t221 * t334 - t205 * t330 + t336) + t221 * (t26 * t198 * (t64 * (t15 * (t281 * t51 + t285) - t286 * t14 + t194 * (-t26 * t288 + t287 * t56)) + t65 * (-t194 * (t209 * t266 + t26 * t268) + t1 * (t14 * t275 + t15 * (t277 * t51 + t272)))) + t65 * (t14 * t309 - t15 * (-t26 * t160 * (-t14 * t304 + t311) + t312)) + t179 * (t56 * (t15 * (-t14 * (t26 * t293 + t299 * t56) - t300) + t51 * (-t116 * t3 + t291) - t297 * t14) * t175 - t317))) - t338) + t263 * t422;
t60 = (t168 * t60 + t187 * (-t166 * (-t26 * t198 * (-t65 * (t1 * (t14 * t472 - t483) + t485) + t498 * (-t14 * t486 + t493)) + t375 + t179 * (t56 * (t115 * t51 + t14 * (t15 * (-t56 * t106 - t26 * t487) - t488)) * t175 - t499)) + (n3p * (t26 * t198 * (t64 * (-t14 * t518 - t517 + t521) + t65 * (-t194 * (t511 * t56 + t510) + t509)) + t65 * (t534 * t14 - t538) + t179 * (t56 * (t194 * (-t26 * t523 + t524) - t525) * t175 - t314)) + n3pp * (t26 * t198 * (t64 * (-t1 * (t183 - t548) + t550) + t553 * (t14 * t33 - t552)) + t555 * (t554 * t537 - t145))) * t229 * t225)) * t220 * t219;
t106 = t2 * t482;
t268 = t106 * t254 * t1;
t281 = n3pp * t560;
t286 = t662 * t674;
t287 = t286 * t221 * t222 * t168;
t288 = t187 * (-t281 - t268) + t287;
t293 = t254 * t2;
t297 = t293 * t1;
t93 = t97 * (t205 * t288 + t221 * (n3ppp * t180 * (t194 * t32 * t562 + t478) + t297 * (t26 * t198 * (t64 * (-t93 * t14 - t469 + t470 + t471) + t65 * (-t194 * (t26 * t460 + t461) + t208 - t207)) - t165 + t182 * (t135 * t14 + t474))));
t208 = t16 * t64;
t286 = t286 * t143;
t146 = t146 * t9 * t65 * m0;
t299 = t3 * t247 * t5 * t142;
t422 = t184 * t64 - t252;
t460 = t65 * t313;
t509 = t256 * t229;
t511 = t126 * t224 * t229;
t518 = t511 * t64;
t231 = t26 * t216 * t219 * t231 * t220 * t225 * t229;
t572 = t231 * t334;
t436 = t15 * (-t436 * t64 + t65 * (-t1 * t240 * t437 * t59 + t239 * t26 * t433));
t201 = t246 * t201;
t443 = t55 * t245 * (t444 * t65 - t443);
t606 = t64 * t32;
t610 = t606 * t14;
t620 = t12 * t65;
t623 = t610 + t620;
t625 = t216 * t623;
t632 = t231 * t452;
t636 = t64 ^ 2;
t637 = t479 * t15 * t588;
t641 = t636 * t199;
t650 = t659 * t56;
t657 = t495 * (t120 + t650);
t532 = t26 * t239 * t532;
t683 = t173 * t142;
t507 = t159 * t199 * t507 * t178;
t520 = t26 * t65 * (-t198 * t520 + t683);
t540 = t55 * t245 * (-t543 * t65 + t540);
t237 = -t55 * t245 * (-t504 * t181 + t503) - t15 * (-t496 * t64 + t65 * (-t26 * t494 * t661 - t13 * (t143 * t155 * t51 * t555 + t143 * t458 * t675 + t237 * t4 * t555))) + t198 * (-t463 * t181 * t486 + t199 * t502 * t64);
t494 = -t636 + t175;
t496 = t26 * t179 * (t494 * t32 * t51 * t2 + t176 * t549) + t245 * (-t143 * t557 + t65 * (t551 * t199 - t558 * t55));
t502 = t175 * t143;
t503 = t555 * (t564 * t65 * (-t56 * t636 + t175) + t606 * (t502 - t26) * t51);
t504 = t234 * t203;
t543 = t504 * t143;
t549 = t2 * t6;
t248 = t65 * (t15 * (t239 * t26 * t367 * t4 - t13 * t240 * (t543 - t549) * t4) + t248 * t6 * t142) - t15 * t370 * t64;
t370 = t199 * t382 * t64;
t382 = t30 * t65 * t5;
t551 = t231 * t399;
t557 = t636 - t175;
t558 = t187 * t422;
t564 = t558 * t218 + t56 * t251;
t675 = t682 * t216;
t136 = t26 * t675 * t219 * t168 * t220 * (t558 + t254) + t56 * t518 * (t218 * t222 * t14 + t202) + t97 * (t221 * (t558 * t202 - t55 * t245 * (t197 * t65 + t136) + t167 + t198 * (-t199 * t191 * t64 + t246 * t195)) + t221 * t564 * t222 * t14 - t251 * t187 * t205);
t191 = t473 * t65;
t195 = t246 * t466;
t170 = t143 * t656 * (t240 * t33 * t65 - t170 * t64);
t197 = t166 * t440;
t308 = t263 * (t56 * t518 * t454 + t509 * (t187 * (t251 * t452 + t422 * t449 + t625) - t436 - t198 * (t199 * t406 * t64 + t201) + t443) - t632 * t422) + t264 * (t56 * t518 * t337 + t509 * (t187 * (-t216 * (t332 * t64 - t460) - t251 * t334 + t330 * t422) - t55 * t245 * (-t329 * t65 + t325) - t65 * (t15 * (-t13 * (-t241 * t3 + t146) - t26 * t239 * t308) + t299) + t15 * t309 * t64 - t198 * (t199 * t320 * t64 + t246 * t323)) + t572 * t422);
t309 = (t168 * (-t422 * t680 * t229 * t225 - t197 * t422 + (-t662 * (-t26 * t65 * (t176 * t637 + t636 * t667) + t65 * (-0.20e2 * t15 * t178 * t576 * t658 + t175 * t637 * t641 - t554 * t64 * t664 - t143 * t665) + t178 * t667 - t64 * t671) + t674 * t657) * t227 * t224) + t187 * (-t16 * t440 * t229 * t221 - t166 * t237 + (n3p * (-t15 * (-t534 * t64 + t65 * (-t241 * t4 - t243 - t532)) - t540 + t520 + t507) + n3pp * t496 + n3ppp * t503) * t229 * t225)) * t220 * t219;
t287 = t187 * (t281 + t268) - t287;
t320 = t509 * (t1 * (t64 * (-t498 * t440 + t2 * (-t55 * t245 * (t468 + t191) + t170 + t198 * (-t199 * t477 * t64 + t195)) * t221) + t106) + t287 * t422);
t106 = t26 * t320 - t56 * t518 * t680 + t1 * t136 + t2 * (t56 * t518 * (t251 - t255) + t509 * (t187 * (-t216 * (t184 * t65 + t186) + t251 * t253 + t251 * t422) + t218 + t55 * t179 * t193 * t557 - t249 * t64 - t181 * (-t13 * (-t160 * t238 * t4 - t147 * t27) + t162 - t163) + t158 * t26 * t64 + t179 * (0.12e2 * t64 * t636 * t211 * t65 + 0.24e2 * t636 * t206 * t175 - t250 * t176 - 0.20e2 * t215 * t178) + t254 * t564) + t509 * (-t233 * t253 * t422 + t232 * t636)) + t339 * (t56 * t518 * t404 - t509 * (t187 * (-t216 * (t397 * t64 + t382) - t251 * t399 - t393 * t422) - t55 * t245 * (t391 * t65 - t386) + t248 - t198 * (-t246 * t385 + t370)) - t551 * t422) + t677 * t308 + t309 + t518 * (t221 * (t106 * t498 * t199 - t286 * t187 * t222) + t281 * t55);
t28 = -t9 * t18 + t28 * t3;
t136 = -t409 * t6 + t273;
t147 = t3 * t78 + t280;
t158 = t3 * t89 - t282;
t162 = t14 * t147;
t163 = t15 * (t3 * t71 + t279);
t184 = t104 * t3 - t289;
t193 = t22 * t3 - t292;
t206 = t134 * t3 + t294;
t211 = t51 * t2;
t215 = -t140 * t3 + t301;
t238 = t215 - t307;
t152 = t13 * (t152 * t3 - t306) - t26 * t161 * t238;
t249 = t15 * (-t1 * t136 + t15 * (-t28 / 0.2e1 + t318)) - t319;
t250 = t15 * (t158 * t1 + t15 * (t163 - t162)) - t322;
t273 = -(t1 * t206 + t15 * (-t361 * t184 + t193)) * t15 + t324;
t279 = t64 * t250;
t280 = t181 * t152 + t26 * t198 * (-t249 * t65 + t279) + t328 - t182 * t273;
t289 = t218 * t334 * t187 + t56 * t280;
t146 = -t509 * (t187 * (-t216 * (-t332 * t64 + t460) + t251 * t334 + t253 * t280) - t55 * t245 * (t279 * t65 - t273) + t65 * (t15 * (-t13 * (-t241 * t3 + t146) - t26 * t239 * t238) + t299) - t15 * t152 * t64 + t198 * (t199 * t249 * t64 + t246 * t250) + t254 * t289) + t572 * t253;
t238 = t6 * t339;
t239 = t509 * t337;
t241 = t4 * t41;
t249 = t241 * t6;
t250 = t183 * t17;
t273 = t295 * t4;
t279 = t417 * t32;
t292 = t418 + t139;
t294 = -t509 * t404;
t295 = t15 * t3;
t299 = 0.2e1 / 0.3e1 * t379 * t11;
t307 = t161 * t3;
t308 = -t13 * t3 * t388;
t309 = t216 * (t11 * t64 * t5 - t3 * t396 * t65);
t318 = t572 * t399;
t320 = -t509 * (t187 * (t280 * t399 + t334 * t393 + t309) - t26 * t198 * (t3 * t381 * t65 + t3 * t384 * t64) + t181 * (-t26 * t307 * t367 - t369 * t3) + t308 - t182 * (-t295 * t363 - t299)) + t318;
t322 = -t509 * t454;
t323 = t439 * t313;
t324 = t479 * t266;
t325 = t561 * t18 * t266;
t328 = t103 * t4 * t128;
t329 = t15 * (-t124 * t4 + t426 * t3);
t332 = t103 * t479 * t270 * t2 * t53;
t337 = t417 * t266;
t88 = t88 * t3 + t282;
t363 = t13 * t148 * t266;
t303 = t64 * (t15 * (-t1 * (-t83 * t4 + t303) + t15 * (n3p * t1 * t15 * t270 - t14 * t270 * t67)) + t319 * t14);
t319 = t445 * t266 * t51;
t367 = t64 * t266;
t369 = t216 * (t313 * t14 * t65 - t367);
t379 = t572 * t452;
t381 = -t509 * (t187 * (t280 * t452 + t334 * t449 + t369) + t26 * t179 * (t178 * (-t65 * (-t1 * (t15 * (t408 * t3 + t323 + t48) + t324) + t325) + t303) - t319) - t65 * (-t15 * (-t435 * t88 - t363) + t555 * (t15 * (t1 * (-t428 * t3 - t328) - t329) - t332 + t337) * t56)) + t379;
t384 = t479 * t9;
t385 = t463 * t313 * t13;
t388 = t30 * n3p;
t391 = t278 * t26;
t408 = t391 * t13;
t409 = t479 * (t321 * t26 - t331 * t84);
t418 = t13 * t266;
t422 = -t3 * t457 + t384;
t426 = t103 * (t51 * (t361 * t418 + t422) - t479 * t313);
t428 = t437 * t15;
t454 = -t428 * t159 * t113 * t270;
t466 = t15 * t266;
t477 = t335 + t466;
t534 = t13 * t270;
t564 = t4 * t114;
t572 = t108 * t418 * t15;
t637 = t321 * t13;
t664 = t159 * t9 * t143 * t1 * t14;
t667 = t2 * t637;
t671 = t276 * t159 * t51 * t143;
t682 = t323 * t143;
t418 = t26 * t198 * (t65 * t501 * (t656 * t477 - t418) + t498 * t534 * t14 * t15);
t684 = t9 / 0.2e1;
t685 = t684 * t16;
t686 = t2 * t266;
t687 = t361 * t284;
t688 = t686 * t1;
t689 = t16 * t313;
t690 = t16 * t266;
t691 = t113 * t9;
t692 = (-t14 * t690 + t331 * t16) * t15;
t693 = t321 * t16;
t694 = t9 * t122;
t695 = t121 * t313;
t696 = t103 * t15 * (-t211 * t284 + t688);
t697 = t113 * t266;
t698 = t276 * t15;
t699 = t120 * t51;
t700 = t699 * t313;
t305 = t15 * (-t13 * t142 * t270 + t26 * t161 * (-t697 + t698) + t305 - t306);
t306 = t14 * t270;
t701 = t181 * t1;
t698 = t555 * (t65 * (t65 * (t64 * t15 * (-t1 * t266 + t15 * (t335 * t1 + t15 * t284)) - t701 * t306) + (t1 * t306 + t15 * (-t697 + t698)) * t15) - t333 * t211);
t702 = t331 - t321;
t703 = t180 * (t64 * t51 * t702 * t65 + t562 * t313 * t51);
t704 = t3 ^ 2 - t570;
t705 = t704 * t569 * t6;
t706 = t11 * t9 * t567;
t707 = t705 + t706;
t708 = t4 * t313;
t709 = t3 * t32;
t710 = t709 - t708;
t711 = t57 * t14;
t712 = t573 * t704 * t6;
t582 = -t582 * t4 * t3 + t712;
t713 = -t575 * t567 * t4 + t712;
t714 = t51 - 0.1e1;
t715 = -t51 + 0.1e1;
t716 = t3 * t12;
t717 = t143 * t14;
t708 = t709 - t708;
t709 = t203 * t1;
t718 = t4 * t266;
t719 = t716 - t718;
t720 = t19 * t13;
t653 = t4 * t653;
t721 = t439 * t199;
t722 = t64 * t708;
t340 = t334 * t680 * t229 * t225 + t197 * t334 - t662 * (t143 * t656 * (t722 * t19 + t1 * (t26 * (-t51 * t707 + t705 + t706) + t711 * t710) * t177) + (t65 * (t64 * (t143 * t607 * t719 - t199 * t15 * (t720 * t51 * t708 - t649 * t704 / 0.2e1 - t626 * t645 * t4) + t591 * (t629 * t4 * t3 + t340 * t704) * t51) + t65 * (-t143 * t13 * (t582 * t2 * t52 + t709 * t708) + (t143 * t622 * t704 + t15 * (t15 * (t143 * t603 * t704 - t604 * t626) - t591 * t615 * t704 - t618 * t626) - t597 * t626) * t15)) + t14 * t143 * t607 * t710 + t55 * t57 * (t3 * t655 + t4 * (t654 * t3 + t653)) - t721 * (-t651 * t4 * t3 + t712)) * t65 - t673 * (t26 * t15 * (t547 * t714 * t266 + t716 * t5 * t715 + t194 * t582) - t717 * t713) * t64 * t176) * t227 * t224;
t23 = t239 * t238 + t263 * t381 + t264 * (-t509 * (t187 * (t216 * (t65 * t563 + t606) + t334 * (t330 - t280)) + t26 * t198 * (t64 * (t15 * (t1 * (t4 * t89 + t92) + t15 * (t14 * (-t4 * t78 + t79) - t15 * (-t4 * t71 + t73))) + t250) + t65 * (t15 * (-t1 * (t47 + t249) + t15 * (t63 * t12 + t27 * t23 + t25 * t4)) - t17 * t32)) + t13 * (t214 * t32 * t51 + t213) + t181 * (t13 * (t154 + t529) + t26 * t161 * (t292 + t157)) - t182 * ((t1 * (t273 + t133) + t15 * (-t22 * t4 - t125 + t361 * (t104 * t4 + t105))) * t15 - t279)) - t231 * t334 ^ 2) - t339 * t322;
t47 = (t168 * t340 + t187 * (-t166 * (t179 * (t175 * (t51 * (-t110 * t3 + t15 * t184 + t564) + t572) * t56 + t682) - t181 * (t13 * (t3 * t491 - t664 + t671) - t26 * t495 * (t215 + t667)) + t418) + (n3p * (t26 * (t179 * (t178 * (t64 * (t15 * (-t1 * (t3 * t514 + t691) + t692) + t693) + t65 * (t15 * (t15 * (-t3 * t505 + t685 + t687) - t688) - t689)) + t700) - t327) + t65 * (t555 * (t51 * (-t21 * t3 + t694) + t695 + t696) * t56 - t305)) - n3ppp * t703) * t229 * t225)) * t220 * t219;
t63 = t509 * (n3pp * t698 + t287 * t334 - t297 * (t26 * t198 * (t64 * (-(t15 * (t14 * (-t3 * t467 + t408) + t15 * (t3 * t465 + t388)) + t158) * t15 + t409) + t65 * ((t15 * (-t3 * t457 + t310 + t384) - t136) * t15 - t385)) + t65 * (t555 * (-t15 * t206 - t426) * t56 + t454)));
t68 = -t77 + t68;
t71 = t15 * t68;
t73 = t4 * (t15 * (t15 * (-t71 + t353) - t350) + t383);
t77 = t64 * t73;
t79 = t26 * t198 * (t77 + t390) + t389 - t392;
t92 = t218 * t399 * t187 - t56 * t79;
t105 = -t262 * t6 + t263 * t5;
t125 = t91 * t5;
t133 = t235 * t8;
t22 = t509 * (t187 * (-t216 * (-t65 * t4 * (-t57 + t133) + t31 * t64) + t399 * (t393 - t79)) + t26 * t198 * (t64 * t4 * (t15 * (-t1 * t89 + t15 * (t14 * t78 - t15 * (t67 * t5 + t69))) + t235 * t17 * t8) + t65 * t4 * (t17 * t6 * t7 + t501 * t378 * t6 - t25 * t51)) - t13 * t4 * (t214 * t6 * t7 * t51 + t172 * t64 * t142) - t181 * (t26 * t368 * (t656 * t19 + t140) + t529 * t13) + t182 * (-t364 * (t15 * (-t361 * t104 + t22) + t134 * t1) - t417 * t31)) - t231 * t399 ^ 2;
t25 = -t267 * t5 * t51 - t624 * (t15 * (t43 * t51 - t46) - t100);
t69 = t7 * t14;
t78 = t173 * t1;
t89 = t8 * t13;
t104 = t64 * t547 * (t15 * (t1 * t91 + t15 * (-t501 * t39 + t69 * t67)) + t69 * t17);
t134 = t699 * t172 * t9;
t161 = (-t15 * t547 * (t89 * t148 + t435 * t83) + t555 * (t78 * (t349 * t103 * t53 - 0.2e1 / 0.3e1 * t99) + t58 * (t1 * t132 - t123 * t15)) * t56) * t65;
t213 = t64 * t8;
t214 = t547 * (t69 * t65 + t213);
t267 = t216 * t214;
t340 = t632 * t399;
t350 = t13 * t373;
t353 = t391 * t172;
t368 = t44 * t5;
t373 = t463 * t6 * t13;
t381 = t368 + t373;
t384 = t342 * t13;
t130 = t103 * t4 * (-t350 * t51 + t172 * (t37 * t53 + t234)) + t58 * t130;
t84 = t64 * (-t364 * (t15 * (t14 * t26 * t358 - t15 * t381) - t348) - t384 * (t394 * t26 + t395 * t84));
t315 = t398 * t315 * t19;
t389 = t714 * t5 * t8 - t194 * t6;
t390 = t4 * t51;
t391 = t159 * t58;
t392 = t13 * t4;
t91 = -t26 * t198 * (t711 * t278 * t64 * t13 + t342 * t389 * t65 * t656) - t181 * (-t26 * t391 * (t91 - t90) + t392 * (t160 * t143 * t6 * t51 - t159 * (-t549 * t26 + t543))) + t179 * (t437 * t30 * t19 * t51 + t175 * (-t108 * t57 * t9 * t13 + t390 * (-t235 * t108 * t13 - t15 * t359 + t45 * t5)) * t56);
t108 = t372 / 0.2e1;
t398 = t432 * t7;
t417 = t1 * t6;
t529 = t172 * t7 * t142;
t151 = t26 * t364 * t151 * m0 * t396;
t360 = t555 * (-t103 * t15 * t20 * t587 * t9 + t4 * (t51 * (-t360 * t113 + t522 * t5) + t121 * t7 * t5)) * t56;
t346 = t26 * (t387 * t4 + t179 * (t178 * (t64 * t342 * (-t15 * (t417 * t51 - t346 - t398) + t203 * t99 * t715) + t65 * t4 * (-t51 * t1 * (t108 + t371) + t20 * t8 * t15 * t714 + t16 * t7 * t5)) - t699 * t30 * t5));
t387 = t555 * (t65 * (t64 * t342 * t15 * t389 * t65 - t364 * (t211 * t6 + t203 * (t37 * t15 - t234))) + t30 * (-t351 * t14 * t178 + t19 * t64 * t51));
t389 = t180 * (t30 * t562 * t5 * t51 + t64 * t390 * t396 * t65);
t396 = t547 * (t10 * t7 - t575);
t522 = t30 * t566;
t543 = t6 * t32;
t575 = t543 - t522;
t587 = t26 * t568;
t597 = t143 - t587;
t603 = t5 * t6;
t604 = t27 * t26;
t615 = t604 * t5 * t7;
t618 = t4 * (t4 * t597 * t603 - t615);
t622 = t27 * t7;
t629 = t6 * t569;
t645 = t547 * (t629 * t4 + t622);
t649 = t6 * t12;
t651 = -t6 ^ 2 + t566;
t654 = n3p * t651;
t705 = t26 * t654;
t706 = -t143 * t90 * t651;
t708 = t6 * t599;
t711 = t143 * t3;
t712 = t479 * t651;
t723 = t462 / 0.2e1;
t724 = t75 * t6;
t725 = t100 * t651;
t726 = t44 * t651;
t727 = t9 * t566;
t728 = t649 + t727;
t729 = -t543 + t522;
t356 = t143 * t384 * t728 + t199 * t15 * (t15 * (t62 * t4 * t729 - t4 * (t4 * (0.3e1 / 0.4e1 * t725 - t724 * (0.1e1 + t568) / 0.2e1 + t573 * t490 * t235 * t13) + t626 * (t432 * t13 / 0.2e1 - t7 * (t398 * t13 + t368 / 0.4e1 - 0.3e1 / 0.8e1 * t479 * t6)))) - t4 * (t4 * (-t14 * (0.3e1 / 0.4e1 * t119 * t726 + 0.3e1 / 0.4e1 * t464 * t6 + t608 * t568) - t43 * t651 / 0.2e1) + t3 * (t69 * (-t357 * t26 - t356) + t614) / 0.2e1));
t464 = t64 * (t543 - t522);
t490 = t673 * (t14 * (t143 * t645 + t51 * t618) - t26 * t364 * (t9 * t714 * t566 + t649 * t714)) * t64 * t176;
t356 = t399 * t680 * t229 * t225 + t197 * t399 + t662 * (t143 * t656 * (t464 * t2 * t4 + t1 * (t26 * (-t396 * t51 + t396) + t343 * t575) * t177) + (t65 * (t64 * t356 + t65 * (-t143 * t384 * t14 * t575 - (t15 * (t15 * (t62 * t26 * t618 - t4 * (t4 * (t7 * (t101 * t591 * t5 + t705) + t706) - t711 * (t607 * t601 + t708))) - t4 * (t4 * (t643 * (-t568 * t591 - t143) * t13 - t605 * t14 * (t723 * t5 - t712)) + t612 * (t611 * t75 * t14 + t14 * (-t75 / 0.8e1 - t101 / 0.2e1) - t720 * t573))) - t4 * (t4 * (t7 * (-0.12e2 * t101 * t5 + t705) + t706) - t711 * (t607 * t621 + t708))) * t15)) - t143 * t13 * (t342 * t14 * t729 + t211 * t4 * (-t4 * t603 * (t56 + t587) - t615)) + t55 * t364 * (-t566 * t652 * t4 + t6 * t655)) * t65 - t490) * t227 * t224;
t24 = -t105 * t239 - t263 * (t509 * (t187 * (t399 * t449 - t452 * t79 - t267) - t26 * t179 * (t178 * (-t25 * t65 + t104) + t134) + t161) - t340) - t264 * (t509 * (t187 * (t330 * t399 + t334 * t79 - t309) + t26 * t198 * (t64 * t3 * (t15 * (-t1 * t348 + t15 * (t14 * t70 - t15 * t68)) + t383) + t65 * t3 * (-t24 * t51 + t380 + t351 * (t374 + t41))) - t181 * (t26 * t307 * (t125 - t365) - t13 * t149 * t3) - t308 + t182 * (t295 * (t15 * (t361 * t359 - t362) + t129 * t5 * t1) - t299)) + t318) + (-t239 * t264 + t263 * t322) * t677 * t6;
t22 = t26 * t509 * (n3pp * t387 + t287 * t399 + t297 * (t26 * t198 * (t65 * (-t364 * (-t15 * t350 + t378 * t5) - t353) + t84) + t555 * (t554 * t130 + t315))) + t1 * (t97 * (t187 * (t118 * t399 + t205 * t79 + t403) + t221 * (t26 * t198 * (t64 * (-t352 + t343 * (-t71 * t56 + t354)) + t376) + t111 + t377) + t221 * t92 * t222 * t14) + t405) + t2 * (t509 * (t187 * (t216 * (t397 * t64 + t382) + t251 * t399 - t253 * t79) - t55 * t245 * (-t77 * t65 + t386) - t248 + t198 * (-t246 * t73 + t370) + t254 * t92) - t551 * t253) + t339 * t22 - t677 * t24 - (t168 * t356 + t187 * (t166 * t91 + (-n3p * (t65 * (-t15 * (t4 * (t149 + t529) + t151) + t360) - t346) + n3ppp * t389) * t229 * t225)) * t220 * t219;
t24 = t26 * t179 * (t178 * (-t406 * t65 + t444) - t447) - t448;
t68 = t218 * t452 * t187 - t56 * t24;
t70 = t14 * t221;
t71 = t46 * t6;
t73 = t139 * t6 + t282;
t77 = t439 * t12;
t79 = -t95;
t92 = t59 * t65;
t18 = -t231 * t452 ^ 2 + t509 * (t187 * (-t216 * (t92 + t606) + t452 * (t449 - t24)) + t26 * t179 * (t178 * (t64 * (t15 * (t1 * (t301 * t6 - t302) + t15 * (n3p * t15 * t94 - t12 * t14 * t67)) - t250) + t65 * (-t561 * t18 * t32 + t1 * (t15 * (t3 * t46 + t249 - t77) + t479 * t32))) - t445 * t32 * t51) + t65 * (-t15 * (t13 * t148 * t32 + t435 * t419) + t555 * (-t103 * t79 * t2 * t53 + t15 * (t1 * (t429 * t131 + t273) + t15 * (-t124 * t6 * t4 - t3 * t123)) - t279) * t56));
t67 = t62 * t32;
t123 = -t442 * t26 - (t15 * (t67 + t79) - t410) * t15;
t124 = t425 * t51;
t129 = t13 * t32;
t79 = t103 * (t51 * (t361 * t129 + t79) + t442) + t15 * t430;
t139 = t64 * (t26 * t14 * (-t420 + t124) + t15 * (n3p * t32 * t51 - t419));
t148 = t428 * t160 * t59;
t45 = t26 * t198 * (t65 * t501 * (-t174 * t51 + t129) + t498 * t489 * t15) - t181 * (t26 * t495 * (t2 * t486 + t433) - t437 * t159 * t59 * t1) + t179 * (t77 * t143 + t175 * (-t103 * t15 * (t1 * t129 - t124) + t51 * (-t114 * t6 * t4 + t3 * t45)) * t56);
t77 = t2 * t32;
t114 = t211 * t32;
t124 = t16 * t32;
t231 = t33 * t2;
t77 = t26 * t179 * (t178 * (t64 * (t14 * (t124 * t51 - t541) + t501 * t527) + t65 * (t1 * (t15 * (-t114 + t77) - t441) + t561 * t512)) + t699 * t12) + t65 * (-t15 * (t12 * t13 * t142 + t435 * t231 - t434) + t555 * (t12 * t122 * t51 - t103 * t15 * (t1 * t77 - t211 * t415) + t121 * t12) * t56);
t121 = t555 * (t65 * (t65 * (t64 * t15 * (t1 * t32 - t415 * t51) + t701 * t59) - t15 * (t1 * t59 - t15 * t231)) - t450 * t211);
t122 = t12 * t65;
t248 = t180 * t51;
t249 = t248 * (t65 * (t122 + t610) - t12);
t250 = t8 ^ 2;
t273 = -t568 + t250;
t279 = t571 * t273;
t282 = t583 * t143;
t287 = t568 - t250 - t279 - t282;
t299 = -t4 * t273 * t3 * t6 + t574;
t301 = -t566 / 0.2e1 + 0.1e1;
t302 = t234 * t13 * t301;
t307 = t596 * t7;
t308 = t39 / 0.2e1;
t309 = t308 * t5;
t318 = t479 * t273;
t348 = t39 * t301;
t351 = -t462 + t607;
t356 = t38 * t7;
t359 = t14 * n3p;
t362 = t42 * t14;
t365 = t631 * t26;
t370 = t720 * t7;
t378 = t199 * (t15 * (t157 * t12 - t570 * (t362 * t567 * t273 + t7 * (-t598 * t567 + 0.3e1 / 0.4e1 * t608)) - t362 * t273 - t626 * (t6 * (-t611 * n3p + t365) - t630 * t8) * t4 + t308 * t8) - (-t603 * t40 / 0.4e1 + t89 * (t643 / 0.2e1 - t642)) * t570 - t100 * t14 * (t638 - t639) / 0.2e1 - t3 * (-t463 * t235 * t13 * t568 - t648 * t8 - t370) * t4 / 0.2e1) * t15 + t663;
t380 = t673 * (-t26 * t15 * (t194 * t299 + t579 * t714) + t717 * t299) * t64 * t176;
t177 = t662 * (t143 * t656 * (-t450 * t155 + t1 * (-t183 * t58 + t287 * t51 + t250 + t279 + t282 - t568) * t177) + (t65 * (t64 * t378 + t65 * (t143 * t13 * (t299 * t2 * t52 + t441 * t204) + (t15 * (t15 * (t199 * t318 + t4 * (t4 * (t302 * t591 * t7 - t595 * t8 - t307) - t711 * (t89 * (-t424 * t199 + t432) - t309))) - t26 * t359 * t273 + t570 * (-t199 * t14 * (t348 * t7 / 0.2e1 - t609 * t8) - t38 * t591 * t567 * t7) + t591 * (t3 * (t69 * t351 / 0.2e1 + t341 * t273) * t4 - t356)) - t318 * t55 + t4 * (t4 * (-0.12e2 * t302 * t7 - t594 * t8 - t307) - t711 * (t89 * (t424 * t55 + t432) - t309))) * t15)) + t721 * t299 + t547 * (-t441 * t437 * t14 - t15 * (t3 * t652 + t653 * t6) * t55)) * t65 - t380) * t227 * t224;
t18 = t263 * t18 + t264 * (t509 * (t187 * (t24 * t334 + t330 * t452 - t369) - t26 * t179 * (t178 * (-t65 * (-t1 * (t15 * (t3 * t71 + t323 + t48) + t324) + t325) + t303) - t319) + t65 * (-t15 * (-t435 * t73 - t363) + t555 * (t15 * (t1 * (-t132 * t6 * t3 - t328) - t329) - t332 + t337) * t56)) + t379);
t48 = (t168 * (-t452 * t680 * t229 * t225 - t197 * t452 - t177) + t187 * ((n3p * t77 - n3ppp * t249) * t229 * t225 - t166 * t45)) * t220 * t219;
t132 = t509 * (n3pp * t121 + t288 * t452 - t297 * (t26 * t198 * (t123 * t65 + t139) + t65 * (t555 * t79 * t56 + t148)));
t18 = -t26 * t132 + t1 * (-t137 * (t222 * (t221 * (-t202 * t452 * t187 - t26 * t198 * (t64 * (t1 * t419 * t14 - t421 + t194 * (-t56 * t416 * t15 + t423)) + t65 * (-t14 * (t1 * t410 + t411) + t412 + t414)) - t438 - t179 * (t56 * (t14 * (-t430 * t1 + t15 * (-t26 * t427 - t431)) - t407) * t175 - t316)) - t70 * t68 * t222 - t205 * t24 * t187) + t453) + t455) + t2 * (-t632 * t253 + t509 * (t187 * (-t24 * t253 + t251 * t452 + t625) - t198 * (t199 * t406 * t64 + t201) - t436 + t443 + t254 * t68)) + t339 * (t509 * (t187 * (-t24 * t399 + t393 * t452 - t267) - t26 * t179 * (t178 * (-t25 * t65 + t104) + t134) + t161) - t340) + t677 * t18 + t48;
t24 = t4 * t457 + t459;
t25 = -(t15 * (-t24 - t164) + t49) * t15 - t476;
t48 = -t26 * t198 * (t25 * t65 + t473) + t65 * (-t555 * t468 * t56 - t481);
t68 = -t56 * t48;
t48 = t48 * t187;
t104 = t64 * t486;
t132 = t143 * t65 * (t656 * t159 * t33 + t555 * t15 * (t58 * t14 * t13 + t472 * t715)) - t26 * t198 * (-t65 * t15 * (t656 * (-t204 + t484) - t472) + t104 * t15);
t134 = t51 * t94 - t94;
t137 = t143 * t65 * (t480 - t555 * ((t15 * (t4 * t456 + t458 + t535) - t508) * t15 - t413)) + t26 * t198 * (t64 * (t15 * (t86 * t4 + t516) - t26 * (t134 * t14 + t624 * t53)) + t65 * ((t15 * (t4 * t456 + t458 + t535) - t508) * t15 - t413 * t26));
t161 = -t204 + t484;
t177 = t180 * (t562 * t33 * t15 + t64 * (t15 * t161 - t12) * t15 * t65);
t197 = t89 * t301;
t201 = -t629 * t13;
t267 = t173 * t33;
t273 = t173 * t12;
t279 = t14 / 0.2e1;
t79 = t263 * t509 * (-t26 * t198 * (t123 * t65 + t139) - t65 * (t555 * t79 * t56 + t148) + t48 * t452) - t264 * t509 * (t26 * t198 * (t64 * (-(t15 * (t14 * (-t3 * t467 + t408) + t15 * (t3 * t465 + t388)) - t283) * t15 + t409) + t65 * ((t15 * (t422 + t310) - t275) * t15 - t385)) + t65 * (t454 + t555 * (t15 * t296 - t426) * t56) + t48 * t334);
t123 = (t168 * (t662 * (-t143 * t475 * (-t15 * t576 * t176 + t578) + t175 * (t64 * (t15 * (-t199 * (-t4 * (-t4 * t14 * (-0.3e1 / 0.4e1 * t13 * t633 + t634 * t567 * t13) + t622 * t235 * t13) - t279 * t638 * t639 * t13) + t273 * t55 * t15) - t273 * t143) + t65 * (t15 * (t51 * (t7 * (t197 * t570 * t591 - t89 * t199) + t711 * t143 * t201 * t4) + t7 * (-0.12e2 * t197 * t570 + t89 * t55) - t711 * t56 * t201 * t4) + t199 * t267 * t51 + t717 * t173 * t32)) - t656 * t26 * t588 * t64 * t176) * t227 * t224 - t675) + t187 * (t225 * (t229 * (-n3p * t137 - t202) - t14 * t218 * t227) + t166 * t132)) * t220 * t219;
t139 = t2 * t64;
t148 = t254 * t1;
t202 = t674 * t187;
t275 = t229 * t221;
t24 = -t26 * t275 * t187 * (t202 * t1 + (n3pp * t177 * t223 - t139 * (t1 * (t26 * t198 * (t64 * (-t26 * (t14 * (t472 * t51 - t472) + t483) + t519 * t13) + t65 * (t129 * t51 - t174 * t26)) + t180 * t143 * (-t129 * t51 + t174)) + t482) * t225 + t148 * t440) * t220 * t219) + t1 * t97 * (t221 * (t14 * t68 * t222 + t26 * t198 * (t64 * (-t192 - t469 + t470 + t471) + t65 * (t190 - t207 - t194 * (t24 * t26 + t461))) - t165 + t182 * (t135 * t14 + t474)) + t48 * t205) - t2 * t509 * (t48 * t253 + t55 * t245 * (t468 + t191) - t170 - t198 * (-t199 * t25 * t64 + t195) - t254 * t68) - t339 * t509 * (-t26 * t198 * (t65 * (t364 * (t15 * t350 + t5 * (-t374 - t41)) - t353) + t84) - t555 * (t554 * t130 + t315) + t48 * t399) - t677 * t79 - t123;
t25 = t56 * t440;
t48 = -t440 * t187;
t68 = t174 * t143;
t79 = t55 * t175;
t84 = t26 * t495 * (-t59 * t2 + t527);
t123 = t143 * t159 * (t458 * t14 + t155 * t51);
t103 = t179 * (t175 * (-t103 * t15 * t134 + t51 * (t4 * (-t349 * t26 * t6 + t109 * t14) - t604 * t2)) * t56 + t114 * t143);
t109 = t26 * t198 * (t65 * t501 * (t500 + t12) + t498 * t33 * t15);
t114 = t555 * (t65 * t51 * (t58 + t59) + t559);
t130 = -t173 * t59;
t134 = 0.1e1 + t51;
t135 = t235 * t13;
t165 = -t135 * t569;
t170 = t173 * t32;
t68 = (t168 * (-t216 * t253 * t229 * t225 - t662 * ((t65 * (t64 * (t199 * t51 * (t574 * t14 * t13 - t626 * t165 * t4 + t174 * t58) + t143 * t170 * t15) + t65 * (-t143 * t130 * t15 * t134 - t51 * (-t13 * (t7 * (-t612 * t10 + t605) - t55) - t570 * t13 * (t616 * t567 + t613) + t590 * t13 * t51))) + t15 * (t547 * t55 * t489 - t428 * t584)) * t65 - t68 * t58 * t64) * t227 * t224) + t187 * (t64 * t218 * t229 * t224 - t166 * t15 * (-t65 * (t143 * t495 * (-t58 * t13 + t489) - t173 * t159 * t26) + t179 * (-t79 * t129 + t68) * t15) + (n3p * (-t181 * (-t491 * t4 - t123 + t84) + t103 - t109) + t251) * t229 * t225)) * t220 * t219;
t166 = t229 * t225;
t182 = -t239 * t6 + t322;
t190 = t3 * t677;
t191 = t4 * t677;
t153 = -t153 + t530 - t154 - t533;
t154 = t65 * (t15 * t153 - t544) + t545;
t192 = -t56 * t154;
t154 = t154 * t187;
t195 = t99 * t301;
t207 = t646 * t235 * t143;
t282 = t349 * t567;
t283 = t709 * t6;
t288 = t349 * t6;
t296 = t236 * t26;
t303 = t1 * t14;
t74 = t208 * t74 * (-t181 * (-t492 - t123 + t84) + t103 - t109);
t21 = t263 * t509 * (t154 * t452 - t77) - t264 * t509 * (t26 * (t179 * (t178 * (-t64 * (t15 * (t1 * (t3 * t514 + t691) - t692) - t693) + t65 * (t15 * (t15 * (-t3 * t505 + t685 + t687) - t688) - t689)) + t700) - t327) + t65 * (t555 * (t51 * (-t21 * t3 + t694) + t695 + t696) * t56 - t305) + t154 * t334);
t74 = (t74 + (t142 * t674 + t662 * (t143 * t15 * t672 + (-t143 * t669 + t670 * t527 + t65 * (t64 * (t199 * (t15 * (t69 * t37 - t570 * t628 - t626 * (-t371 * t569 - 0.3e1 / 0.8e1 * t372) * t4 + t531 * t32) - (t644 / 0.2e1 - 0.3e1 / 0.4e1 * t14 * t1 * t633) * t570 + t303 * t638 * t639 / 0.2e1 + t3 * t8 * (t296 + t19) * t4 / 0.2e1) * t15 - t547 * t94 * t143) + t65 * (-(t15 * (t15 * (-t4 * (t4 * (t195 * t591 * t7 - t207) - t711 * (t417 * t601 - t398)) + t605 * t99 + t361 * t590) - t2 * t617 - t4 * (t4 * (t199 * t7 * (t283 + t282) + t613 * t2) + t612 * t8 * (t709 / 0.2e1 - t288))) - t4 * (t4 * (-0.12e2 * t195 * t7 - t207) - t711 * (t417 * t621 - t398)) - t99 * t55 * t7) * t15 + t668 * t143))) * t65 - t463 * t15 * t588 * t64 * t176)) * t227 * t224 * t168) * t220 * t219;
t77 = t26 * t560;
t84 = t254 * t55;
t103 = t253 * t187;
t109 = t560 * t187;
t123 = t8 * t301;
t109 = t26 * (t339 * t509 * (t109 * t399 + t387) + t677 * (t263 * t509 * (t109 * t452 - t121) - t264 * t509 * (t109 * t334 + t698)) - t208 * t97 * t114) + t1 * t97 * (t221 * (t14 * t560 * t222 * t55 + t26 * t198 * (t64 * (-t1 * (-t548 + t59) + t550) - t65 * t1 * (-t14 * t33 + t552)) + t555 * (t554 * t537 - t145)) - t77 * t187 * t205) + t2 * t509 * (t560 * (t103 * t26 + t84) + t496) - t509 * (-t546 + (t175 * (t64 * t15 * (-t26 * t547 * t59 - t199 * (t570 * t627 / 0.4e1 + t568 / 0.4e1 - 0.1e1 / 0.4e1 - t583 / 0.2e1) * t15) + t65 * (t26 * t547 * t32 * t15 * t134 + t51 * (t612 * t235 * (-0.1e1 / 0.8e1 + t611) * t4 + t69 * (-t570 * t123 * t199 / 0.2e1 + t619)))) - t246 * t58 * t32) * t222 * t187 * t221 * t662) - t511 * t498 * t143 * t2 * t177;
t121 = t32 * t175;
t134 = t565 * t187;
t77 = t1 * t97 * (t221 * (t26 * t180 * (t194 * (t121 - t32) + t478) - t14 * t565 * t222 * t56) + t134 * t205) + t2 * (-t509 * (t103 * t565 - t503) - t518 * t56 * t565) - t339 * t509 * (t134 * t399 + t389) - t677 * (t263 * t509 * (t134 * t452 + t249) - t264 * t509 * (t134 * t334 - t703)) + t77 * t509;
t103 = 0.1e1 / J__3;
t134 = 0.1e1 / J__2;
t145 = t261 * (J__1 - J__3);
t177 = t260 * (J__1 - J__2);
t182 = t177 * (t191 * t182 - t294 * t3) * t103 - t145 * (t190 * t182 + t294 * t4) * t134;
t207 = t498 * t65;
t25 = t207 * (-t26 * t166 * t187 * (t202 * t2 + (-n3pp * t114 - t148 * (t132 * t2 + t482)) * t220 * t219) + t1 * t97 * (t221 * (t14 * t25 * t222 + t26 * t198 * (t64 * t1 * (t14 * t486 - t493) + t65 * (-t1 * (-t14 * t472 + t483) + t485)) + t375 + t179 * (t56 * (-t14 * (t15 * t487 * t26 + t488) + t51 * (t107 * t14 + t115)) * t175 - t499)) + t48 * t205) - t2 * t509 * (-t254 * t25 + t48 * t253 - t237) - t339 * t509 * (t48 * t399 - t91) + t677 * (-t263 * t509 * (t48 * t452 - t45) + t264 * t509 * (t179 * (t175 * (t51 * (-t110 * t3 + t298 + t564) + t572) * t56 + t682) - t181 * (t13 * (t3 * t491 - t664 + t671) - t26 * t495 * (t304 + t667)) + t418 + t48 * t334)) + t68);
t25 = t26 * t93 + t55 * t257 * (t281 + t268) - t56 * t138 * (t221 * (t679 - t678) + t208 * t440) + t1 * (t97 * t29 + t56 * t138 * (t112 * t205 + t118) + t126 * t221 * t229 * (-t205 ^ 2 * t233 + t226 * t232 * t50)) + t2 * (t56 * t257 * (t218 * t254 + t251 - t255) + t97 * (t221 * (t187 * (-t200 * t253 - t64 * (t205 * t216 + t230)) - t55 * t245 * (t196 * t65 + t189) + t167 + t198 * (-t199 * t210 * t64 + t246 * t80) + t254 * t217) - t251 * t187 * t205) + t259 * t253 * t205) + t339 * (t56 * t257 * t404 + t97 * (t187 * (-t200 * t221 * t399 - t205 * t393 + t403) + t221 * (t26 * t198 * (t64 * (t343 * (-t355 * t56 + t354) - t352) + t376) + t377 + t111)) + t405) + t209 * t677 + t60 - t286 * t219 * t220 * t228 * t168 * t224 * t14 - t25;
t18 = t263 * t18 + t264 * (-t26 * t63 + t1 * (-t97 * (t187 * (t118 * t334 - t205 * t280 - t336) - t221 * (t26 * t198 * (t64 * (t15 * (t147 * t51 + t285) + t158 * t1 * t14 + t194 * (-t162 * t26 + t163 * t56)) + t65 * (t15 * (t20 * t3 * t13 * t51 + t1 * t272 + t14 * t28) + t1 * t136 * t14 - t284 * t61 * t42 * t14)) + t65 * (t14 * t152 - t15 * (t26 * t160 * (t14 * t215 - t311) + t312)) + t179 * (t56 * (t15 * (t193 * t14 * t26 - t300) + t14 * (-t211 * t56 * t184 + t1 * t206) + t51 * (-t116 * t3 + t291)) * t175 - t317)) + t289 * t221 * t222 * t14) - t338) + t2 * t146 + t339 * t320 + t677 * t23 + t263 * t294 + t47);
t23 = t260 * t261;
t28 = t23 * (J__2 - J__3) / J__1;
t29 = t293 * t463;
t18 = n3p * (-t26 * t509 * (n3p * (-t547 * t64 * t142 + t181 * t528) - t297 * t137) + t1 * t97 * (t221 * (t14 * t192 * t222 + t26 * t198 * (t64 * (-t1 * t516 * t14 - t517 + t521) + t65 * (-t14 * (-t508 * t1 + t15 * t510) - t188 * t53 - t526 * t61 * t1)) - t65 * (-t14 * t153 + t538) + t179 * (t56 * (t194 * (-t26 * t523 + t524) - t525) * t175 - t314)) + t154 * t205) - t2 * t509 * (t154 * t253 + t15 * (-t153 * t64 + t65 * (-t242 - t243 - t532)) + t540 - t520 - t507 - t254 * t192) - t339 * t509 * (-t65 * (-t15 * (t4 * (t149 + t529) + t151) + t360) + t346 + t154 * t399) - t677 * t21 - t74) + n3pp * t109 + n3ppp * t77 + t1 * t25 + t106 * t2 + t339 * t22 + t262 * t182 + t677 * t18 - n1 - t28 * t239 - t509 * n3pppp * t565 + t29 * t24;
t21 = t15 * n3pp;
t22 = -t17 * t56 + n3pp;
t24 = t22 * t8;
t25 = -t24 * t6 + t76 * t26;
t45 = t119 * t22;
t47 = t30 * t56 * t45;
t48 = t25 * t3 - t47;
t60 = t66 * t235 * t7 + t20 * t13;
t63 = t684 * t14 * n3pp;
t68 = t3 * t60 - t63;
t74 = t445 * t266;
t76 = t246 * t64;
t77 = t175 * t48 + t76 * t68 + t74;
t80 = t462 - t87;
t91 = t15 * t80;
t93 = t64 * t310;
t97 = t180 * t1;
t106 = t475 * t331 * t150 * m0;
t71 = -t87 * t14 + t71;
t87 = t3 * t71 + t241;
t107 = -t424 * t26 - t432;
t109 = t463 * t9;
t110 = t107 * t3 + t109;
t111 = t144 * t266;
t112 = t240 * t110;
t114 = t87 * t65;
t115 = t64 * t304;
t116 = -t26 * t97 * (t115 + t114) + t13 * (-t112 + t111);
t118 = t326 * t142;
t119 = t659 * t159 * t26;
t126 = t51 * t65;
t132 = t180 * t15;
t137 = t132 * (t126 * t3 * t5 * n3pp + t21 * t270 * t64);
t138 = t13 * t15 * (-t119 * t313 + t118);
t21 = t21 * t175;
t146 = t21 * (t466 * t143 + t335 * t56);
t147 = t661 * t14;
t149 = t65 * t563;
t151 = t186 + t149;
t152 = t266 * t65;
t153 = t333 * t14;
t154 = t153 + t152;
t158 = t180 * t16;
t118 = t118 * t14;
t160 = t26 * t158 * t154;
t162 = t335 + t466;
t163 = t21 * t162;
t167 = t13 * (-t160 + t118);
t182 = t15 * (t661 * (t77 + t163) + t116) + t167;
t184 = t65 * t161;
t189 = t35 * n3pp;
t192 = t11 * t56 * t45;
t193 = -t25 * t4 - t192;
t196 = t506 * t14 * n3pp;
t200 = -t60 * t4 - t196;
t202 = t445 * t12 + t175 * t193 + t76 * t200;
t72 = t72 * t15 - t4 * t91;
t171 = t65 * t72 + t171;
t206 = -t171 * t26 * t97 - t244 * t13;
t209 = -t4 * t71 + t274;
t210 = t458 * t26;
t211 = -t107 * t4 + t210;
t216 = t144 * t12;
t217 = t240 * t211;
t218 = t209 * t65;
t230 = t64 * t141;
t232 = -t26 * t97 * (t230 + t218) + t13 * (t216 - t217);
t233 = t119 * t32 + t683;
t126 = t126 * t547;
t237 = t64 * t189;
t239 = t15 * (-t206 + t132 * (t126 * n3pp + t237));
t242 = -t13 * t15 * t233;
t204 = t484 * t143 - t204 * t56;
t243 = t21 * t204;
t244 = t26 * t202;
t249 = t14 * t232 + t239 - t242 + t147 * (t244 + t243);
t251 = -t65 * t702 + t333;
t253 = t186 * t14;
t255 = t122 + t253;
t257 = t683 * t14;
t259 = t26 * t158 * t255;
t268 = t13 * (-t259 - t257) + t15 * (t232 + t661 * (t21 * t161 + t202));
t270 = 0.1e1 / t151;
t272 = t268 * t65 * t162;
t280 = t34 * t219;
t281 = t280 * t270 * t220;
t285 = t268 * t270;
t286 = t285 * t251;
t289 = t182 - t286;
t291 = t219 * t270 * t220;
t293 = t291 * t223;
t294 = t293 * t227 * t14;
t298 = t270 ^ 2;
t300 = t258 * t268 * t219 * t270 * t298 * t220;
t301 = t300 * t251;
t305 = t301 * t184;
t31 = t27 * t56 * t45 + t31 * t22;
t307 = -t59 * n3pp;
t309 = t65 * (t307 * t64 + t31 * t65) - t174 * t120;
t49 = t49 * t65;
t310 = t64 * t433;
t311 = t42 * t94;
t247 = t247 * t142;
t312 = t26 * t555 * (-t311 + t553 * (t310 + t49)) - t247 * t32;
t314 = t159 * t175;
t315 = -t314 * t484 * n3pp * t51;
t316 = t717 * t198;
t317 = t316 * n3pp * t32 * t53;
t17 = t26 * t15 * (t555 * (t450 * t17 * t65 + t14 * t309) - t97 * (t36 * t65 + t64 * t81));
t36 = -t183 * t64 + t252;
t81 = t158 * t36;
t319 = t26 * t13;
t320 = t15 * (t661 * (-n3pp * t121 * t51 + t309) + t312) + t319 * t81;
t322 = t252 * t14 - t450;
t323 = t285 * t32;
t324 = t291 * t226 * t221;
t325 = t285 * t322 + t320;
t327 = t300 * t322;
t328 = t12 * t120 + t65 * (-t188 * t64 * t26 + t554 * t512);
t329 = t498 * t246;
t86 = t86 * t14 - t288;
t330 = t27 * t2 - t86 * t4;
t332 = t330 * t65;
t335 = t64 * t527;
t216 = t26 * (t97 * (t335 + t332) + t216) - t217;
t217 = t186 * t16 * t65;
t336 = t328 * t14;
t337 = t555 * (t329 * t536 + t58 * (-t650 - t120)) * t15;
t338 = t661 * t328;
t340 = -t26 * (t179 * (t12 * t178 + t253 * t175) * t16 + t257) + t15 * (t216 + t338);
t343 = t462 * t5;
t346 = t4 * (-t479 * t581 / 0.2e1 - t343 / 0.2e1 + t479 * t566);
t349 = -t635 - t4 * (t11 * t102 - t346);
t350 = t156 * t64;
t352 = t463 * t585;
t353 = -t199 * (t350 * t12 + t349 * t65) + t352 * t13 * t178;
t354 = t199 * (t102 * t5 + n3p / 0.4e1);
t355 = -t465 / 0.2e1;
t360 = t566 - 0.1e1 / 0.2e1;
t361 = t26 * t360;
t363 = t361 - t580;
t356 = t356 * t143 * t567 - t587 * t359 * t567 - t354 * t14;
t369 = t355 * t14;
t374 = t7 * (-t43 * t6 + t369) + t341 / 0.2e1;
t128 = t143 * t128;
t375 = t199 * t3;
t376 = -t375 * t374 * t4 + t128 * t7 + t356 * t570;
t377 = t479 * t6;
t378 = t377 + t368;
t44 = -t378 * t5 / 0.2e1 + t44;
t82 = -t7 * (t82 * t567 - t44) + t361 * t362;
t361 = t344 - t357;
t90 = t308 - t90;
t308 = t6 * t90;
t379 = -t361 / 0.4e1 + t308 * t7;
t380 = t143 * (t570 * t82 - t599 * t7) - t375 * t379 * t4;
t382 = t186 + t92;
t383 = t78 * t178;
t385 = t42 * t26;
t386 = -t143 * t383 * t382 + t65 * (t376 * t65 + t380 * t64) - t385 * t577;
t361 = t5 * t361 / 0.2e1 + t100;
t387 = t100 * t26;
t388 = t463 * t5 - t513;
t389 = t13 * t388 - t723;
t393 = t389 * t4;
t397 = t3 * t90;
t398 = t463 * t13;
t403 = t143 * t547 * (t397 + t393) - t398;
t404 = t7 * (t236 - t19);
t405 = t404 * t13 - t279 * t378;
t406 = (t69 * t361 - t89 * t643) * t4;
t407 = -t143 * t4 * (t3 * t405 - t406) - t387 * t69;
t408 = t577 * t14;
t409 = t408 * t64 + t586 * t65;
t411 = t479 * t178;
t412 = t156 * t26;
t413 = -t143 * t411 * t409 + t65 * (t403 * t65 + t407 * t64) + t412 * t14 * t32;
t414 = t553 * t173 * t143;
t416 = (t15 * (t181 * t353 + t386) + t413) * t15 + t414 * t382;
t417 = -t624 * t64 * t65 + t508;
t418 = t13 * t417;
t421 = t155 * t14;
t422 = t211 + t421;
t423 = t475 * t179;
t129 = t129 * t65;
t424 = t64 * t489;
t426 = t26 * t97 * (t424 + t129) - t423 * t422;
t427 = t661 * t418;
t428 = t427 * t143;
t157 = t26 * t555 * (t207 * t497 - t157) * t15;
t429 = t59 * t65 + t186;
t430 = t97 * t429;
t316 = -t26 * (t501 * t198 * t484 - t14 * t430) + t316 * t58 * t1;
t431 = t198 * t58;
t430 = t15 * (t431 * t1 + t430);
t434 = t65 * (t33 * t64 + t122);
t435 = t555 * t51;
t436 = t435 * (t500 * t175 + t434);
t438 = t175 * t15;
t126 = -t248 * (t35 * t64 + t126) + t147 * (-t438 * t204 + t26 * t434);
t24 = t24 * t5 + t345 * t26;
t66 = -t66 * t203 * t7 + t341 * t1;
t204 = t172 * t120 * t8;
t248 = t175 * t24 - t204;
t345 = t76 * t66;
t439 = t4 * t248 + t345 * t4;
t440 = t342 * t180;
t46 = -t135 * t85 - t46 * t5;
t135 = t372 * t26 - t371;
t372 = t172 * t142 * t8;
t441 = t240 * t135;
t442 = t441 + t372;
t443 = t366 * t64;
t444 = t65 * t46;
t447 = t444 + t443;
t448 = -t26 * t440 * t447 - t392 * t442;
t449 = t144 * t6;
t453 = t64 * t7;
t454 = t453 * t5;
t347 = t15 * (-t26 * t440 * (-t65 * t15 * (t368 + t347) - t647 * t64 * t15) + t392 * t181 * t150 * m0 * t6 + t390 * t180 * n3pp * (t181 * t6 - t454));
t119 = t13 * t364 * (-t119 * t5 * t7 + t449);
t368 = t235 * t56;
t364 = t364 * t175;
t390 = t364 * n3pp;
t455 = t147 * (-t26 * t439 + t390 * (t400 * t143 - t368));
t456 = t69 * t64;
t457 = t65 * t8;
t458 = t457 - t456;
t459 = t158 * t547;
t461 = t26 * t459 * t458;
t462 = t144 * t235;
t465 = t462 * t4;
t466 = t13 * (t465 + t461) + t15 * (t448 + t661 * (t390 * t401 + t439));
t394 = t395 + t394;
t454 = t394 * t65 - t454;
t467 = t4 * t454;
t468 = -t268 * t402 * t65;
t469 = t285 * t467;
t470 = t466 + t469;
t471 = t300 * t467 * t184;
t473 = -t26 * t193;
t474 = t200 * t557;
t476 = t473 * t65 * t64 - t26 * t474;
t478 = t79 * t64;
t480 = t143 * t636;
t72 = t179 * (t1 * (-t164 * t26 * t178 + t480 * t164 * t65 + t478 * t72) + t445 * t58 * t64);
t164 = t178 * t141;
t481 = t42 * t211;
t482 = t179 * (t1 * (t480 * t141 * t65 - t164 * t26 + t478 * t209) + t481 * t64);
t483 = t26 * t175;
t484 = -t483 + t480;
t485 = t13 * t541 * t661 * t484;
t486 = t202 * t64 - t476 * t65;
t487 = 0.9e1 * t50;
t488 = 0.12e2 * t59 * t15;
t483 = -t483 + t480;
t490 = t122 * t55 * t64;
t491 = t483 * t32;
t492 = t555 * t16;
t493 = t179 * t15;
t496 = t13 * t492 * (t491 * t14 + t490);
t497 = t314 * n3pp;
t499 = t497 * t53;
t500 = t56 * t499 * t161;
t501 = -t15 * (t493 * t486 - t482) + t496 - t500;
t503 = -t563 * t64 + t252;
t505 = t268 * t64 * t161;
t506 = t285 * t503;
t507 = t270 * t503;
t509 = t507 - t254;
t280 = t280 * t268 * t298 * t220;
t510 = t285 * t55 * t219 * t220;
t511 = t33 * n3pp;
t514 = 0.10e2;
t239 = -t14 * t232 - t239 + t242 + t147 * (-t244 - t243);
t242 = t26 * t268 * t219 * t298 * t220;
t50 = t56 * (t281 * (t239 * t222 * t14 + t268) - t242 * t223 * t227 * t184 * t14) - t281 * (t270 * (-t149 * t268 + t184 * (-t249 + t239)) - t202 * t26 * t54 * t555 - t143 * t132 * (-t122 * n3pp * t53 + t237 * t14) - t13 * t14 * t233 + 0.2e1 * t14 * t206 - t15 * (t26 * t97 * (t169 * t64 + t65 * (-t14 * t4 * t80 + t40 * t3)) + t173 * t150 * m0 * t14 * t65 - t232 + t495 * t175 * t511) - t198 * t194 * n3pp * (t547 * (t51 * t514 - t96) + t488) + t56 * t249 * t222 * t14) + t281 * t268 * (t26 * t298 * t184 ^ 2 + 0.12e2 * t226 * t50);
t54 = t15 * (t26 * t427 + t426);
t80 = -t101 * t55 - t593;
t96 = t479 * t11 * t55;
t132 = t350 * t26;
t149 = t65 * (t4 * t80 + t96);
t150 = t65 * (t149 - t132);
t169 = -t26 * t555 * (t65 * (t230 + t218) + t42 * t32) - t78 * t198 * t56 * t14;
t171 = (-t171 * t180 * t26 - t519 * t479 * t198) * t15;
t206 = t420 * t143 * t64 * t65;
t218 = t97 * t255;
t232 = t437 * t218;
t233 = t15 * (t661 * t150 + t169) - t232;
t243 = n3p * t340;
t244 = n3ppp * t436;
t350 = t244 - t243;
t35 = (t662 * t184 * t416 * t187 * t298 + t187 * (-t662 * (t15 * (t65 * (-t194 * t353 * t56 + t666 * t65) - t26 * t386 * t14) - t14 * t413 + t15 * (t15 * (t65 * (t64 * (-t143 * (-t363 * t570 * t62 + t62 * t568) + t295 * t43 * t10 * t199) + t65 * (-t570 * t15 * (t587 * n3p * t567 + t354) - t640 * t199 * t355 * t15 - t587 * t271)) - t95 * t58 * t143 * t176) - t143 * t175 * (t658 * t181 * t577 + t156 * t35) + (-t143 * t4 * (t3 * t15 * (-t378 / 0.2e1 + t377 * t568) - t30 * t361 * t15) - t387 * t7 * t15) * t64 * t65 + t665 * t26)) + t676 * t416) * t270) * t227 * t225;
t43 = t263 * (t56 * t294 * t325 - t324 * ((t14 * t312 + t270 * (t184 * t320 + t249 * t322) + t17 - t315 - t317) * t222 * t221 - t323) - t327 * t184) + t264 * (t56 * t294 * t289 - t281 * (t270 * (t182 * t184 - t249 * t251 + t272) - t147 * (-t26 * t77 - t146) + t116 * t14 - t15 * (-t26 * t97 * (t65 * (t3 * t91 + t290) + t93) + t106 + t137) - t138) + t305);
t35 = (t223 * (t229 * (t270 * (n3p * (-t26 * t15 * (t555 * (t336 + t217) + t683) - t14 * t216 + t337) + t316 * n3pp + n3ppp * t126) + t184 * t350 * t298) + t416 * t227 * t270 * t662 * t168 * t205) + t275 * (t208 * t184 * t54 * t298 - t208 * (t14 * (-t426 - t428) + t157) * t270) + t35) * t220 * t219;
t62 = n3pp * t430;
t95 = t62 * t270;
t116 = t208 * t54;
t168 = t13 * t492 * (t483 * t313 * t14 + t152 * t55 * t64);
t162 = t56 * t499 * t162;
t176 = t246 * t179;
t193 = t193 * t65 * t64 + t474;
t246 = t15 * (t495 * t202 - t482) - t496 + t176 * t193 * t51 + t500;
t271 = t268 * (t64 * t702 + t460);
t354 = t503 * t298;
t355 = t254 * t270;
t377 = (-t355 + t354) * t268;
t378 = t377 * t251;
t307 = t307 * t557;
t311 = t26 * t179 * (t178 * t433 * t1 + t311 * t64) - t245 * t1 * (t310 * t143 + t49 * t55);
t309 = t64 * t309;
t386 = t13 * t492 * (-t186 * t55 * t65 + t183 * t483);
t52 = t497 * t56 * t32 * t52;
t387 = t268 * (t620 + t253);
t355 = t355 - t354;
t413 = t59 * t64;
t420 = 0.12e2 * t636;
t427 = t553 * t179;
t433 = t179 * t51;
t418 = t15 * (t159 * t13 * t422 + t427 * (-t129 * t55 * t64 - t484 * t489)) - t26 * t433 * (-t557 * t65 * t78 + t418 * t64);
t188 = -t55 * t512 * t65 * t64 + t188 * t26 * t557;
t211 = t179 * (t1 * (t527 * t26 * t178 - t480 * t527 * t65 - t478 * t330) + t139 * t211);
t328 = t64 * t328;
t330 = t492 * (t484 * t32 * t14 + t490);
t474 = t59 * t64;
t484 = t15 * (t427 * (t474 * t55 * t65 + t491) + t314 * t670 * t1);
t489 = t76 * t12 + t33 * t557;
t434 = t64 * t434;
t490 = -t56 * t314 * t53 * t161;
t366 = -t56 * t499 * t402 + t13 * t492 * t547 * (-t457 * t55 * t64 + t69 * t483) - t15 * (-t179 * t4 * (t1 * (-t366 * t26 * t178 + t480 * t366 * t65 + t478 * t46) + t42 * t135 * t64) + t495 * t439) + t176 * t4 * (-t24 * t65 * t64 + t494 * t66) * t51;
t402 = t65 * t7;
t394 = t268 * t4 * (t394 * t64 + t402 * t5);
t439 = t355 * t467 * t268;
t483 = t199 * t64;
t491 = 0.14e2;
t491 = t175 * t491 - t480;
t492 = -t420 + t79;
t494 = t179 * t16;
t496 = t285 * t219 * t220 * t223 * t227 * t14;
t84 = t26 * t281 * (t377 * t184 + t254 * t239) + t281 * (t270 * (t184 * t246 - t239 * t503 + t505) + t26 * t495 * (t14 * t202 + t237 * t181) - t14 * t482 - t15 * (t198 * t189 * t15 - t72) + t485 + t661 * ((-t487 * t58 * t65 * t64 + 0.12e2 * t92 * t64 * t51 + t554 * t548 * t64) * n3pp + t717 * t193) - t56 * t246 * t222 * t14) + t496 * (-t507 * t56 + t84);
t92 = t156 * t557;
t164 = t26 * t179 * (t606 * t42 - t164) + t245 * (t65 * (0.9e1 * t14 * t78 + t209 * t55) + t230 * t143);
t230 = t13 * t427 * (0.12e2 * t122 * t64 + (t641 - t502) * t32 * t14);
t237 = t16 * t54;
t245 = t225 * t187;
t48 = -t263 * (t26 * t281 * (t355 * t322 * t268 + t254 * t320) - t281 * (t270 * (t246 * t322 + t320 * t503 + t387) - t15 * (t311 + t493 * (t65 * (-t76 * t31 - t307) - t309)) - t386 - t52)) - t264 * (t26 * t281 * (t254 * t182 + t378) - t281 * (t270 * (t182 * t503 - t246 * t251 + t271) + t15 * (-t179 * (t1 * (-t304 * t26 * t178 + t480 * t304 * t65 + t478 * t87) + t42 * t110 * t64) + t495 * t77) - t168 + t176 * (t48 * t65 * t64 + t557 * t68) * t51 + t162));
t68 = (t227 * (-t354 * t245 * t416 * t662 + t245 * (t416 * (t558 * t662 - t657) + t662 * (-t143 * t78 * (t382 * t64 - t65 * (-t413 + t252)) + (t15 * (t15 * (-t353 * t64 + t65 * (-t199 * (t122 * t156 - t349 * t64) - t79 * t658 * t585)) - t380 * t557 + t65 * (-t26 * t376 * t64 + t78 * (-t32 * t143 * t178 + t413 * t591 * t175 + t420 * t252))) - t407 * t557 + t65 * (-t26 * t403 * t64 + t479 * (t64 * t586 * t591 * t175 - t717 * t577 * t178 + t420 * t408 * t65))) * t15)) * t270) + t229 * (t270 * (t221 * (t221 * (-n3p * (t15 * (t493 * (t188 * t65 - t328) + t211) + t330) - t484 * n3pp - n3ppp * (t433 * (t489 * t65 + t434) + t490) + t237 * t636) + t208 * t418) + t237) + t354 * t221 * (-t221 * t350 - t116))) * t220 * t219;
t77 = t1 * t2;
t77 = t281 * (t95 * t503 + t254 * (t77 * (-t507 * t233 - t15 * (t495 * t150 - t164) + t230 - t176 * (t149 * t64 - t92) * t51) + t243 - t244) + t77 * t233);
t79 = t662 * t416 * t187;
t87 = t498 * t2;
t149 = t291 * t166;
t176 = t149 * t64;
t48 = t26 * t77 + t84 * t1 + t2 * (-t26 * (-t281 * (t268 * (t298 * t503 ^ 2 + 0.1e1) + t254 * t501) + t242 * t166 * t503 * t64) + t281 * (t270 * (t151 * t268 + t503 * (-t501 + t246)) + t55 * t555 * n3pp * t53 * t636 * t161 - t56 * t198 * n3pp * t53 * t161 + t13 * t494 * (t122 * t492 + t253 * t491) - t15 * (-t179 * (t498 * t491 * t141 + t553 * t492 * t209 + t481 * t65) + t493 * (t476 * t64 + t65 * (t483 * t200 * t65 + t473 * t557 + t202))) + t159 * t26 * t193 * t51 - t254 * t26 * t246) + t510 * t224 * t229 * t636) + t339 * (t26 * t281 * (t254 * t466 + t439) - t281 * (t270 * (t246 * t467 + t466 * t503 + t394) - t366)) - t677 * t48 - t68 + t176 * (t221 * (-t79 * t222 * t56 + t87 * t233 * t55) - t62 * t143);
t47 = t25 * t3 - t47;
t63 = t3 * t60 - t63;
t68 = t175 * t47 + t76 * t63 + t74;
t74 = -t3 * t71 - t241;
t77 = t107 * t3 + t109;
t84 = t240 * t77;
t109 = t74 * t65;
t141 = t64 * t215;
t151 = -t26 * t97 * (t109 - t141) - t13 * (-t84 + t111);
t159 = t15 * (-t151 + t661 * (t68 + t163)) + t167;
t163 = -t281 * t289;
t60 = t60 * t4;
t166 = t158 * t623;
t167 = t281 * t470;
t193 = t97 * t3;
t200 = t13 * t3;
t202 = t295 * t175 * n3pp * t401;
t209 = t13 * (-t158 * t26 * t3 * t458 * t5 - t462 * t3);
t224 = t268 * t3 * t454;
t237 = t301 * t467;
t241 = t281 * t325;
t136 = t136 * t65;
t242 = t42 * t284;
t246 = t247 * t313;
t253 = t175 * n3pp;
t45 = t661 * (t253 * t313 * t51 + t65 * (t64 * t321 * n3pp - t65 * (t9 * t56 * t45 - t269 * t22)) + t445 * t313);
t269 = t319 * t158 * (-t367 * t14 + t460);
t284 = t268 * (t460 * t14 - t367);
t289 = t301 * t322;
t278 = t278 * t55 * t13;
t277 = t277 * t26 * t64;
t295 = t42 * t313;
t301 = t303 * t326 * t198 * t56;
t154 = t437 * t97 * t154;
t276 = t276 * t14;
t303 = t26 * t97 * (-t534 * t65 - t637 * t64);
t304 = t661 * t26;
t313 = t304 * t13 * (t207 * t5 * t3 + t686);
t9 = t9 * t2;
t325 = t64 * t697;
t20 = t661 * (t120 * t266 + t65 * (t626 * t20 * t64 + t554 * t690));
t326 = t15 * (-t97 * (t321 * t65 + t333) + t331 * t198 * t1);
t152 = t435 * (t438 * t477 + t65 * (t306 * t64 - t152));
t306 = t437 * t1;
t331 = t187 * t662;
t82 = (-t79 * t251 * t298 + t331 * (t143 * t553 * t172 * (-t3 * t382 + t4 * (t321 * t65 + t333)) + (t15 * (t143 * t13 * (t2 * t707 + t178 * t5 * t1 * ((t716 - t718) * t65 * t14 + t722)) + t65 * (t65 * (t199 * t374 * t704 - t626 * t356 * t4) - t483 * (t82 * t4 * t3 - t379 * t704)) + t181 * (t199 * (-t65 * (t7 * t102 * t704 - t346 * t626) + t720 * t64 * t719) + t306 * t582 * t178)) - t199 * t411 * (-t707 * t14 * t64 + t65 * t713) - t26 * t432 * t13 * t710 + t65 * (t64 * (t143 * t405 * t704 - t406 * t375) + t65 * (-t143 * t5 * t704 * t90 - t375 * t547 * t389))) * t15 - t334 * t416 * t187) * t270) * t227 * t225;
t21 = t163 * t238 - t263 * (-t281 * (t270 * (-t159 * t322 + t251 * t320 - t284) + t15 * (t45 - t26 * t555 * (t553 * (-t64 * t88 + t136) - t242) + t246) - t269) - t289) - t264 * (-t281 * (t270 * (t251 * (t182 + t159) - t268 * (t185 + t606)) - t13 * (t166 * t26 + t257) - t15 * (-t26 * t97 * (-t292 * t64 + t65 * (t4 * t71 - t274)) - t13 * (t144 * t12 + t240 * (t107 * t4 - t210)) + t661 * (t175 * (t25 * t4 + t192) - t446 + t76 * (t60 + t196) - t21 * t205))) + t300 * t251 ^ 2) - t339 * t241;
t82 = (t82 + t275 * (-t116 * t251 * t298 + t208 * t15 * (t423 * (-t77 + t276) + t303 + t313) * t270) + t34 * (t270 * (-n3p * (t26 * (t494 * (-t153 * t175 - t178 * t266) + t118) + t15 * (t26 * (t97 * (t65 * (t3 * t86 + t9) - t325) + t111) - t84 + t20)) - n3ppp * t152) - t251 * t350 * t298)) * t220 * t219;
t84 = t430 * t270;
t88 = t84 * t251;
t109 = t281 * (n3pp * (t88 + t326) + t297 * (-t251 * t233 * t270 + t15 * (-t26 * t555 * (t65 * (t141 - t109) + t295) + t301 + t661 * t65 * (t65 * (-t3 * t80 + t278) + t277)) - t154));
t21 = t26 * t109 + t1 * (t56 * t294 * (t159 - t286) + t305 - t281 * (t270 * (t159 * t184 + t239 * t251 + t272) - t14 * t151 - t15 * (-t26 * t97 * (t65 * (t3 * t91 + t290) + t93) + t106 + t137) - t138 - t147 * (-t26 * t68 - t146))) + t2 * (t26 * t281 * (t254 * t159 + t378) - t281 * (t270 * (t159 * t503 + t251 * t501 + t271) + t15 * (-t179 * (t1 * (-t215 * t26 * t178 + t480 * t215 * t65 - t478 * t74) + t42 * t77 * t64) + t493 * (t64 * t68 - t65 * (-t26 * t47 * t65 * t64 - t26 * t557 * t63))) - t168 + t162)) - t263 * t167 + t339 * (-t281 * (t270 * (-t159 * t467 + t251 * t466 + t224) - t15 * (t193 * t26 * t447 + t200 * t442 + t661 * (-t3 * t248 - t345 * t3 - t202)) - t209) - t237) - t677 * t21 - t82;
t47 = t213 * t14 + t402;
t41 = -t15 * (t661 * (t253 * t30 * t5 * t51 - t547 * (t65 * (t213 * n3pp * t14 + t402 * t22) - t445 * t7)) - t26 * t624 * t555 * (t65 * (t41 * t65 + t64 * t83) + t38) + t247 * t30 * t5) + t319 * t459 * t47;
t63 = t214 * t268;
t68 = t327 * t467;
t74 = t344 * t26 - t357 * t55;
t77 = t341 * t26 * t64;
t82 = t4 * t65;
t83 = -t26 * t555 * t4 * (t65 * (t444 + t443) + t370) + t368 * t384 * t198;
t91 = t624 * t180;
t93 = t437 * t91 * t458;
t47 = t15 * (t180 * t26 * t47 * t78 + t423 * t4 * (-t135 + t371) - t304 * t392 * (-t207 * t6 + t646));
t78 = -t26 * t4 * (t179 * (t178 * (-t19 * t7 - t235 * t85) - t213 * t432 * t175) * t1 + t372) - t441 * t4;
t85 = t661 * t4 * (-t120 * t5 * t8 - t650 * t8 * t5 + t329 * t549);
t106 = t457 * t14 - t453;
t91 = t15 * (t395 * t342 * t198 + t91 * t106);
t109 = t435 * (-t547 * t65 * t458 + t364 * (-t235 + t400));
t120 = t13 * t7;
t11 = t143 * t13 * (t2 * t396 + t342 * t178 * ((t649 + t727) * t65 * t14 + t464)) + t65 * (t64 * t4 * (t143 * (t7 * (-t712 / 0.2e1 + t343) - t720 * t235 * t597) * t4 - t375 * (-t75 / 0.4e1 - t101 / 0.4e1 + t7 * t5 * t90)) + t65 * t4 * (t4 * (-t199 * (t14 * (t724 - t725) + t643 * t573 * t13) + t600 * t235 * t75) - t375 * (t7 * (-t14 * t381 / 0.2e1 - t370) + t720 / 0.2e1))) + t181 * (t199 * (t65 * t4 * (-t4 * (-t726 / 0.2e1 + t608 * (t568 - t26)) + t11 * t358) + t42 * t4 * t64 * t728) + t398 * t618 * t178);
t24 = t105 * t163 - t263 * (t281 * (t270 * (t320 * t467 + t322 * t466 + t63) + t41) + t68) - t264 * (t281 * (t270 * (t182 * t467 - t251 * t466 - t224) + t15 * (t26 * t193 * (t125 * t64 + t65 * t46) + t200 * (t240 * t135 + t372) + t661 * (t3 * (-t175 * t24 + t204) - t76 * t66 * t3 - t202)) + t209) - t237) + (t163 * t264 - t241 * t263) * t677 * t6;
t11 = ((t79 * t467 * t298 + t331 * (-t143 * t475 * t342 * (t106 * t5 * t547 + t382 * t6) + (t15 * t11 - t143 * t65 * (t64 * t4 * (t3 * (t120 * (t504 + t549) - t279 * t351) - t4 * (-t38 * t651 + t69 * (t654 / 0.2e1 + t101 * t5))) + t65 * t4 * (t6 * (t397 + t393) - t547 * (-t602 - t373))) + t199 * t411 * (t396 * t14 * t64 + t645 * t65) - t26 * t362 * t4 * t575) * t15 + t399 * t416 * t187) * t270) * t227 * t225 + t275 * (t116 * t467 * t298 + t208 * t47 * t270) + t34 * (t270 * (-n3p * (t26 * t4 * (t494 * (-t456 * t175 + t178 * t8) * t5 + t462) + t15 * (t78 + t85)) + n3ppp * t109) + t467 * t350 * t298)) * t220 * t219;
t38 = t84 * t467;
t11 = -t26 * t281 * (n3pp * (t38 - t91) + t297 * (-t467 * t233 * t270 - t15 * (t83 + t661 * t82 * (t74 * t65 + t77)) - t93)) + t1 * (t56 * t294 * (t466 + t469) - t471 + t281 * (-t14 * t448 + t270 * (-t184 * t466 + t239 * t467 + t468) + t119 + t347 + t455)) + t2 * (t26 * t281 * (t254 * t466 + t439) + t281 * (t270 * (-t466 * t503 + t467 * t501 - t394) + t366)) + t339 * (t281 * (t270 * (-t268 * t4 * (t65 * (-t57 + t133) - t453 * t6) + 0.2e1 * t467 * t466) + t13 * (-t158 * t26 * t4 * t458 * t6 + t257) + t15 * (t26 * t440 * (t140 * t64 - t65 * t71) + t392 * (-t240 * t107 + t449 * t8) + t661 * (t4 * (t445 * t6 * t8 + t175 * t25) + t60 * t76 + t390 * (t395 * t8 + t203)))) + t300 * t467 ^ 2) - t677 * t24 - t11;
t24 = t270 * t26 * t184;
t25 = t280 * t322;
t36 = t15 * (-t26 * t555 * (t65 * (-t310 - t49) + t42 * t12) - t198 * t425 * t55 * t15) + t437 * t97 * t36;
t46 = t15 * (t555 * (-t94 * t13 + t553 * (t472 * t65 + t104)) - t67 * t555);
t49 = t26 * (-t15 * (t555 * (t542 - t553 * (t231 * t64 + t508 * t65)) + t174 * t142) + t81) + t435 * (-t56 * t124 * t175 - t539);
t57 = t97 * (-t33 * t65 + t450);
t59 = t435 * (t65 * (t59 * t64 - t252) + t121 * t51);
t27 = t143 * t383 * t322 + t65 * (t64 * (t143 * (t570 * (t348 * t7 + t365 * t567 - t44 * t8) + t599 * t8 - t90 * t7) - t375 * (-t6 * (t39 * t8 + t362 * (t568 - t250)) + t234 * t172 / 0.4e1) * t4) + t65 * (-t128 * t8 + t570 * (-t143 * t567 * (-t40 * t8 + t42 * (-t568 + t250)) + t236 * t172 * t199) - t7 * t143 * t131 - t375 * (t6 * (t117 * t7 - t359 * t634) - t369 * t8) * t4)) - t385 * t287 + t181 * (t199 * (-t65 * (t1 * (t392 * t6 * t3 * t568 + t573 * t13) + t4 * (t4 * t7 * (t100 * t567 - t98 * t6) + t27 * t102)) + t186 * t156) - t306 * t299 * t178);
t10 = t263 * (t281 * (t270 * (t268 * (t183 * t65 + t606) + 0.2e1 * t322 * t320) - t15 * (t661 * (t253 * t12 * t51 + t65 * (-t511 * t64 - t65 * (-t10 * t22 + t192)) + t446) - t26 * t555 * (t42 * t415 + t553 * (-t410 * t65 + t419 * t64)) + t247 * t12) + t319 * t166) + t300 * t322 ^ 2) + t264 * (t281 * (t270 * (t182 * t322 - t251 * t320 + t284) - t15 * (t45 - t26 * t555 * (t553 * (-t64 * t73 + t136) - t242) + t246) + t269) - t289);
t19 = (-t681 * t322 * t54 * t229 * t298 + (-t79 * t322 * t298 - t331 * ((t15 * t27 - t143 * t175 * (-t547 * (-t3 * t599 - t308 * t4) + t498 * t475 * t287 * t14) + t65 * (t64 * (t14 * t26 * t318 - t143 * t4 * (t3 * (-t127 * t5 + t89 * (-t296 + t19)) + t4 * (t14 * (-t302 * t7 + t361 * t8) + t120 * t643))) + t411 * t299 * t199) + t412 * t183) * t15 - t414 * t322 + t452 * t416 * t187) * t270) * t227 * t225 + t34 * (t270 * (n3p * t49 - n3ppp * t59) - t322 * t350 * t298)) * t220 * t219;
t22 = t84 * t222 * t322;
t27 = t4 * t80 + t96;
t34 = t65 * (t27 * t65 - t132);
t39 = -t15 * (t661 * t34 + t169) + t232;
t40 = t39 * t270;
t42 = t173 * t14;
t44 = t15 * (-t555 * (-t13 * t32 + t65 * (t424 + t129)) + t391 * t175 * t13);
t45 = -t143 * t218 + t15 * (t26 * t555 * (-t2 * t32 + t65 * (t335 + t332)) - t556 * t198 * t56 + t661 * t65 * (-t155 * t26 * t64 + t55 * t65 * t94));
t60 = t15 * (t180 * t429 + t431);
t30 = t281 * (n3p * t45 - t285 * t184 + t239 - t331 * ((t15 * (-t143 * t173 * t178 * t382 + t65 * (t130 * t199 * t65 - t170 * t64 * t26) + t181 * t65 * (-t199 * (t4 * (t4 * (t13 * t566 - t580 * t13 / 0.2e1 + G / 0.2e1 - n3 / 0.2e1) + t120 * t265) - t634 * t13) + t319 * t585 * t175)) - t13 * t143 * t178 * t409 + t65 * (t64 * (t143 * t4 * (t30 * t197 * t14 + t165 * t3) - t319 * t573 * t14) + t65 * t13 * (t592 * t570 - t26))) * t15 + t173 * t143 * t382 * t65) * t222 * t221);
t66 = t270 * t229;
t67 = -t54;
t71 = t67 * t270;
t73 = t15 * (t26 * t97 * (t451 - t474) - t555 * t422 + t304 * t417);
t75 = t14 * t13;
t76 = t149 * t87 * t143;
t79 = t163 * t6 - t241;
t81 = -t15 * (t216 + t338) + t257 * t26 + t259;
t84 = t81 * t270;
t8 = t245 * (t142 * t416 + t662 * ((t15 * (-t143 * t178 * t382 * t624 + t65 * (t64 * (t143 * (t570 * (-t108 * t6 + t113 * t363) - t113 * t568) - t375 * t8 * (t1 * t5 / 0.4e1 - t513) * t4) + t65 * (t4 * (t4 * t8 * (t282 * t143 + t283 * t199) - t375 * (t7 * (t709 - t288) + t549 / 0.2e1)) + t37 * t143 * t7)) - t26 * t577 * t2 + t181 * (-t199 * (t65 * (t4 * (t4 * (t1 * t566 - t1 * t581 / 0.2e1) + t265 * t234) - t634 * t1) + t155 * t64 * t12) + t352 * t178)) - t1 * t143 * t178 * t409 + t65 * (t64 * (-t143 * t4 * (t3 * (t404 - t235 * t1 / 0.2e1) + t4 * (-t69 * t195 + t643 * t8)) - t69 * t99 * t26) + t65 * (-t143 * t547 * (-t388 * t4 + t515) - t463)) + t421 * t26 * t32) * t15 + t624 * t143 * t382 * t65)) * t270 * t227;
t7 = -t26 * (t339 * t281 * (t38 - t91) + t677 * (t263 * t293 * t226 * (t22 + t57) - t264 * t281 * (t88 + t326))) + t1 * t281 * (t430 * (-t14 * t222 * t55 + t24) + t316) + t2 * t281 * (t430 * (-t254 * t143 + t26 * t507) + t484) + t281 * (t340 - t331 * (t15 * (t65 * (t64 * (t7 * (t570 * t123 * t143 - t619) - t375 * t6 * (t634 - 0.1e1 / 0.4e1) * t4) + t65 * (-t570 * t14 * (-t199 * t360 / 0.2e1 + t587 * t567) + t717 * t583 - t587 * t14)) - t438 * t589 * t143) - t26 * t65 * (-t33 * t547 * t64 - t589 * t65)) * t15 * t222 * t221) - t60 * t76;
t12 = t436 * t270;
t12 = t1 * (t281 * (t12 * t184 + t126) - t294 * t56 * t436) + t2 * (t281 * (t433 * (t489 * t65 + t434) + t490 + t507 * t436) - t176 * t26 * t436) - t339 * t281 * (t12 * t467 + t109) + t677 * (-t263 * t281 * (t12 * t322 + t59) + t264 * t281 * (t12 * t251 + t152)) - t291 * t258 * t430;
t33 = -t177 * (t167 * t3 + t191 * t79) * t103 + t145 * (-t167 * t4 + t190 * t79) * t134;
t13 = t207 * (-t26 * t275 * t270 * (t416 * t221 * t2 * t187 + (t13 * t16 * t161 * t661 + t223 * (-t1 * t233 - t268)) * t220 * t219 * t64) + t1 * t281 * (t56 * t54 * t222 * t14 + t14 * (-t426 - t428) + t157 + t71 * t184) + t2 * t281 * (t254 * t26 * t54 + t507 * t67 + t418) + t339 * t281 * (-t71 * t467 + t47) + t677 * (t263 * t281 * (t26 * t46 - t71 * t322) + t264 * t281 * (t15 * (t423 * (-t110 + t276) + t303 + t313) + t71 * t251)) + t281 * (n3p * t73 + t501 - t506 - t331 * (t15 * (t15 * (t65 * (t64 * (t143 * (t363 * t570 * t75 - t75 * t568) + t75 * t583 * t199) + t65 * (t13 * t143 * t574 - t375 * t201 * t4)) - t319 * t577) - t143 * t65 * (t267 * t65 - t273 * t64) + t42 * t26 * t32) - t122 * t212 * t199 * t53) * t222 * t221) - t76 * t44);
t13 = -t26 * t281 * (t95 * t184 + t297 * (-t184 * t233 * t270 - t14 * t169 + t171 - t661 * (t26 * t150 * t14 + t206))) + t55 * t294 * (-t297 * t233 + t62) + t56 * t291 * t70 * t227 * (t221 * (t244 - t243) + t116) - t1 * t50 - t2 * (t26 * t280 * t184 * t509 + t56 * t294 * (t501 - t506) + t281 * (t270 * (-t184 * t501 + t249 * t503 + t505) + t26 * t194 * t179 * t486 - t14 * t482 - t15 * (-t72 + t661 * (-t189 * t557 - t189 * t636)) + t485 + t314 * t51 * n3pp * (t547 * (-t487 + t61) + t488) - t254 * t26 * t249) + t510 * t225 * t227 * t64 * t14) - t339 * (t56 * t294 * t470 - t281 * (t14 * t448 + t270 * (t184 * t466 + t249 * t467 - t468) - t119 - t347 - t455) - t471) - t677 * t43 - t35 + t717 * t256 * t416 * t228 * t270 * t662 + t13;
t10 = -t21 * t264 - t263 * (t26 * t324 * (-t208 * t46 * t222 + t87 * t223 * t222 * (t322 * t233 * t270 + t36) - n3pp * t221 * (t22 + t57)) + t1 * (t324 * (t221 * (t222 * (-t14 * t312 + t270 * (-t184 * t320 + t239 * t322) - t17 + t315 + t317) + t14 * t56 * t320 * t226) + t323) + t25 * (t222 * t56 * t14 - t24)) + t2 * (-t26 * t25 * t509 - t281 * (t270 * (t320 * t503 - t322 * t501 + t387) + t15 * (-t311 + t493 * (-t65 * (-t26 * t31 * t65 * t64 - t307) + t309)) - t386 - t52 - t254 * t26 * t320)) + t339 * (t281 * (t270 * (t320 * t467 + t322 * t466 + t63) + t41) + t68) + t677 * t10 + t19);
t16 = t29 * (-t26 * t66 * (t416 * t1 * t187 + (n3pp * t60 * t223 + t148 * (-t44 * t1 + t54) - t139 * (t1 * (t55 * t198 * t15 * (t15 * t472 - t42) - t437 * t180 * t255) + t233) * t225) * t220 * t219) + t1 * t281 * (-t56 * t39 * t222 * t14 - t14 * t169 + t171 - t661 * (t34 * t26 * t14 + t206) + t40 * t184) - t2 * t281 * (t254 * t26 * t39 + t15 * (-t164 + t493 * (t34 * t64 - t65 * (-t27 * t26 * t65 * t64 + t26 * t92))) - t230 - t507 * t39) + t339 * t281 * (t15 * (t83 + t661 * t82 * (t74 * t65 + t77)) + t93 - t40 * t467) + t677 * (t263 * t281 * (-t40 * t322 + t36) + t264 * t281 * (t15 * (-t26 * t555 * (t65 * (t115 + t114) + t295) + t301 + t661 * t65 * (t65 * (-t3 * t80 + t278) + t277)) - t154 + t40 * t251)) + t30 + t496 * t56);
t17 = 0.1e1 / t142;
t17 = -(-t181 * t179 * t660 + G * t142) * t17 + n3;
t19 = J__1 - J__2 - J__3;
t4 = (-t5 * (J__2 * t262 * t260 * t19 * t4 - t3 * J__3 * t262 * t261 * t19) - t26 * t6 * J__2 * J__3 * (-t3 * (t260 ^ 2 - t261 ^ 2) * t4 + t23 - t23 * t26 * t570)) * t677 ^ 2 * t134 * t103 - n4;
Nonb = [t18 n3p * (-t26 * t281 * (-n3p * t142 * t161 - t297 * t45) + t1 * t281 * (-t56 * t81 * t222 * t14 - t144 * t58 * t26 - t14 * t216 - t26 * t661 * (t336 + t217) + t337 + t84 * t184) + t2 * t281 * (t507 * t81 - t15 * (t493 * (-t188 * t65 + t328) - t211) + t330 - t254 * t26 * t81) - t339 * t281 * (-t15 * (t78 + t85) - t465 * t26 - t461 + t84 * t467) - t677 * (t263 * t281 * (t84 * t322 - t49) - t264 * t281 * (t15 * (t26 * (t97 * (t65 * (t3 * t86 + t9) - t325) + t111) - t112 + t20) + t118 * t26 - t160 + t84 * t251)) - (t66 * t681 * t73 + t8) * t220 * t219) + n3pp * t7 + n3ppp * t12 - t1 * t13 + t11 * t339 + t2 * t48 - t262 * t33 - t677 * t10 - n2 + t28 * t163 - t281 * n3pppp * t436 + t16 -t17 t4];

controller_output = NonA\Nonb';
end
